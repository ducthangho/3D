// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yobject.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Y3D.Models
{

    /// <summary>Holder for reflection information generated from yobject.proto</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class YobjectReflection
    {

        #region Descriptor
        /// <summary>File descriptor for yobject.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static YobjectReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "Cg15b2JqZWN0LnByb3RvEgN5M2QiKQoGUG9pbnQzEgkKAXgYASABKAISCQoB",
                  "eRgCIAEoAhIJCgF6GAMgASgCIjwKBEJveDMSGQoEcG1pbhgBIAEoCzILLnkz",
                  "ZC5Qb2ludDMSGQoEcG1heBgCIAEoCzILLnkzZC5Qb2ludDMi9gIKB1lPYmpl",
                  "Y3QSDAoEbmFtZRgBIAEoCRIRCgludW1fZmFjZXMYAiABKAUSGAoDcG9zGAMg",
                  "ASgLMgsueTNkLlBvaW50MxIXCgRiYm94GAQgASgLMgkueTNkLkJveDMSDAoE",
                  "eHJlZhgFIAMoBRIoCgd4c3RhdHVzGAYgASgOMhcueTNkLllPYmplY3QuWHJl",
                  "ZlN0YXR1cxImCgVvdHlwZRgHIAEoDjIXLnkzZC5ZT2JqZWN0Lk9iamVjdFR5",
                  "cGUibgoKWHJlZlN0YXR1cxIOCgpYUkVGX0hJR0hUEAASDAoIWFJFRl9MT1cQ",
                  "ARIUChBYUkVGX0xPV19ESVNQTEFZEAISBwoDQk9YEAMSCgoGTUVSR0VEEAQS",
                  "DAoIT1JJR0lOQUwQBRIJCgVGSU5BTBAGIkcKCk9iamVjdFR5cGUSDAoIR0VP",
                  "TUVUUlkQABIJCgVMSUdIVBABEgoKBkNBTUVSQRACEgkKBVNIQVBFEAMSCQoF",
                  "T1RIRVIQBCIyCgZZR3JvdXASDAoEbmFtZRgBIAEoCRIaCgRvYmpzGAIgAygL",
                  "MgwueTNkLllPYmplY3QiTgoFWUFyZWESDAoEbmFtZRgBIAEoCRIbCgZncm91",
                  "cHMYAiADKAsyCy55M2QuWUdyb3VwEhoKBG9ianMYAyADKAsyDC55M2QuWU9i",
                  "amVjdEINqgIKWTNELk1vZGVsc2IGcHJvdG8z"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Y3D.Models.Point3), global::Y3D.Models.Point3.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Y3D.Models.Box3), global::Y3D.Models.Box3.Parser, new[]{ "Pmin", "Pmax" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Y3D.Models.YObject), global::Y3D.Models.YObject.Parser, new[]{ "Name", "NumFaces", "Pos", "Bbox", "Xref", "Xstatus", "Otype" }, null, new[]{ typeof(global::Y3D.Models.YObject.Types.XrefStatus), typeof(global::Y3D.Models.YObject.Types.ObjectType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Y3D.Models.YGroup), global::Y3D.Models.YGroup.Parser, new[]{ "Name", "Objs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Y3D.Models.YArea), global::Y3D.Models.YArea.Parser, new[]{ "Name", "Groups", "Objs" }, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Point3 : pb::IMessage<Point3>
    {
        private static readonly pb::MessageParser<Point3> _parser = new pb::MessageParser<Point3>(() => new Point3());
        public static pb::MessageParser<Point3> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Y3D.Models.YobjectReflection.Descriptor.MessageTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public Point3()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public Point3(Point3 other) : this()
        {
            x_ = other.x_;
            y_ = other.y_;
            z_ = other.z_;
        }

        public Point3 Clone()
        {
            return new Point3(this);
        }

        /// <summary>Field number for the "x" field.</summary>
        public const int XFieldNumber = 1;
        private float x_;
        public float X
        {
            get { return x_; }
            set
            {
                x_ = value;
            }
        }

        /// <summary>Field number for the "y" field.</summary>
        public const int YFieldNumber = 2;
        private float y_;
        public float Y
        {
            get { return y_; }
            set
            {
                y_ = value;
            }
        }

        /// <summary>Field number for the "z" field.</summary>
        public const int ZFieldNumber = 3;
        private float z_;
        public float Z
        {
            get { return z_; }
            set
            {
                z_ = value;
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as Point3);
        }

        public bool Equals(Point3 other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (X != other.X) return false;
            if (Y != other.Y) return false;
            if (Z != other.Z) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (X != 0F) hash ^= X.GetHashCode();
            if (Y != 0F) hash ^= Y.GetHashCode();
            if (Z != 0F) hash ^= Z.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (X != 0F)
            {
                output.WriteRawTag(13);
                output.WriteFloat(X);
            }
            if (Y != 0F)
            {
                output.WriteRawTag(21);
                output.WriteFloat(Y);
            }
            if (Z != 0F)
            {
                output.WriteRawTag(29);
                output.WriteFloat(Z);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            if (X != 0F)
            {
                size += 1 + 4;
            }
            if (Y != 0F)
            {
                size += 1 + 4;
            }
            if (Z != 0F)
            {
                size += 1 + 4;
            }
            return size;
        }

        public void MergeFrom(Point3 other)
        {
            if (other == null)
            {
                return;
            }
            if (other.X != 0F)
            {
                X = other.X;
            }
            if (other.Y != 0F)
            {
                Y = other.Y;
            }
            if (other.Z != 0F)
            {
                Z = other.Z;
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 13:
                        {
                            X = input.ReadFloat();
                            break;
                        }
                    case 21:
                        {
                            Y = input.ReadFloat();
                            break;
                        }
                    case 29:
                        {
                            Z = input.ReadFloat();
                            break;
                        }
                }
            }
        }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Box3 : pb::IMessage<Box3>
    {
        private static readonly pb::MessageParser<Box3> _parser = new pb::MessageParser<Box3>(() => new Box3());
        public static pb::MessageParser<Box3> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Y3D.Models.YobjectReflection.Descriptor.MessageTypes[1]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public Box3()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public Box3(Box3 other) : this()
        {
            Pmin = other.pmin_ != null ? other.Pmin.Clone() : null;
            Pmax = other.pmax_ != null ? other.Pmax.Clone() : null;
        }

        public Box3 Clone()
        {
            return new Box3(this);
        }

        /// <summary>Field number for the "pmin" field.</summary>
        public const int PminFieldNumber = 1;
        private global::Y3D.Models.Point3 pmin_;
        public global::Y3D.Models.Point3 Pmin
        {
            get { return pmin_; }
            set
            {
                pmin_ = value;
            }
        }

        /// <summary>Field number for the "pmax" field.</summary>
        public const int PmaxFieldNumber = 2;
        private global::Y3D.Models.Point3 pmax_;
        public global::Y3D.Models.Point3 Pmax
        {
            get { return pmax_; }
            set
            {
                pmax_ = value;
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as Box3);
        }

        public bool Equals(Box3 other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Pmin, other.Pmin)) return false;
            if (!object.Equals(Pmax, other.Pmax)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (pmin_ != null) hash ^= Pmin.GetHashCode();
            if (pmax_ != null) hash ^= Pmax.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (pmin_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Pmin);
            }
            if (pmax_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Pmax);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            if (pmin_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pmin);
            }
            if (pmax_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pmax);
            }
            return size;
        }

        public void MergeFrom(Box3 other)
        {
            if (other == null)
            {
                return;
            }
            if (other.pmin_ != null)
            {
                if (pmin_ == null)
                {
                    pmin_ = new global::Y3D.Models.Point3();
                }
                Pmin.MergeFrom(other.Pmin);
            }
            if (other.pmax_ != null)
            {
                if (pmax_ == null)
                {
                    pmax_ = new global::Y3D.Models.Point3();
                }
                Pmax.MergeFrom(other.Pmax);
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            if (pmin_ == null)
                            {
                                pmin_ = new global::Y3D.Models.Point3();
                            }
                            input.ReadMessage(pmin_);
                            break;
                        }
                    case 18:
                        {
                            if (pmax_ == null)
                            {
                                pmax_ = new global::Y3D.Models.Point3();
                            }
                            input.ReadMessage(pmax_);
                            break;
                        }
                }
            }
        }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class YObject : pb::IMessage<YObject>
    {
        private static readonly pb::MessageParser<YObject> _parser = new pb::MessageParser<YObject>(() => new YObject());
        public static pb::MessageParser<YObject> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Y3D.Models.YobjectReflection.Descriptor.MessageTypes[2]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public YObject()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public YObject(YObject other) : this()
        {
            name_ = other.name_;
            numFaces_ = other.numFaces_;
            Pos = other.pos_ != null ? other.Pos.Clone() : null;
            Bbox = other.bbox_ != null ? other.Bbox.Clone() : null;
            xref_ = other.xref_.Clone();
            xstatus_ = other.xstatus_;
            otype_ = other.otype_;
        }

        public YObject Clone()
        {
            return new YObject(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "num_faces" field.</summary>
        public const int NumFacesFieldNumber = 2;
        private int numFaces_;
        public int NumFaces
        {
            get { return numFaces_; }
            set
            {
                numFaces_ = value;
            }
        }

        /// <summary>Field number for the "pos" field.</summary>
        public const int PosFieldNumber = 3;
        private global::Y3D.Models.Point3 pos_;
        public global::Y3D.Models.Point3 Pos
        {
            get { return pos_; }
            set
            {
                pos_ = value;
            }
        }

        /// <summary>Field number for the "bbox" field.</summary>
        public const int BboxFieldNumber = 4;
        private global::Y3D.Models.Box3 bbox_;
        public global::Y3D.Models.Box3 Bbox
        {
            get { return bbox_; }
            set
            {
                bbox_ = value;
            }
        }

        /// <summary>Field number for the "xref" field.</summary>
        public const int XrefFieldNumber = 5;
        private static readonly pb::FieldCodec<int> _repeated_xref_codec
            = pb::FieldCodec.ForInt32(42);
        private readonly pbc::RepeatedField<int> xref_ = new pbc::RepeatedField<int>();
        public pbc::RepeatedField<int> Xref
        {
            get { return xref_; }
        }

        /// <summary>Field number for the "xstatus" field.</summary>
        public const int XstatusFieldNumber = 6;
        private global::Y3D.Models.YObject.Types.XrefStatus xstatus_ = 0;
        public global::Y3D.Models.YObject.Types.XrefStatus Xstatus
        {
            get { return xstatus_; }
            set
            {
                xstatus_ = value;
            }
        }

        /// <summary>Field number for the "otype" field.</summary>
        public const int OtypeFieldNumber = 7;
        private global::Y3D.Models.YObject.Types.ObjectType otype_ = 0;
        public global::Y3D.Models.YObject.Types.ObjectType Otype
        {
            get { return otype_; }
            set
            {
                otype_ = value;
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as YObject);
        }

        public bool Equals(YObject other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Name != other.Name) return false;
            if (NumFaces != other.NumFaces) return false;
            if (!object.Equals(Pos, other.Pos)) return false;
            if (!object.Equals(Bbox, other.Bbox)) return false;
            if (!xref_.Equals(other.xref_)) return false;
            if (Xstatus != other.Xstatus) return false;
            if (Otype != other.Otype) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            if (NumFaces != 0) hash ^= NumFaces.GetHashCode();
            if (pos_ != null) hash ^= Pos.GetHashCode();
            if (bbox_ != null) hash ^= Bbox.GetHashCode();
            hash ^= xref_.GetHashCode();
            if (Xstatus != 0) hash ^= Xstatus.GetHashCode();
            if (Otype != 0) hash ^= Otype.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Name.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Name);
            }
            if (NumFaces != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(NumFaces);
            }
            if (pos_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Pos);
            }
            if (bbox_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(Bbox);
            }
            xref_.WriteTo(output, _repeated_xref_codec);
            if (Xstatus != 0)
            {
                output.WriteRawTag(48);
                output.WriteEnum((int)Xstatus);
            }
            if (Otype != 0)
            {
                output.WriteRawTag(56);
                output.WriteEnum((int)Otype);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            if (Name.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            if (NumFaces != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumFaces);
            }
            if (pos_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
            }
            if (bbox_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bbox);
            }
            size += xref_.CalculateSize(_repeated_xref_codec);
            if (Xstatus != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Xstatus);
            }
            if (Otype != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Otype);
            }
            return size;
        }

        public void MergeFrom(YObject other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
            if (other.NumFaces != 0)
            {
                NumFaces = other.NumFaces;
            }
            if (other.pos_ != null)
            {
                if (pos_ == null)
                {
                    pos_ = new global::Y3D.Models.Point3();
                }
                Pos.MergeFrom(other.Pos);
            }
            if (other.bbox_ != null)
            {
                if (bbox_ == null)
                {
                    bbox_ = new global::Y3D.Models.Box3();
                }
                Bbox.MergeFrom(other.Bbox);
            }
            xref_.Add(other.xref_);
            if (other.Xstatus != 0)
            {
                Xstatus = other.Xstatus;
            }
            if (other.Otype != 0)
            {
                Otype = other.Otype;
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            NumFaces = input.ReadInt32();
                            break;
                        }
                    case 26:
                        {
                            if (pos_ == null)
                            {
                                pos_ = new global::Y3D.Models.Point3();
                            }
                            input.ReadMessage(pos_);
                            break;
                        }
                    case 34:
                        {
                            if (bbox_ == null)
                            {
                                bbox_ = new global::Y3D.Models.Box3();
                            }
                            input.ReadMessage(bbox_);
                            break;
                        }
                    case 42:
                    case 40:
                        {
                            xref_.AddEntriesFrom(input, _repeated_xref_codec);
                            break;
                        }
                    case 48:
                        {
                            xstatus_ = (global::Y3D.Models.YObject.Types.XrefStatus)input.ReadEnum();
                            break;
                        }
                    case 56:
                        {
                            otype_ = (global::Y3D.Models.YObject.Types.ObjectType)input.ReadEnum();
                            break;
                        }
                }
            }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the YObject message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types
        {
            public enum XrefStatus
            {
                [pbr::OriginalName("XREF_HIGHT")]
                XrefHight = 0,
                [pbr::OriginalName("XREF_LOW")]
                XrefLow = 1,
                [pbr::OriginalName("XREF_LOW_DISPLAY")]
                XrefLowDisplay = 2,
                [pbr::OriginalName("BOX")]
                Box = 3,
                [pbr::OriginalName("MERGED")]
                Merged = 4,
                [pbr::OriginalName("ORIGINAL")]
                Original = 5,
                [pbr::OriginalName("FINAL")]
                Final = 6,
            }

            public enum ObjectType
            {
                [pbr::OriginalName("GEOMETRY")]
                Geometry = 0,
                [pbr::OriginalName("LIGHT")]
                Light = 1,
                [pbr::OriginalName("CAMERA")]
                Camera = 2,
                [pbr::OriginalName("SHAPE")]
                Shape = 3,
                [pbr::OriginalName("OTHER")]
                Other = 4,
            }

        }
        #endregion

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class YGroup : pb::IMessage<YGroup>
    {
        private static readonly pb::MessageParser<YGroup> _parser = new pb::MessageParser<YGroup>(() => new YGroup());
        public static pb::MessageParser<YGroup> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Y3D.Models.YobjectReflection.Descriptor.MessageTypes[3]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public YGroup()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public YGroup(YGroup other) : this()
        {
            name_ = other.name_;
            objs_ = other.objs_.Clone();
        }

        public YGroup Clone()
        {
            return new YGroup(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "objs" field.</summary>
        public const int ObjsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Y3D.Models.YObject> _repeated_objs_codec
            = pb::FieldCodec.ForMessage(18, global::Y3D.Models.YObject.Parser);
        private readonly pbc::RepeatedField<global::Y3D.Models.YObject> objs_ = new pbc::RepeatedField<global::Y3D.Models.YObject>();
        public pbc::RepeatedField<global::Y3D.Models.YObject> Objs
        {
            get { return objs_; }
        }

        public override bool Equals(object other)
        {
            return Equals(other as YGroup);
        }

        public bool Equals(YGroup other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Name != other.Name) return false;
            if (!objs_.Equals(other.objs_)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            hash ^= objs_.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Name.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Name);
            }
            objs_.WriteTo(output, _repeated_objs_codec);
        }

        public int CalculateSize()
        {
            int size = 0;
            if (Name.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            size += objs_.CalculateSize(_repeated_objs_codec);
            return size;
        }

        public void MergeFrom(YGroup other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
            objs_.Add(other.objs_);
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            objs_.AddEntriesFrom(input, _repeated_objs_codec);
                            break;
                        }
                }
            }
        }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class YArea : pb::IMessage<YArea>
    {
        private static readonly pb::MessageParser<YArea> _parser = new pb::MessageParser<YArea>(() => new YArea());
        public static pb::MessageParser<YArea> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Y3D.Models.YobjectReflection.Descriptor.MessageTypes[4]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public YArea()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public YArea(YArea other) : this()
        {
            name_ = other.name_;
            groups_ = other.groups_.Clone();
            objs_ = other.objs_.Clone();
        }

        public YArea Clone()
        {
            return new YArea(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "groups" field.</summary>
        public const int GroupsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Y3D.Models.YGroup> _repeated_groups_codec
            = pb::FieldCodec.ForMessage(18, global::Y3D.Models.YGroup.Parser);
        private readonly pbc::RepeatedField<global::Y3D.Models.YGroup> groups_ = new pbc::RepeatedField<global::Y3D.Models.YGroup>();
        public pbc::RepeatedField<global::Y3D.Models.YGroup> Groups
        {
            get { return groups_; }
        }

        /// <summary>Field number for the "objs" field.</summary>
        public const int ObjsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Y3D.Models.YObject> _repeated_objs_codec
            = pb::FieldCodec.ForMessage(26, global::Y3D.Models.YObject.Parser);
        private readonly pbc::RepeatedField<global::Y3D.Models.YObject> objs_ = new pbc::RepeatedField<global::Y3D.Models.YObject>();
        public pbc::RepeatedField<global::Y3D.Models.YObject> Objs
        {
            get { return objs_; }
        }

        public override bool Equals(object other)
        {
            return Equals(other as YArea);
        }

        public bool Equals(YArea other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Name != other.Name) return false;
            if (!groups_.Equals(other.groups_)) return false;
            if (!objs_.Equals(other.objs_)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            hash ^= groups_.GetHashCode();
            hash ^= objs_.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Name.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Name);
            }
            groups_.WriteTo(output, _repeated_groups_codec);
            objs_.WriteTo(output, _repeated_objs_codec);
        }

        public int CalculateSize()
        {
            int size = 0;
            if (Name.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            size += groups_.CalculateSize(_repeated_groups_codec);
            size += objs_.CalculateSize(_repeated_objs_codec);
            return size;
        }

        public void MergeFrom(YArea other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
            groups_.Add(other.groups_);
            objs_.Add(other.objs_);
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            groups_.AddEntriesFrom(input, _repeated_groups_codec);
                            break;
                        }
                    case 26:
                        {
                            objs_.AddEntriesFrom(input, _repeated_objs_codec);
                            break;
                        }
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code

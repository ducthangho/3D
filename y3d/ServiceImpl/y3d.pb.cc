// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: y3d.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "y3d.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace y3d {

namespace {

const ::google::protobuf::Descriptor* YColor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YColor_reflection_ = NULL;
const ::google::protobuf::Descriptor* YPoint3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YPoint3_reflection_ = NULL;
const ::google::protobuf::Descriptor* YBox3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YBox3_reflection_ = NULL;
const ::google::protobuf::Descriptor* YResource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YResource_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* YResource_ResourceType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* YLight_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YLight_reflection_ = NULL;
const ::google::protobuf::Descriptor* YCamera_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YCamera_reflection_ = NULL;
const ::google::protobuf::Descriptor* YMesh_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YMesh_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* YMesh_MeshType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* YMesh_XrefStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* YObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YObject_reflection_ = NULL;
struct YObjectOneofInstance {
  const ::y3d::YLight* light_;
  const ::y3d::YCamera* camera_;
  const ::y3d::YMesh* mesh_;
}* YObject_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* YObject_ExtraEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* YArea_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YArea_reflection_ = NULL;
const ::google::protobuf::Descriptor* YArea_GversEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* YAreaList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YAreaList_reflection_ = NULL;
const ::google::protobuf::Descriptor* YLayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YLayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* YGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* YGroupVer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YGroupVer_reflection_ = NULL;
const ::google::protobuf::Descriptor* FilterView_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilterView_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProjectInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProjectInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SettingData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SettingData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SettingData_DataEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PSetting_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PSetting_reflection_ = NULL;
const ::google::protobuf::Descriptor* YSystem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YSystem_reflection_ = NULL;
const ::google::protobuf::Descriptor* FRangeItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FRangeItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* OptimizeOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OptimizeOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResultReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResultReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* EmptyParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmptyParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* RenameParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RenameParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* Make4TestParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Make4TestParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* OptimizeParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OptimizeParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchOptimizeParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchOptimizeParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* StringParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StringParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewProjectParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewProjectParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseNProject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseNProject_reflection_ = NULL;
const ::google::protobuf::Descriptor* YEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YEvent_reflection_ = NULL;
struct YEventOneofInstance {
  const ::y3d::ENone* noevent_;
  const ::y3d::ESelect* select_;
  const ::y3d::EMove* move_;
  const ::y3d::ERotate* rotate_;
  const ::y3d::EDelete* del_;
  const ::y3d::ESelectMany* select_many_;
}* YEvent_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* ENone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ENone_reflection_ = NULL;
const ::google::protobuf::Descriptor* ESelect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ESelect_reflection_ = NULL;
const ::google::protobuf::Descriptor* ESelectMany_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ESelectMany_reflection_ = NULL;
const ::google::protobuf::Descriptor* EMove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EMove_reflection_ = NULL;
const ::google::protobuf::Descriptor* ERotate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ERotate_reflection_ = NULL;
const ::google::protobuf::Descriptor* EDelete_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EDelete_reflection_ = NULL;
const ::google::protobuf::Descriptor* EIsolate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EIsolate_reflection_ = NULL;
const ::google::protobuf::Descriptor* EUnwrap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EUnwrap_reflection_ = NULL;
struct EUnwrapOneofInstance {
  const ::y3d::MaxUnwrap* max3d_;
  const ::y3d::BlenderUnwrap* blender_;
}* EUnwrap_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* BlenderUnwrap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlenderUnwrap_reflection_ = NULL;
const ::google::protobuf::Descriptor* MaxUnwrap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MaxUnwrap_reflection_ = NULL;
const ::google::protobuf::Descriptor* EPacking_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EPacking_reflection_ = NULL;
struct EPackingOneofInstance {
  const ::y3d::Pack3DMax* packmax_;
  const ::y3d::PackRect* packrect_;
}* EPacking_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* PackRect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackRect_reflection_ = NULL;
const ::google::protobuf::Descriptor* Pack3DMax_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Pack3DMax_reflection_ = NULL;
const ::google::protobuf::Descriptor* ELowpoly_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ELowpoly_reflection_ = NULL;
struct ELowpolyOneofInstance {
  const ::y3d::LPoly3DMax* lp_3dmax_;
  const ::y3d::LPolyBlender* lp_blender_;
  const ::y3d::LPolyMeshlab* lp_meshlab_;
}* ELowpoly_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* LPoly3DMax_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LPoly3DMax_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* LPoly3DMax_OpMode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* LPoly3DMax_NormalMode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* LPolyBlender_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LPolyBlender_reflection_ = NULL;
const ::google::protobuf::Descriptor* LPolyMeshlab_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LPolyMeshlab_reflection_ = NULL;
const ::google::protobuf::Descriptor* ENormal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ENormal_reflection_ = NULL;
struct ENormalOneofInstance {
  const ::y3d::Normal3DMax* normal_3dmax_;
  const ::xnormal::Settings* normal_xnormal_;
}* ENormal_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Normal3DMax_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Normal3DMax_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseEvent_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ObjectType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GVerType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_y3d_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_y3d_2eproto() {
  protobuf_AddDesc_y3d_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "y3d.proto");
  GOOGLE_CHECK(file != NULL);
  YColor_descriptor_ = file->message_type(0);
  static const int YColor_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YColor, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YColor, argb_),
  };
  YColor_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YColor_descriptor_,
      YColor::default_instance_,
      YColor_offsets_,
      -1,
      -1,
      -1,
      sizeof(YColor),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YColor, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YColor, _is_default_instance_));
  YPoint3_descriptor_ = file->message_type(1);
  static const int YPoint3_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, z_),
  };
  YPoint3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YPoint3_descriptor_,
      YPoint3::default_instance_,
      YPoint3_offsets_,
      -1,
      -1,
      -1,
      sizeof(YPoint3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, _is_default_instance_));
  YBox3_descriptor_ = file->message_type(2);
  static const int YBox3_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YBox3, pmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YBox3, pmax_),
  };
  YBox3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YBox3_descriptor_,
      YBox3::default_instance_,
      YBox3_offsets_,
      -1,
      -1,
      -1,
      sizeof(YBox3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YBox3, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YBox3, _is_default_instance_));
  YResource_descriptor_ = file->message_type(3);
  static const int YResource_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, rtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, link_),
  };
  YResource_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YResource_descriptor_,
      YResource::default_instance_,
      YResource_offsets_,
      -1,
      -1,
      -1,
      sizeof(YResource),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, _is_default_instance_));
  YResource_ResourceType_descriptor_ = YResource_descriptor_->enum_type(0);
  YLight_descriptor_ = file->message_type(4);
  static const int YLight_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, diffuse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, specular_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, intensity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, exponent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, excludedmeshesids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, includedonlymeshesids_),
  };
  YLight_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YLight_descriptor_,
      YLight::default_instance_,
      YLight_offsets_,
      -1,
      -1,
      -1,
      sizeof(YLight),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, _is_default_instance_));
  YCamera_descriptor_ = file->message_type(5);
  static const int YCamera_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, rotation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, fov_),
  };
  YCamera_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YCamera_descriptor_,
      YCamera::default_instance_,
      YCamera_offsets_,
      -1,
      -1,
      -1,
      sizeof(YCamera),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, _is_default_instance_));
  YMesh_descriptor_ = file->message_type(6);
  static const int YMesh_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, num_faces_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, bbox_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, res_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, xstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, mtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, vername_),
  };
  YMesh_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YMesh_descriptor_,
      YMesh::default_instance_,
      YMesh_offsets_,
      -1,
      -1,
      -1,
      sizeof(YMesh),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, _is_default_instance_));
  YMesh_MeshType_descriptor_ = YMesh_descriptor_->enum_type(0);
  YMesh_XrefStatus_descriptor_ = YMesh_descriptor_->enum_type(1);
  YObject_descriptor_ = file->message_type(7);
  static const int YObject_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, extra_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, otype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, cate_id_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YObject_default_oneof_instance_, light_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YObject_default_oneof_instance_, camera_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YObject_default_oneof_instance_, mesh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, data_),
  };
  YObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YObject_descriptor_,
      YObject::default_instance_,
      YObject_offsets_,
      -1,
      -1,
      -1,
      YObject_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, _oneof_case_[0]),
      sizeof(YObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, _is_default_instance_));
  YObject_ExtraEntry_descriptor_ = YObject_descriptor_->nested_type(0);
  YArea_descriptor_ = file->message_type(8);
  static const int YArea_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, groups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, objs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, gvers_),
  };
  YArea_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YArea_descriptor_,
      YArea::default_instance_,
      YArea_offsets_,
      -1,
      -1,
      -1,
      sizeof(YArea),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, _is_default_instance_));
  YArea_GversEntry_descriptor_ = YArea_descriptor_->nested_type(0);
  YAreaList_descriptor_ = file->message_type(9);
  static const int YAreaList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YAreaList, areas_),
  };
  YAreaList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YAreaList_descriptor_,
      YAreaList::default_instance_,
      YAreaList_offsets_,
      -1,
      -1,
      -1,
      sizeof(YAreaList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YAreaList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YAreaList, _is_default_instance_));
  YLayer_descriptor_ = file->message_type(10);
  static const int YLayer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLayer, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLayer, groups_),
  };
  YLayer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YLayer_descriptor_,
      YLayer::default_instance_,
      YLayer_offsets_,
      -1,
      -1,
      -1,
      sizeof(YLayer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLayer, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLayer, _is_default_instance_));
  YGroup_descriptor_ = file->message_type(11);
  static const int YGroup_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, objs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, children_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, gv_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, xref_),
  };
  YGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YGroup_descriptor_,
      YGroup::default_instance_,
      YGroup_offsets_,
      -1,
      -1,
      -1,
      sizeof(YGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, _is_default_instance_));
  YGroupVer_descriptor_ = file->message_type(12);
  static const int YGroupVer_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, vname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, groupdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, step_),
  };
  YGroupVer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YGroupVer_descriptor_,
      YGroupVer::default_instance_,
      YGroupVer_offsets_,
      -1,
      -1,
      -1,
      sizeof(YGroupVer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, _is_default_instance_));
  FilterView_descriptor_ = file->message_type(13);
  static const int FilterView_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, otype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, face_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, search_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, aid_),
  };
  FilterView_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FilterView_descriptor_,
      FilterView::default_instance_,
      FilterView_offsets_,
      -1,
      -1,
      -1,
      sizeof(FilterView),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, _is_default_instance_));
  ProjectInfo_descriptor_ = file->message_type(14);
  static const int ProjectInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, pname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, optimize_ops_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, fview_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, optimize_ratio_),
  };
  ProjectInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProjectInfo_descriptor_,
      ProjectInfo::default_instance_,
      ProjectInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProjectInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, _is_default_instance_));
  SettingData_descriptor_ = file->message_type(15);
  static const int SettingData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingData, aset_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingData, data_),
  };
  SettingData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SettingData_descriptor_,
      SettingData::default_instance_,
      SettingData_offsets_,
      -1,
      -1,
      -1,
      sizeof(SettingData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingData, _is_default_instance_));
  SettingData_DataEntry_descriptor_ = SettingData_descriptor_->nested_type(0);
  PSetting_descriptor_ = file->message_type(16);
  static const int PSetting_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSetting, extra_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSetting, max_recent_),
  };
  PSetting_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PSetting_descriptor_,
      PSetting::default_instance_,
      PSetting_offsets_,
      -1,
      -1,
      -1,
      sizeof(PSetting),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSetting, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSetting, _is_default_instance_));
  YSystem_descriptor_ = file->message_type(17);
  static const int YSystem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, working_folder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, default_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, default_setting_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, projects_),
  };
  YSystem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YSystem_descriptor_,
      YSystem::default_instance_,
      YSystem_offsets_,
      -1,
      -1,
      -1,
      sizeof(YSystem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, _is_default_instance_));
  FRangeItem_descriptor_ = file->message_type(18);
  static const int FRangeItem_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, f_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, f_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, fr_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, ratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, has_xref_),
  };
  FRangeItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FRangeItem_descriptor_,
      FRangeItem::default_instance_,
      FRangeItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(FRangeItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, _is_default_instance_));
  OptimizeOptions_descriptor_ = file->message_type(19);
  static const int OptimizeOptions_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeOptions, use_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeOptions, fr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeOptions, min_hpoly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeOptions, out_range_count_),
  };
  OptimizeOptions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OptimizeOptions_descriptor_,
      OptimizeOptions::default_instance_,
      OptimizeOptions_offsets_,
      -1,
      -1,
      -1,
      sizeof(OptimizeOptions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeOptions, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeOptions, _is_default_instance_));
  ResultReply_descriptor_ = file->message_type(20);
  static const int ResultReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultReply, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultReply, message_),
  };
  ResultReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResultReply_descriptor_,
      ResultReply::default_instance_,
      ResultReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResultReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultReply, _is_default_instance_));
  EmptyParam_descriptor_ = file->message_type(21);
  static const int EmptyParam_offsets_[1] = {
  };
  EmptyParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EmptyParam_descriptor_,
      EmptyParam::default_instance_,
      EmptyParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(EmptyParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyParam, _is_default_instance_));
  RenameParam_descriptor_ = file->message_type(22);
  static const int RenameParam_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameParam, use_select_),
  };
  RenameParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RenameParam_descriptor_,
      RenameParam::default_instance_,
      RenameParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(RenameParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameParam, _is_default_instance_));
  Make4TestParam_descriptor_ = file->message_type(23);
  static const int Make4TestParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Make4TestParam, oname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Make4TestParam, lowpoly_),
  };
  Make4TestParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Make4TestParam_descriptor_,
      Make4TestParam::default_instance_,
      Make4TestParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(Make4TestParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Make4TestParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Make4TestParam, _is_default_instance_));
  OptimizeParam_descriptor_ = file->message_type(24);
  static const int OptimizeParam_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeParam, ratio_),
  };
  OptimizeParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OptimizeParam_descriptor_,
      OptimizeParam::default_instance_,
      OptimizeParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(OptimizeParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeParam, _is_default_instance_));
  BatchOptimizeParam_descriptor_ = file->message_type(25);
  static const int BatchOptimizeParam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchOptimizeParam, ratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchOptimizeParam, folder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchOptimizeParam, filename_),
  };
  BatchOptimizeParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BatchOptimizeParam_descriptor_,
      BatchOptimizeParam::default_instance_,
      BatchOptimizeParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(BatchOptimizeParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchOptimizeParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchOptimizeParam, _is_default_instance_));
  StringParam_descriptor_ = file->message_type(26);
  static const int StringParam_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringParam, str_),
  };
  StringParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StringParam_descriptor_,
      StringParam::default_instance_,
      StringParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(StringParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringParam, _is_default_instance_));
  TestParam_descriptor_ = file->message_type(27);
  static const int TestParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParam, test_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParam, anything_),
  };
  TestParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestParam_descriptor_,
      TestParam::default_instance_,
      TestParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(TestParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParam, _is_default_instance_));
  NewProjectParam_descriptor_ = file->message_type(28);
  static const int NewProjectParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewProjectParam, fname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewProjectParam, folder_),
  };
  NewProjectParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NewProjectParam_descriptor_,
      NewProjectParam::default_instance_,
      NewProjectParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(NewProjectParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewProjectParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewProjectParam, _is_default_instance_));
  ResponseNProject_descriptor_ = file->message_type(29);
  static const int ResponseNProject_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNProject, pinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNProject, yal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNProject, sys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNProject, err_),
  };
  ResponseNProject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponseNProject_descriptor_,
      ResponseNProject::default_instance_,
      ResponseNProject_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResponseNProject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNProject, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNProject, _is_default_instance_));
  YEvent_descriptor_ = file->message_type(30);
  static const int YEvent_offsets_[7] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YEvent_default_oneof_instance_, noevent_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YEvent_default_oneof_instance_, select_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YEvent_default_oneof_instance_, move_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YEvent_default_oneof_instance_, rotate_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YEvent_default_oneof_instance_, del_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YEvent_default_oneof_instance_, select_many_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YEvent, event_),
  };
  YEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YEvent_descriptor_,
      YEvent::default_instance_,
      YEvent_offsets_,
      -1,
      -1,
      -1,
      YEvent_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YEvent, _oneof_case_[0]),
      sizeof(YEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YEvent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YEvent, _is_default_instance_));
  ENone_descriptor_ = file->message_type(31);
  static const int ENone_offsets_[1] = {
  };
  ENone_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ENone_descriptor_,
      ENone::default_instance_,
      ENone_offsets_,
      -1,
      -1,
      -1,
      sizeof(ENone),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENone, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENone, _is_default_instance_));
  ESelect_descriptor_ = file->message_type(32);
  static const int ESelect_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelect, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelect, isolate_),
  };
  ESelect_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ESelect_descriptor_,
      ESelect::default_instance_,
      ESelect_offsets_,
      -1,
      -1,
      -1,
      sizeof(ESelect),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelect, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelect, _is_default_instance_));
  ESelectMany_descriptor_ = file->message_type(33);
  static const int ESelectMany_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelectMany, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelectMany, isolate_),
  };
  ESelectMany_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ESelectMany_descriptor_,
      ESelectMany::default_instance_,
      ESelectMany_offsets_,
      -1,
      -1,
      -1,
      sizeof(ESelectMany),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelectMany, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelectMany, _is_default_instance_));
  EMove_descriptor_ = file->message_type(34);
  static const int EMove_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EMove, point_),
  };
  EMove_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EMove_descriptor_,
      EMove::default_instance_,
      EMove_offsets_,
      -1,
      -1,
      -1,
      sizeof(EMove),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EMove, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EMove, _is_default_instance_));
  ERotate_descriptor_ = file->message_type(35);
  static const int ERotate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ERotate, rotate_),
  };
  ERotate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ERotate_descriptor_,
      ERotate::default_instance_,
      ERotate_offsets_,
      -1,
      -1,
      -1,
      sizeof(ERotate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ERotate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ERotate, _is_default_instance_));
  EDelete_descriptor_ = file->message_type(36);
  static const int EDelete_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EDelete, name_),
  };
  EDelete_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EDelete_descriptor_,
      EDelete::default_instance_,
      EDelete_offsets_,
      -1,
      -1,
      -1,
      sizeof(EDelete),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EDelete, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EDelete, _is_default_instance_));
  EIsolate_descriptor_ = file->message_type(37);
  static const int EIsolate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EIsolate, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EIsolate, endisolate_),
  };
  EIsolate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EIsolate_descriptor_,
      EIsolate::default_instance_,
      EIsolate_offsets_,
      -1,
      -1,
      -1,
      sizeof(EIsolate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EIsolate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EIsolate, _is_default_instance_));
  EUnwrap_descriptor_ = file->message_type(38);
  static const int EUnwrap_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EUnwrap, oname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EUnwrap, channel_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(EUnwrap_default_oneof_instance_, max3d_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(EUnwrap_default_oneof_instance_, blender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EUnwrap, setting_),
  };
  EUnwrap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EUnwrap_descriptor_,
      EUnwrap::default_instance_,
      EUnwrap_offsets_,
      -1,
      -1,
      -1,
      EUnwrap_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EUnwrap, _oneof_case_[0]),
      sizeof(EUnwrap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EUnwrap, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EUnwrap, _is_default_instance_));
  BlenderUnwrap_descriptor_ = file->message_type(39);
  static const int BlenderUnwrap_offsets_[1] = {
  };
  BlenderUnwrap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BlenderUnwrap_descriptor_,
      BlenderUnwrap::default_instance_,
      BlenderUnwrap_offsets_,
      -1,
      -1,
      -1,
      sizeof(BlenderUnwrap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlenderUnwrap, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlenderUnwrap, _is_default_instance_));
  MaxUnwrap_descriptor_ = file->message_type(40);
  static const int MaxUnwrap_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaxUnwrap, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaxUnwrap, spacing_),
  };
  MaxUnwrap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MaxUnwrap_descriptor_,
      MaxUnwrap::default_instance_,
      MaxUnwrap_offsets_,
      -1,
      -1,
      -1,
      sizeof(MaxUnwrap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaxUnwrap, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaxUnwrap, _is_default_instance_));
  EPacking_descriptor_ = file->message_type(41);
  static const int EPacking_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, oname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, uvname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, tile_size_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(EPacking_default_oneof_instance_, packmax_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(EPacking_default_oneof_instance_, packrect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, pack_),
  };
  EPacking_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EPacking_descriptor_,
      EPacking::default_instance_,
      EPacking_offsets_,
      -1,
      -1,
      -1,
      EPacking_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, _oneof_case_[0]),
      sizeof(EPacking),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, _is_default_instance_));
  PackRect_descriptor_ = file->message_type(42);
  static const int PackRect_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackRect, density_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackRect, padding_),
  };
  PackRect_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackRect_descriptor_,
      PackRect::default_instance_,
      PackRect_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackRect),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackRect, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackRect, _is_default_instance_));
  Pack3DMax_descriptor_ = file->message_type(43);
  static const int Pack3DMax_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, numtile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, normalize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, rotate_clusters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, fill_holes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, padding_),
  };
  Pack3DMax_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Pack3DMax_descriptor_,
      Pack3DMax::default_instance_,
      Pack3DMax_offsets_,
      -1,
      -1,
      -1,
      sizeof(Pack3DMax),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, _is_default_instance_));
  ELowpoly_descriptor_ = file->message_type(44);
  static const int ELowpoly_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ELowpoly, oname_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ELowpoly_default_oneof_instance_, lp_3dmax_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ELowpoly_default_oneof_instance_, lp_blender_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ELowpoly_default_oneof_instance_, lp_meshlab_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ELowpoly, lowtype_),
  };
  ELowpoly_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ELowpoly_descriptor_,
      ELowpoly::default_instance_,
      ELowpoly_offsets_,
      -1,
      -1,
      -1,
      ELowpoly_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ELowpoly, _oneof_case_[0]),
      sizeof(ELowpoly),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ELowpoly, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ELowpoly, _is_default_instance_));
  LPoly3DMax_descriptor_ = file->message_type(45);
  static const int LPoly3DMax_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, vertex_percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, vertex_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, optimization_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, normals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, favor_compact_faces_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, prevent_flipped_normals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, lock_vertex_position_),
  };
  LPoly3DMax_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LPoly3DMax_descriptor_,
      LPoly3DMax::default_instance_,
      LPoly3DMax_offsets_,
      -1,
      -1,
      -1,
      sizeof(LPoly3DMax),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, _is_default_instance_));
  LPoly3DMax_OpMode_descriptor_ = LPoly3DMax_descriptor_->enum_type(0);
  LPoly3DMax_NormalMode_descriptor_ = LPoly3DMax_descriptor_->enum_type(1);
  LPolyBlender_descriptor_ = file->message_type(46);
  static const int LPolyBlender_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPolyBlender, ratio_),
  };
  LPolyBlender_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LPolyBlender_descriptor_,
      LPolyBlender::default_instance_,
      LPolyBlender_offsets_,
      -1,
      -1,
      -1,
      sizeof(LPolyBlender),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPolyBlender, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPolyBlender, _is_default_instance_));
  LPolyMeshlab_descriptor_ = file->message_type(47);
  static const int LPolyMeshlab_offsets_[1] = {
  };
  LPolyMeshlab_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LPolyMeshlab_descriptor_,
      LPolyMeshlab::default_instance_,
      LPolyMeshlab_offsets_,
      -1,
      -1,
      -1,
      sizeof(LPolyMeshlab),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPolyMeshlab, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPolyMeshlab, _is_default_instance_));
  ENormal_descriptor_ = file->message_type(48);
  static const int ENormal_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, oname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, lowpoly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, highpoly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, tex_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, out_tex_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ENormal_default_oneof_instance_, normal_3dmax_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ENormal_default_oneof_instance_, normal_xnormal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, ntype_),
  };
  ENormal_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ENormal_descriptor_,
      ENormal::default_instance_,
      ENormal_offsets_,
      -1,
      -1,
      -1,
      ENormal_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, _oneof_case_[0]),
      sizeof(ENormal),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, _is_default_instance_));
  Normal3DMax_descriptor_ = file->message_type(49);
  static const int Normal3DMax_offsets_[1] = {
  };
  Normal3DMax_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Normal3DMax_descriptor_,
      Normal3DMax::default_instance_,
      Normal3DMax_offsets_,
      -1,
      -1,
      -1,
      sizeof(Normal3DMax),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Normal3DMax, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Normal3DMax, _is_default_instance_));
  ResponseEvent_descriptor_ = file->message_type(50);
  static const int ResponseEvent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEvent, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEvent, msg_),
  };
  ResponseEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponseEvent_descriptor_,
      ResponseEvent::default_instance_,
      ResponseEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResponseEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEvent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEvent, _is_default_instance_));
  ObjectType_descriptor_ = file->enum_type(0);
  GVerType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_y3d_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YColor_descriptor_, &YColor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YPoint3_descriptor_, &YPoint3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YBox3_descriptor_, &YBox3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YResource_descriptor_, &YResource::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YLight_descriptor_, &YLight::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YCamera_descriptor_, &YCamera::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YMesh_descriptor_, &YMesh::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YObject_descriptor_, &YObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        YObject_ExtraEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::protobuf::Any,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                YObject_ExtraEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YArea_descriptor_, &YArea::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        YArea_GversEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::y3d::YGroupVer,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                YArea_GversEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YAreaList_descriptor_, &YAreaList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YLayer_descriptor_, &YLayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YGroup_descriptor_, &YGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YGroupVer_descriptor_, &YGroupVer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FilterView_descriptor_, &FilterView::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProjectInfo_descriptor_, &ProjectInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SettingData_descriptor_, &SettingData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        SettingData_DataEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::protobuf::Any,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                SettingData_DataEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PSetting_descriptor_, &PSetting::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YSystem_descriptor_, &YSystem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FRangeItem_descriptor_, &FRangeItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OptimizeOptions_descriptor_, &OptimizeOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResultReply_descriptor_, &ResultReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EmptyParam_descriptor_, &EmptyParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RenameParam_descriptor_, &RenameParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Make4TestParam_descriptor_, &Make4TestParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OptimizeParam_descriptor_, &OptimizeParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BatchOptimizeParam_descriptor_, &BatchOptimizeParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StringParam_descriptor_, &StringParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestParam_descriptor_, &TestParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NewProjectParam_descriptor_, &NewProjectParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponseNProject_descriptor_, &ResponseNProject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YEvent_descriptor_, &YEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ENone_descriptor_, &ENone::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ESelect_descriptor_, &ESelect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ESelectMany_descriptor_, &ESelectMany::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EMove_descriptor_, &EMove::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ERotate_descriptor_, &ERotate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EDelete_descriptor_, &EDelete::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EIsolate_descriptor_, &EIsolate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EUnwrap_descriptor_, &EUnwrap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BlenderUnwrap_descriptor_, &BlenderUnwrap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MaxUnwrap_descriptor_, &MaxUnwrap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EPacking_descriptor_, &EPacking::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackRect_descriptor_, &PackRect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Pack3DMax_descriptor_, &Pack3DMax::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ELowpoly_descriptor_, &ELowpoly::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LPoly3DMax_descriptor_, &LPoly3DMax::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LPolyBlender_descriptor_, &LPolyBlender::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LPolyMeshlab_descriptor_, &LPolyMeshlab::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ENormal_descriptor_, &ENormal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Normal3DMax_descriptor_, &Normal3DMax::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponseEvent_descriptor_, &ResponseEvent::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_y3d_2eproto() {
  delete YColor::default_instance_;
  delete YColor_reflection_;
  delete YPoint3::default_instance_;
  delete YPoint3_reflection_;
  delete YBox3::default_instance_;
  delete YBox3_reflection_;
  delete YResource::default_instance_;
  delete YResource_reflection_;
  delete YLight::default_instance_;
  delete YLight_reflection_;
  delete YCamera::default_instance_;
  delete YCamera_reflection_;
  delete YMesh::default_instance_;
  delete YMesh_reflection_;
  delete YObject::default_instance_;
  delete YObject_default_oneof_instance_;
  delete YObject_reflection_;
  delete YArea::default_instance_;
  delete YArea_reflection_;
  delete YAreaList::default_instance_;
  delete YAreaList_reflection_;
  delete YLayer::default_instance_;
  delete YLayer_reflection_;
  delete YGroup::default_instance_;
  delete YGroup_reflection_;
  delete YGroupVer::default_instance_;
  delete YGroupVer_reflection_;
  delete FilterView::default_instance_;
  delete FilterView_reflection_;
  delete ProjectInfo::default_instance_;
  delete ProjectInfo_reflection_;
  delete SettingData::default_instance_;
  delete SettingData_reflection_;
  delete PSetting::default_instance_;
  delete PSetting_reflection_;
  delete YSystem::default_instance_;
  delete YSystem_reflection_;
  delete FRangeItem::default_instance_;
  delete FRangeItem_reflection_;
  delete OptimizeOptions::default_instance_;
  delete OptimizeOptions_reflection_;
  delete ResultReply::default_instance_;
  delete ResultReply_reflection_;
  delete EmptyParam::default_instance_;
  delete EmptyParam_reflection_;
  delete RenameParam::default_instance_;
  delete RenameParam_reflection_;
  delete Make4TestParam::default_instance_;
  delete Make4TestParam_reflection_;
  delete OptimizeParam::default_instance_;
  delete OptimizeParam_reflection_;
  delete BatchOptimizeParam::default_instance_;
  delete BatchOptimizeParam_reflection_;
  delete StringParam::default_instance_;
  delete StringParam_reflection_;
  delete TestParam::default_instance_;
  delete TestParam_reflection_;
  delete NewProjectParam::default_instance_;
  delete NewProjectParam_reflection_;
  delete ResponseNProject::default_instance_;
  delete ResponseNProject_reflection_;
  delete YEvent::default_instance_;
  delete YEvent_default_oneof_instance_;
  delete YEvent_reflection_;
  delete ENone::default_instance_;
  delete ENone_reflection_;
  delete ESelect::default_instance_;
  delete ESelect_reflection_;
  delete ESelectMany::default_instance_;
  delete ESelectMany_reflection_;
  delete EMove::default_instance_;
  delete EMove_reflection_;
  delete ERotate::default_instance_;
  delete ERotate_reflection_;
  delete EDelete::default_instance_;
  delete EDelete_reflection_;
  delete EIsolate::default_instance_;
  delete EIsolate_reflection_;
  delete EUnwrap::default_instance_;
  delete EUnwrap_default_oneof_instance_;
  delete EUnwrap_reflection_;
  delete BlenderUnwrap::default_instance_;
  delete BlenderUnwrap_reflection_;
  delete MaxUnwrap::default_instance_;
  delete MaxUnwrap_reflection_;
  delete EPacking::default_instance_;
  delete EPacking_default_oneof_instance_;
  delete EPacking_reflection_;
  delete PackRect::default_instance_;
  delete PackRect_reflection_;
  delete Pack3DMax::default_instance_;
  delete Pack3DMax_reflection_;
  delete ELowpoly::default_instance_;
  delete ELowpoly_default_oneof_instance_;
  delete ELowpoly_reflection_;
  delete LPoly3DMax::default_instance_;
  delete LPoly3DMax_reflection_;
  delete LPolyBlender::default_instance_;
  delete LPolyBlender_reflection_;
  delete LPolyMeshlab::default_instance_;
  delete LPolyMeshlab_reflection_;
  delete ENormal::default_instance_;
  delete ENormal_default_oneof_instance_;
  delete ENormal_reflection_;
  delete Normal3DMax::default_instance_;
  delete Normal3DMax_reflection_;
  delete ResponseEvent::default_instance_;
  delete ResponseEvent_reflection_;
}

void protobuf_AddDesc_y3d_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_y3d_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::xnormal::protobuf_AddDesc_xnormal_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ty3d.proto\022\003y3d\032\031google/protobuf/any.pr"
    "oto\032\037google/protobuf/timestamp.proto\032\rxn"
    "ormal.proto\"$\n\006YColor\022\014\n\004name\030\001 \001(\t\022\014\n\004a"
    "rgb\030\002 \001(\005\"*\n\007YPoint3\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001"
    "(\002\022\t\n\001z\030\003 \001(\002\"\?\n\005YBox3\022\032\n\004pmin\030\001 \001(\0132\014.y"
    "3d.YPoint3\022\032\n\004pmax\030\002 \001(\0132\014.y3d.YPoint3\"\242"
    "\001\n\tYResource\022\013\n\003rid\030\001 \001(\t\022*\n\005rtype\030\002 \001(\016"
    "2\033.y3d.YResource.ResourceType\022\014\n\004link\030\003 "
    "\001(\t\"N\n\014ResourceType\022\n\n\006BINARY\020\000\022\t\n\005IMAGE"
    "\020\001\022\016\n\nFLATBUFFER\020\002\022\014\n\010PROTOBUF\020\003\022\t\n\005CAPN"
    "P\020\004\"\250\001\n\006YLight\022\017\n\007diffuse\030\003 \003(\002\022\020\n\010specu"
    "lar\030\004 \003(\002\022\021\n\tintensity\030\005 \001(\002\022\r\n\005range\030\006 "
    "\001(\002\022\r\n\005angle\030\007 \001(\002\022\020\n\010exponent\030\010 \001(\002\022\031\n\021"
    "excludedMeshesIds\030\t \003(\t\022\035\n\025includedOnlyM"
    "eshesIds\030\n \003(\t\"8\n\007YCamera\022\020\n\010rotation\030\003 "
    "\003(\002\022\016\n\006target\030\004 \003(\002\022\013\n\003fov\030\005 \001(\002\"\322\003\n\005YMe"
    "sh\022\021\n\tnum_faces\030\001 \001(\005\022\030\n\004bbox\030\002 \001(\0132\n.y3"
    "d.YBox3\022\016\n\006res_id\030\003 \001(\t\022&\n\007xstatus\030\005 \001(\016"
    "2\025.y3d.YMesh.XrefStatus\022\"\n\005mtype\030\006 \001(\0162\023"
    ".y3d.YMesh.MeshType\022\017\n\007vername\030\007 \001(\t\"\276\001\n"
    "\010MeshType\022\013\n\007Unknown\020\000\022\021\n\rEditable_Mesh\020"
    "\001\022\021\n\rEditable_Poly\020\002\022\007\n\003Box\020\003\022\n\n\006Sphere\020"
    "\004\022\r\n\tGeoSphere\020\005\022\014\n\010Cylinder\020\006\022\010\n\004Tube\020\007"
    "\022\t\n\005Torus\020\010\022\013\n\007Pyramid\020\t\022\n\n\006Teapot\020\n\022\t\n\005"
    "Plane\020\013\022\n\n\006Target\020\014\022\010\n\004Cone\020\r\"n\n\nXrefSta"
    "tus\022\014\n\010ORIGINAL\020\000\022\016\n\nXREF_HIGHT\020\001\022\014\n\010XRE"
    "F_LOW\020\002\022\024\n\020XREF_LOW_DISPLAY\020\003\022\007\n\003BOX\020\004\022\n"
    "\n\006MERGED\020\005\022\t\n\005FINAL\020\006\"\277\002\n\007YObject\022\014\n\004nam"
    "e\030\001 \001(\t\022\031\n\003pos\030\003 \001(\0132\014.y3d.YPoint3\022&\n\005ex"
    "tra\030\005 \003(\0132\027.y3d.YObject.ExtraEntry\022\036\n\005ot"
    "ype\030\006 \001(\0162\017.y3d.ObjectType\022\014\n\004tags\030\007 \003(\t"
    "\022\017\n\007cate_id\030\010 \001(\005\022\034\n\005light\030\n \001(\0132\013.y3d.Y"
    "LightH\000\022\036\n\006camera\030\013 \001(\0132\014.y3d.YCameraH\000\022"
    "\032\n\004mesh\030\014 \001(\0132\n.y3d.YMeshH\000\032B\n\nExtraEntr"
    "y\022\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.google.p"
    "rotobuf.Any:\0028\001B\006\n\004data\"\262\001\n\005YArea\022\014\n\004nam"
    "e\030\001 \001(\t\022\033\n\006groups\030\002 \003(\0132\013.y3d.YGroup\022\032\n\004"
    "objs\030\003 \003(\0132\014.y3d.YObject\022$\n\005gvers\030\006 \003(\0132"
    "\025.y3d.YArea.GversEntry\032<\n\nGversEntry\022\013\n\003"
    "key\030\001 \001(\t\022\035\n\005value\030\002 \001(\0132\016.y3d.YGroupVer"
    ":\0028\001\"&\n\tYAreaList\022\031\n\005areas\030\001 \003(\0132\n.y3d.Y"
    "Area\"3\n\006YLayer\022\014\n\004name\030\001 \001(\t\022\033\n\006groups\030\002"
    " \003(\0132\013.y3d.YGroup\"\177\n\006YGroup\022\014\n\004name\030\001 \001("
    "\t\022\032\n\004objs\030\002 \003(\0132\014.y3d.YObject\022\035\n\010childre"
    "n\030\003 \003(\0132\013.y3d.YGroup\022\036\n\007gv_type\030\004 \001(\0162\r."
    "y3d.GVerType\022\014\n\004xref\030\005 \003(\t\"H\n\tYGroupVer\022"
    "\r\n\005vname\030\001 \001(\t\022\036\n\tgroupData\030\002 \001(\0132\013.y3d."
    "YGroup\022\014\n\004step\030\003 \001(\005\"]\n\nFilterView\022\036\n\005ot"
    "ype\030\001 \001(\0162\017.y3d.ObjectType\022\022\n\nface_range"
    "\030\002 \001(\005\022\016\n\006search\030\003 \001(\t\022\013\n\003aid\030\004 \001(\005\"\266\001\n\013"
    "ProjectInfo\022\r\n\005pname\030\001 \001(\t\022\014\n\004path\030\002 \001(\t"
    "\022&\n\002ts\030\003 \001(\0132\032.google.protobuf.Timestamp"
    "\022*\n\014optimize_ops\030\005 \001(\0132\024.y3d.OptimizeOpt"
    "ions\022\036\n\005fview\030\006 \003(\0132\017.y3d.FilterView\022\026\n\016"
    "optimize_ratio\030\007 \001(\002\"\215\001\n\013SettingData\022\021\n\t"
    "aset_name\030\001 \001(\t\022(\n\004data\030\002 \003(\0132\032.y3d.Sett"
    "ingData.DataEntry\032A\n\tDataEntry\022\013\n\003key\030\001 "
    "\001(\t\022#\n\005value\030\002 \001(\0132\024.google.protobuf.Any"
    ":\0028\001\"\?\n\010PSetting\022\037\n\005extra\030\001 \001(\0132\020.y3d.Se"
    "ttingData\022\022\n\nmax_recent\030\002 \001(\005\"\225\001\n\007YSyste"
    "m\022\026\n\016working_folder\030\001 \001(\t\022&\n\014default_inf"
    "o\030\002 \001(\0132\020.y3d.ProjectInfo\022&\n\017default_set"
    "ting\030\003 \001(\0132\r.y3d.PSetting\022\"\n\010projects\030\004 "
    "\003(\0132\020.y3d.ProjectInfo\"l\n\nFRangeItem\022\017\n\007f"
    "_start\030\001 \001(\005\022\r\n\005f_end\030\002 \001(\005\022\035\n\010fr_color\030"
    "\003 \001(\0132\013.y3d.YColor\022\r\n\005ratio\030\004 \001(\002\022\020\n\010has"
    "_xref\030\005 \001(\010\"m\n\017OptimizeOptions\022\021\n\tuse_ra"
    "nge\030\001 \001(\010\022\033\n\002fr\030\002 \003(\0132\017.y3d.FRangeItem\022\021"
    "\n\tmin_hpoly\030\003 \001(\005\022\027\n\017out_range_count\030\004 \001"
    "(\005\"-\n\013ResultReply\022\r\n\005error\030\001 \001(\010\022\017\n\007mess"
    "age\030\002 \001(\t\"\014\n\nEmptyParam\"!\n\013RenameParam\022\022"
    "\n\nuse_select\030\001 \001(\010\"\?\n\016Make4TestParam\022\r\n\005"
    "oname\030\001 \001(\t\022\036\n\007lowpoly\030\002 \003(\0132\r.y3d.ELowp"
    "oly\"\036\n\rOptimizeParam\022\r\n\005ratio\030\001 \001(\002\"E\n\022B"
    "atchOptimizeParam\022\r\n\005ratio\030\001 \001(\002\022\016\n\006fold"
    "er\030\002 \001(\t\022\020\n\010filename\030\003 \001(\t\"\032\n\013StringPara"
    "m\022\013\n\003str\030\001 \001(\t\"F\n\tTestParam\022\021\n\ttest_name"
    "\030\001 \001(\t\022&\n\010anything\030\002 \001(\0132\024.google.protob"
    "uf.Any\"0\n\017NewProjectParam\022\r\n\005fname\030\001 \001(\t"
    "\022\016\n\006folder\030\002 \001(\t\"x\n\020ResponseNProject\022\037\n\005"
    "pInfo\030\001 \001(\0132\020.y3d.ProjectInfo\022\033\n\003yal\030\002 \001"
    "(\0132\016.y3d.YAreaList\022\031\n\003sys\030\003 \001(\0132\014.y3d.YS"
    "ystem\022\013\n\003err\030\004 \001(\t\"\322\001\n\006YEvent\022\035\n\007noevent"
    "\030\001 \001(\0132\n.y3d.ENoneH\000\022\036\n\006select\030\002 \001(\0132\014.y"
    "3d.ESelectH\000\022\032\n\004move\030\003 \001(\0132\n.y3d.EMoveH\000"
    "\022\036\n\006rotate\030\004 \001(\0132\014.y3d.ERotateH\000\022\033\n\003del\030"
    "\005 \001(\0132\014.y3d.EDeleteH\000\022\'\n\013select_many\030\006 \001"
    "(\0132\020.y3d.ESelectManyH\000B\007\n\005event\"\007\n\005ENone"
    "\"(\n\007ESelect\022\014\n\004name\030\001 \001(\t\022\017\n\007isolate\030\002 \001"
    "(\010\",\n\013ESelectMany\022\014\n\004name\030\001 \003(\t\022\017\n\007isola"
    "te\030\002 \001(\010\"\026\n\005EMove\022\r\n\005point\030\001 \003(\002\"\031\n\007ERot"
    "ate\022\016\n\006rotate\030\001 \003(\002\"\027\n\007EDelete\022\014\n\004name\030\001"
    " \001(\t\",\n\010EIsolate\022\014\n\004name\030\001 \001(\t\022\022\n\nendIso"
    "late\030\002 \001(\010\"|\n\007EUnwrap\022\r\n\005oname\030\001 \001(\t\022\017\n\007"
    "channel\030\002 \001(\005\022\037\n\005max3d\030\003 \001(\0132\016.y3d.MaxUn"
    "wrapH\000\022%\n\007blender\030\004 \001(\0132\022.y3d.BlenderUnw"
    "rapH\000B\t\n\007setting\"\017\n\rBlenderUnwrap\"+\n\tMax"
    "Unwrap\022\r\n\005angle\030\001 \001(\002\022\017\n\007spacing\030\002 \001(\002\"\212"
    "\001\n\010EPacking\022\r\n\005oname\030\001 \001(\t\022\016\n\006uvname\030\002 \001"
    "(\t\022\021\n\ttile_Size\030\003 \001(\005\022!\n\007packmax\030\004 \001(\0132\016"
    ".y3d.Pack3DMaxH\000\022!\n\010packrect\030\005 \001(\0132\r.y3d"
    ".PackRectH\000B\006\n\004pack\",\n\010PackRect\022\017\n\007densi"
    "ty\030\001 \001(\005\022\017\n\007padding\030\002 \001(\002\"m\n\tPack3DMax\022\017"
    "\n\007numTile\030\001 \001(\005\022\021\n\tnormalize\030\002 \001(\010\022\027\n\017ro"
    "tate_clusters\030\003 \001(\010\022\022\n\nfill_holes\030\004 \001(\010\022"
    "\017\n\007padding\030\005 \001(\010\"\233\001\n\010ELowpoly\022\r\n\005oname\030\001"
    " \001(\t\022#\n\010lp_3dmax\030\002 \001(\0132\017.y3d.LPoly3DMaxH"
    "\000\022\'\n\nlp_blender\030\003 \001(\0132\021.y3d.LPolyBlender"
    "H\000\022\'\n\nlp_meshlab\030\004 \001(\0132\021.y3d.LPolyMeshla"
    "bH\000B\t\n\007lowtype\"\212\003\n\nLPoly3DMax\022\026\n\016vertex_"
    "percent\030\001 \001(\002\022\024\n\014vertex_count\030\002 \001(\005\0221\n\021o"
    "ptimization_mode\030\003 \001(\0162\026.y3d.LPoly3DMax."
    "OpMode\022+\n\007normals\030\004 \001(\0162\032.y3d.LPoly3DMax"
    ".NormalMode\022\033\n\023favor_compact_faces\030\005 \001(\010"
    "\022\037\n\027prevent_flipped_normals\030\006 \001(\010\022\034\n\024loc"
    "k_vertex_position\030\007 \001(\010\"F\n\006OpMode\022\022\n\016CRU"
    "NCH_BORDERS\020\000\022\023\n\017PROTECT_BORDERS\020\001\022\023\n\017EX"
    "CLUDE_BORDERS\020\002\"J\n\nNormalMode\022\022\n\016CRUNCH_"
    "NORMALS\020\000\022\023\n\017PROTECT_NORMALS\020\001\022\023\n\017EXCLUD"
    "E_NORMALS\020\002\"\035\n\014LPolyBlender\022\r\n\005ratio\030\001 \001"
    "(\002\"\016\n\014LPolyMeshlab\"\276\001\n\007ENormal\022\r\n\005oname\030"
    "\001 \001(\t\022\017\n\007lowpoly\030\002 \001(\t\022\020\n\010highpoly\030\003 \001(\t"
    "\022\020\n\010tex_size\030\004 \001(\r\022\017\n\007out_tex\030\005 \001(\t\022(\n\014n"
    "ormal_3dmax\030\006 \001(\0132\020.y3d.Normal3DMaxH\000\022+\n"
    "\016normal_xnormal\030\007 \001(\0132\021.xnormal.Settings"
    "H\000B\007\n\005ntype\"\r\n\013Normal3DMax\"+\n\rResponseEv"
    "ent\022\r\n\005error\030\001 \001(\010\022\013\n\003msg\030\002 \001(\t*G\n\nObjec"
    "tType\022\014\n\010GEOMETRY\020\000\022\t\n\005LIGHT\020\001\022\n\n\006CAMERA"
    "\020\002\022\t\n\005SHAPE\020\003\022\t\n\005OTHER\020\004*\?\n\010GVerType\022\n\n\006"
    "NO_VER\020\000\022\014\n\010ORIGINAL\020\001\022\013\n\007IN_BAKE\020\002\022\014\n\010S"
    "TANDARD\020\003B\010\252\002\005y3d.eb\006proto3", 5227);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "y3d.proto", &protobuf_RegisterTypes);
  YColor::default_instance_ = new YColor();
  YPoint3::default_instance_ = new YPoint3();
  YBox3::default_instance_ = new YBox3();
  YResource::default_instance_ = new YResource();
  YLight::default_instance_ = new YLight();
  YCamera::default_instance_ = new YCamera();
  YMesh::default_instance_ = new YMesh();
  YObject::default_instance_ = new YObject();
  YObject_default_oneof_instance_ = new YObjectOneofInstance();
  YArea::default_instance_ = new YArea();
  YAreaList::default_instance_ = new YAreaList();
  YLayer::default_instance_ = new YLayer();
  YGroup::default_instance_ = new YGroup();
  YGroupVer::default_instance_ = new YGroupVer();
  FilterView::default_instance_ = new FilterView();
  ProjectInfo::default_instance_ = new ProjectInfo();
  SettingData::default_instance_ = new SettingData();
  PSetting::default_instance_ = new PSetting();
  YSystem::default_instance_ = new YSystem();
  FRangeItem::default_instance_ = new FRangeItem();
  OptimizeOptions::default_instance_ = new OptimizeOptions();
  ResultReply::default_instance_ = new ResultReply();
  EmptyParam::default_instance_ = new EmptyParam();
  RenameParam::default_instance_ = new RenameParam();
  Make4TestParam::default_instance_ = new Make4TestParam();
  OptimizeParam::default_instance_ = new OptimizeParam();
  BatchOptimizeParam::default_instance_ = new BatchOptimizeParam();
  StringParam::default_instance_ = new StringParam();
  TestParam::default_instance_ = new TestParam();
  NewProjectParam::default_instance_ = new NewProjectParam();
  ResponseNProject::default_instance_ = new ResponseNProject();
  YEvent::default_instance_ = new YEvent();
  YEvent_default_oneof_instance_ = new YEventOneofInstance();
  ENone::default_instance_ = new ENone();
  ESelect::default_instance_ = new ESelect();
  ESelectMany::default_instance_ = new ESelectMany();
  EMove::default_instance_ = new EMove();
  ERotate::default_instance_ = new ERotate();
  EDelete::default_instance_ = new EDelete();
  EIsolate::default_instance_ = new EIsolate();
  EUnwrap::default_instance_ = new EUnwrap();
  EUnwrap_default_oneof_instance_ = new EUnwrapOneofInstance();
  BlenderUnwrap::default_instance_ = new BlenderUnwrap();
  MaxUnwrap::default_instance_ = new MaxUnwrap();
  EPacking::default_instance_ = new EPacking();
  EPacking_default_oneof_instance_ = new EPackingOneofInstance();
  PackRect::default_instance_ = new PackRect();
  Pack3DMax::default_instance_ = new Pack3DMax();
  ELowpoly::default_instance_ = new ELowpoly();
  ELowpoly_default_oneof_instance_ = new ELowpolyOneofInstance();
  LPoly3DMax::default_instance_ = new LPoly3DMax();
  LPolyBlender::default_instance_ = new LPolyBlender();
  LPolyMeshlab::default_instance_ = new LPolyMeshlab();
  ENormal::default_instance_ = new ENormal();
  ENormal_default_oneof_instance_ = new ENormalOneofInstance();
  Normal3DMax::default_instance_ = new Normal3DMax();
  ResponseEvent::default_instance_ = new ResponseEvent();
  YColor::default_instance_->InitAsDefaultInstance();
  YPoint3::default_instance_->InitAsDefaultInstance();
  YBox3::default_instance_->InitAsDefaultInstance();
  YResource::default_instance_->InitAsDefaultInstance();
  YLight::default_instance_->InitAsDefaultInstance();
  YCamera::default_instance_->InitAsDefaultInstance();
  YMesh::default_instance_->InitAsDefaultInstance();
  YObject::default_instance_->InitAsDefaultInstance();
  YArea::default_instance_->InitAsDefaultInstance();
  YAreaList::default_instance_->InitAsDefaultInstance();
  YLayer::default_instance_->InitAsDefaultInstance();
  YGroup::default_instance_->InitAsDefaultInstance();
  YGroupVer::default_instance_->InitAsDefaultInstance();
  FilterView::default_instance_->InitAsDefaultInstance();
  ProjectInfo::default_instance_->InitAsDefaultInstance();
  SettingData::default_instance_->InitAsDefaultInstance();
  PSetting::default_instance_->InitAsDefaultInstance();
  YSystem::default_instance_->InitAsDefaultInstance();
  FRangeItem::default_instance_->InitAsDefaultInstance();
  OptimizeOptions::default_instance_->InitAsDefaultInstance();
  ResultReply::default_instance_->InitAsDefaultInstance();
  EmptyParam::default_instance_->InitAsDefaultInstance();
  RenameParam::default_instance_->InitAsDefaultInstance();
  Make4TestParam::default_instance_->InitAsDefaultInstance();
  OptimizeParam::default_instance_->InitAsDefaultInstance();
  BatchOptimizeParam::default_instance_->InitAsDefaultInstance();
  StringParam::default_instance_->InitAsDefaultInstance();
  TestParam::default_instance_->InitAsDefaultInstance();
  NewProjectParam::default_instance_->InitAsDefaultInstance();
  ResponseNProject::default_instance_->InitAsDefaultInstance();
  YEvent::default_instance_->InitAsDefaultInstance();
  ENone::default_instance_->InitAsDefaultInstance();
  ESelect::default_instance_->InitAsDefaultInstance();
  ESelectMany::default_instance_->InitAsDefaultInstance();
  EMove::default_instance_->InitAsDefaultInstance();
  ERotate::default_instance_->InitAsDefaultInstance();
  EDelete::default_instance_->InitAsDefaultInstance();
  EIsolate::default_instance_->InitAsDefaultInstance();
  EUnwrap::default_instance_->InitAsDefaultInstance();
  BlenderUnwrap::default_instance_->InitAsDefaultInstance();
  MaxUnwrap::default_instance_->InitAsDefaultInstance();
  EPacking::default_instance_->InitAsDefaultInstance();
  PackRect::default_instance_->InitAsDefaultInstance();
  Pack3DMax::default_instance_->InitAsDefaultInstance();
  ELowpoly::default_instance_->InitAsDefaultInstance();
  LPoly3DMax::default_instance_->InitAsDefaultInstance();
  LPolyBlender::default_instance_->InitAsDefaultInstance();
  LPolyMeshlab::default_instance_->InitAsDefaultInstance();
  ENormal::default_instance_->InitAsDefaultInstance();
  Normal3DMax::default_instance_->InitAsDefaultInstance();
  ResponseEvent::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_y3d_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_y3d_2eproto {
  StaticDescriptorInitializer_y3d_2eproto() {
    protobuf_AddDesc_y3d_2eproto();
  }
} static_descriptor_initializer_y3d_2eproto_;
const ::google::protobuf::EnumDescriptor* ObjectType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectType_descriptor_;
}
bool ObjectType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GVerType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GVerType_descriptor_;
}
bool GVerType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YColor::kNameFieldNumber;
const int YColor::kArgbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YColor::YColor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YColor)
}

void YColor::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

YColor::YColor(const YColor& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YColor)
}

void YColor::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  argb_ = 0;
}

YColor::~YColor() {
  // @@protoc_insertion_point(destructor:y3d.YColor)
  SharedDtor();
}

void YColor::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void YColor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YColor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YColor_descriptor_;
}

const YColor& YColor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YColor* YColor::default_instance_ = NULL;

YColor* YColor::New(::google::protobuf::Arena* arena) const {
  YColor* n = new YColor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YColor::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YColor)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  argb_ = 0;
}

bool YColor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YColor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YColor.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_argb;
        break;
      }

      // optional int32 argb = 2;
      case 2: {
        if (tag == 16) {
         parse_argb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argb_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YColor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YColor)
  return false;
#undef DO_
}

void YColor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YColor)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YColor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 argb = 2;
  if (this->argb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->argb(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YColor)
}

::google::protobuf::uint8* YColor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YColor)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YColor.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 argb = 2;
  if (this->argb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->argb(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YColor)
  return target;
}

int YColor::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YColor)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 argb = 2;
  if (this->argb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argb());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YColor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YColor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YColor* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YColor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YColor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YColor)
    MergeFrom(*source);
  }
}

void YColor::MergeFrom(const YColor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YColor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.argb() != 0) {
    set_argb(from.argb());
  }
}

void YColor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YColor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YColor::CopyFrom(const YColor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YColor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YColor::IsInitialized() const {

  return true;
}

void YColor::Swap(YColor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YColor::InternalSwap(YColor* other) {
  name_.Swap(&other->name_);
  std::swap(argb_, other->argb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YColor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YColor_descriptor_;
  metadata.reflection = YColor_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YColor

// optional string name = 1;
void YColor::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& YColor::name() const {
  // @@protoc_insertion_point(field_get:y3d.YColor.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YColor::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YColor.name)
}
 void YColor::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YColor.name)
}
 void YColor::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YColor.name)
}
 ::std::string* YColor::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YColor.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YColor::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YColor.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YColor::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YColor.name)
}

// optional int32 argb = 2;
void YColor::clear_argb() {
  argb_ = 0;
}
 ::google::protobuf::int32 YColor::argb() const {
  // @@protoc_insertion_point(field_get:y3d.YColor.argb)
  return argb_;
}
 void YColor::set_argb(::google::protobuf::int32 value) {
  
  argb_ = value;
  // @@protoc_insertion_point(field_set:y3d.YColor.argb)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YPoint3::kXFieldNumber;
const int YPoint3::kYFieldNumber;
const int YPoint3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YPoint3::YPoint3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YPoint3)
}

void YPoint3::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

YPoint3::YPoint3(const YPoint3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YPoint3)
}

void YPoint3::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
}

YPoint3::~YPoint3() {
  // @@protoc_insertion_point(destructor:y3d.YPoint3)
  SharedDtor();
}

void YPoint3::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YPoint3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YPoint3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YPoint3_descriptor_;
}

const YPoint3& YPoint3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YPoint3* YPoint3::default_instance_ = NULL;

YPoint3* YPoint3::New(::google::protobuf::Arena* arena) const {
  YPoint3* n = new YPoint3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YPoint3::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YPoint3)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YPoint3, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YPoint3*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);

#undef ZR_HELPER_
#undef ZR_

}

bool YPoint3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YPoint3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // optional float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // optional float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YPoint3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YPoint3)
  return false;
#undef DO_
}

void YPoint3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YPoint3)
  // optional float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YPoint3)
}

::google::protobuf::uint8* YPoint3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YPoint3)
  // optional float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YPoint3)
  return target;
}

int YPoint3::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YPoint3)
  int total_size = 0;

  // optional float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // optional float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YPoint3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YPoint3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YPoint3* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YPoint3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YPoint3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YPoint3)
    MergeFrom(*source);
  }
}

void YPoint3::MergeFrom(const YPoint3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YPoint3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void YPoint3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YPoint3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YPoint3::CopyFrom(const YPoint3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YPoint3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YPoint3::IsInitialized() const {

  return true;
}

void YPoint3::Swap(YPoint3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YPoint3::InternalSwap(YPoint3* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YPoint3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YPoint3_descriptor_;
  metadata.reflection = YPoint3_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YPoint3

// optional float x = 1;
void YPoint3::clear_x() {
  x_ = 0;
}
 float YPoint3::x() const {
  // @@protoc_insertion_point(field_get:y3d.YPoint3.x)
  return x_;
}
 void YPoint3::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:y3d.YPoint3.x)
}

// optional float y = 2;
void YPoint3::clear_y() {
  y_ = 0;
}
 float YPoint3::y() const {
  // @@protoc_insertion_point(field_get:y3d.YPoint3.y)
  return y_;
}
 void YPoint3::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:y3d.YPoint3.y)
}

// optional float z = 3;
void YPoint3::clear_z() {
  z_ = 0;
}
 float YPoint3::z() const {
  // @@protoc_insertion_point(field_get:y3d.YPoint3.z)
  return z_;
}
 void YPoint3::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:y3d.YPoint3.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YBox3::kPminFieldNumber;
const int YBox3::kPmaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YBox3::YBox3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YBox3)
}

void YBox3::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  pmin_ = const_cast< ::y3d::YPoint3*>(&::y3d::YPoint3::default_instance());
  pmax_ = const_cast< ::y3d::YPoint3*>(&::y3d::YPoint3::default_instance());
}

YBox3::YBox3(const YBox3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YBox3)
}

void YBox3::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  pmin_ = NULL;
  pmax_ = NULL;
}

YBox3::~YBox3() {
  // @@protoc_insertion_point(destructor:y3d.YBox3)
  SharedDtor();
}

void YBox3::SharedDtor() {
  if (this != default_instance_) {
    delete pmin_;
    delete pmax_;
  }
}

void YBox3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YBox3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YBox3_descriptor_;
}

const YBox3& YBox3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YBox3* YBox3::default_instance_ = NULL;

YBox3* YBox3::New(::google::protobuf::Arena* arena) const {
  YBox3* n = new YBox3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YBox3::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YBox3)
  if (GetArenaNoVirtual() == NULL && pmin_ != NULL) delete pmin_;
  pmin_ = NULL;
  if (GetArenaNoVirtual() == NULL && pmax_ != NULL) delete pmax_;
  pmax_ = NULL;
}

bool YBox3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YBox3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .y3d.YPoint3 pmin = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pmin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pmax;
        break;
      }

      // optional .y3d.YPoint3 pmax = 2;
      case 2: {
        if (tag == 18) {
         parse_pmax:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pmax()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YBox3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YBox3)
  return false;
#undef DO_
}

void YBox3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YBox3)
  // optional .y3d.YPoint3 pmin = 1;
  if (this->has_pmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pmin_, output);
  }

  // optional .y3d.YPoint3 pmax = 2;
  if (this->has_pmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pmax_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YBox3)
}

::google::protobuf::uint8* YBox3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YBox3)
  // optional .y3d.YPoint3 pmin = 1;
  if (this->has_pmin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pmin_, false, target);
  }

  // optional .y3d.YPoint3 pmax = 2;
  if (this->has_pmax()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pmax_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YBox3)
  return target;
}

int YBox3::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YBox3)
  int total_size = 0;

  // optional .y3d.YPoint3 pmin = 1;
  if (this->has_pmin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pmin_);
  }

  // optional .y3d.YPoint3 pmax = 2;
  if (this->has_pmax()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pmax_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YBox3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YBox3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YBox3* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YBox3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YBox3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YBox3)
    MergeFrom(*source);
  }
}

void YBox3::MergeFrom(const YBox3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YBox3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_pmin()) {
    mutable_pmin()->::y3d::YPoint3::MergeFrom(from.pmin());
  }
  if (from.has_pmax()) {
    mutable_pmax()->::y3d::YPoint3::MergeFrom(from.pmax());
  }
}

void YBox3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YBox3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YBox3::CopyFrom(const YBox3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YBox3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YBox3::IsInitialized() const {

  return true;
}

void YBox3::Swap(YBox3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YBox3::InternalSwap(YBox3* other) {
  std::swap(pmin_, other->pmin_);
  std::swap(pmax_, other->pmax_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YBox3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YBox3_descriptor_;
  metadata.reflection = YBox3_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YBox3

// optional .y3d.YPoint3 pmin = 1;
bool YBox3::has_pmin() const {
  return !_is_default_instance_ && pmin_ != NULL;
}
void YBox3::clear_pmin() {
  if (GetArenaNoVirtual() == NULL && pmin_ != NULL) delete pmin_;
  pmin_ = NULL;
}
const ::y3d::YPoint3& YBox3::pmin() const {
  // @@protoc_insertion_point(field_get:y3d.YBox3.pmin)
  return pmin_ != NULL ? *pmin_ : *default_instance_->pmin_;
}
::y3d::YPoint3* YBox3::mutable_pmin() {
  
  if (pmin_ == NULL) {
    pmin_ = new ::y3d::YPoint3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YBox3.pmin)
  return pmin_;
}
::y3d::YPoint3* YBox3::release_pmin() {
  // @@protoc_insertion_point(field_release:y3d.YBox3.pmin)
  
  ::y3d::YPoint3* temp = pmin_;
  pmin_ = NULL;
  return temp;
}
void YBox3::set_allocated_pmin(::y3d::YPoint3* pmin) {
  delete pmin_;
  pmin_ = pmin;
  if (pmin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YBox3.pmin)
}

// optional .y3d.YPoint3 pmax = 2;
bool YBox3::has_pmax() const {
  return !_is_default_instance_ && pmax_ != NULL;
}
void YBox3::clear_pmax() {
  if (GetArenaNoVirtual() == NULL && pmax_ != NULL) delete pmax_;
  pmax_ = NULL;
}
const ::y3d::YPoint3& YBox3::pmax() const {
  // @@protoc_insertion_point(field_get:y3d.YBox3.pmax)
  return pmax_ != NULL ? *pmax_ : *default_instance_->pmax_;
}
::y3d::YPoint3* YBox3::mutable_pmax() {
  
  if (pmax_ == NULL) {
    pmax_ = new ::y3d::YPoint3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YBox3.pmax)
  return pmax_;
}
::y3d::YPoint3* YBox3::release_pmax() {
  // @@protoc_insertion_point(field_release:y3d.YBox3.pmax)
  
  ::y3d::YPoint3* temp = pmax_;
  pmax_ = NULL;
  return temp;
}
void YBox3::set_allocated_pmax(::y3d::YPoint3* pmax) {
  delete pmax_;
  pmax_ = pmax;
  if (pmax) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YBox3.pmax)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* YResource_ResourceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YResource_ResourceType_descriptor_;
}
bool YResource_ResourceType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const YResource_ResourceType YResource::BINARY;
const YResource_ResourceType YResource::IMAGE;
const YResource_ResourceType YResource::FLATBUFFER;
const YResource_ResourceType YResource::PROTOBUF;
const YResource_ResourceType YResource::CAPNP;
const YResource_ResourceType YResource::ResourceType_MIN;
const YResource_ResourceType YResource::ResourceType_MAX;
const int YResource::ResourceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YResource::kRidFieldNumber;
const int YResource::kRtypeFieldNumber;
const int YResource::kLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YResource::YResource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YResource)
}

void YResource::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

YResource::YResource(const YResource& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YResource)
}

void YResource::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rtype_ = 0;
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

YResource::~YResource() {
  // @@protoc_insertion_point(destructor:y3d.YResource)
  SharedDtor();
}

void YResource::SharedDtor() {
  rid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void YResource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YResource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YResource_descriptor_;
}

const YResource& YResource::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YResource* YResource::default_instance_ = NULL;

YResource* YResource::New(::google::protobuf::Arena* arena) const {
  YResource* n = new YResource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YResource::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YResource)
  rid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rtype_ = 0;
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YResource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string rid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rid().data(), this->rid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YResource.rid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rtype;
        break;
      }

      // optional .y3d.YResource.ResourceType rtype = 2;
      case 2: {
        if (tag == 16) {
         parse_rtype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rtype(static_cast< ::y3d::YResource_ResourceType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_link;
        break;
      }

      // optional string link = 3;
      case 3: {
        if (tag == 26) {
         parse_link:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link().data(), this->link().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YResource.link"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YResource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YResource)
  return false;
#undef DO_
}

void YResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YResource)
  // optional string rid = 1;
  if (this->rid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rid().data(), this->rid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.rid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rid(), output);
  }

  // optional .y3d.YResource.ResourceType rtype = 2;
  if (this->rtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->rtype(), output);
  }

  // optional string link = 3;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->link(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YResource)
}

::google::protobuf::uint8* YResource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YResource)
  // optional string rid = 1;
  if (this->rid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rid().data(), this->rid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.rid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rid(), target);
  }

  // optional .y3d.YResource.ResourceType rtype = 2;
  if (this->rtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->rtype(), target);
  }

  // optional string link = 3;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->link(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YResource)
  return target;
}

int YResource::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YResource)
  int total_size = 0;

  // optional string rid = 1;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rid());
  }

  // optional .y3d.YResource.ResourceType rtype = 2;
  if (this->rtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rtype());
  }

  // optional string link = 3;
  if (this->link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YResource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YResource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YResource* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YResource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YResource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YResource)
    MergeFrom(*source);
  }
}

void YResource::MergeFrom(const YResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YResource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid().size() > 0) {

    rid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rid_);
  }
  if (from.rtype() != 0) {
    set_rtype(from.rtype());
  }
  if (from.link().size() > 0) {

    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
}

void YResource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YResource::CopyFrom(const YResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YResource::IsInitialized() const {

  return true;
}

void YResource::Swap(YResource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YResource::InternalSwap(YResource* other) {
  rid_.Swap(&other->rid_);
  std::swap(rtype_, other->rtype_);
  link_.Swap(&other->link_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YResource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YResource_descriptor_;
  metadata.reflection = YResource_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YResource

// optional string rid = 1;
void YResource::clear_rid() {
  rid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& YResource::rid() const {
  // @@protoc_insertion_point(field_get:y3d.YResource.rid)
  return rid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YResource::set_rid(const ::std::string& value) {
  
  rid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YResource.rid)
}
 void YResource::set_rid(const char* value) {
  
  rid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YResource.rid)
}
 void YResource::set_rid(const char* value, size_t size) {
  
  rid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YResource.rid)
}
 ::std::string* YResource::mutable_rid() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YResource.rid)
  return rid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YResource::release_rid() {
  // @@protoc_insertion_point(field_release:y3d.YResource.rid)
  
  return rid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YResource::set_allocated_rid(::std::string* rid) {
  if (rid != NULL) {
    
  } else {
    
  }
  rid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rid);
  // @@protoc_insertion_point(field_set_allocated:y3d.YResource.rid)
}

// optional .y3d.YResource.ResourceType rtype = 2;
void YResource::clear_rtype() {
  rtype_ = 0;
}
 ::y3d::YResource_ResourceType YResource::rtype() const {
  // @@protoc_insertion_point(field_get:y3d.YResource.rtype)
  return static_cast< ::y3d::YResource_ResourceType >(rtype_);
}
 void YResource::set_rtype(::y3d::YResource_ResourceType value) {
  
  rtype_ = value;
  // @@protoc_insertion_point(field_set:y3d.YResource.rtype)
}

// optional string link = 3;
void YResource::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& YResource::link() const {
  // @@protoc_insertion_point(field_get:y3d.YResource.link)
  return link_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YResource::set_link(const ::std::string& value) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YResource.link)
}
 void YResource::set_link(const char* value) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YResource.link)
}
 void YResource::set_link(const char* value, size_t size) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YResource.link)
}
 ::std::string* YResource::mutable_link() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YResource.link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YResource::release_link() {
  // @@protoc_insertion_point(field_release:y3d.YResource.link)
  
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YResource::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    
  } else {
    
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:y3d.YResource.link)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YLight::kDiffuseFieldNumber;
const int YLight::kSpecularFieldNumber;
const int YLight::kIntensityFieldNumber;
const int YLight::kRangeFieldNumber;
const int YLight::kAngleFieldNumber;
const int YLight::kExponentFieldNumber;
const int YLight::kExcludedMeshesIdsFieldNumber;
const int YLight::kIncludedOnlyMeshesIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YLight::YLight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YLight)
}

void YLight::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

YLight::YLight(const YLight& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YLight)
}

void YLight::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  intensity_ = 0;
  range_ = 0;
  angle_ = 0;
  exponent_ = 0;
}

YLight::~YLight() {
  // @@protoc_insertion_point(destructor:y3d.YLight)
  SharedDtor();
}

void YLight::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YLight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YLight::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YLight_descriptor_;
}

const YLight& YLight::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YLight* YLight::default_instance_ = NULL;

YLight* YLight::New(::google::protobuf::Arena* arena) const {
  YLight* n = new YLight;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YLight::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YLight)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YLight, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YLight*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(intensity_, exponent_);

#undef ZR_HELPER_
#undef ZR_

  diffuse_.Clear();
  specular_.Clear();
  excludedmeshesids_.Clear();
  includedonlymeshesids_.Clear();
}

bool YLight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YLight)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float diffuse = 3;
      case 3: {
        if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_diffuse())));
        } else if (tag == 29) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26, input, this->mutable_diffuse())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_specular;
        break;
      }

      // repeated float specular = 4;
      case 4: {
        if (tag == 34) {
         parse_specular:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_specular())));
        } else if (tag == 37) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34, input, this->mutable_specular())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_intensity;
        break;
      }

      // optional float intensity = 5;
      case 5: {
        if (tag == 45) {
         parse_intensity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &intensity_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_range;
        break;
      }

      // optional float range = 6;
      case 6: {
        if (tag == 53) {
         parse_range:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &range_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_angle;
        break;
      }

      // optional float angle = 7;
      case 7: {
        if (tag == 61) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_exponent;
        break;
      }

      // optional float exponent = 8;
      case 8: {
        if (tag == 69) {
         parse_exponent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &exponent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_excludedMeshesIds;
        break;
      }

      // repeated string excludedMeshesIds = 9;
      case 9: {
        if (tag == 74) {
         parse_excludedMeshesIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_excludedmeshesids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->excludedmeshesids(this->excludedmeshesids_size() - 1).data(),
            this->excludedmeshesids(this->excludedmeshesids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YLight.excludedMeshesIds"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_excludedMeshesIds;
        if (input->ExpectTag(82)) goto parse_includedOnlyMeshesIds;
        break;
      }

      // repeated string includedOnlyMeshesIds = 10;
      case 10: {
        if (tag == 82) {
         parse_includedOnlyMeshesIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_includedonlymeshesids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->includedonlymeshesids(this->includedonlymeshesids_size() - 1).data(),
            this->includedonlymeshesids(this->includedonlymeshesids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YLight.includedOnlyMeshesIds"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_includedOnlyMeshesIds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YLight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YLight)
  return false;
#undef DO_
}

void YLight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YLight)
  // repeated float diffuse = 3;
  if (this->diffuse_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_diffuse_cached_byte_size_);
  }
  for (int i = 0; i < this->diffuse_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->diffuse(i), output);
  }

  // repeated float specular = 4;
  if (this->specular_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_specular_cached_byte_size_);
  }
  for (int i = 0; i < this->specular_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->specular(i), output);
  }

  // optional float intensity = 5;
  if (this->intensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->intensity(), output);
  }

  // optional float range = 6;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->range(), output);
  }

  // optional float angle = 7;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->angle(), output);
  }

  // optional float exponent = 8;
  if (this->exponent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->exponent(), output);
  }

  // repeated string excludedMeshesIds = 9;
  for (int i = 0; i < this->excludedmeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->excludedmeshesids(i).data(), this->excludedmeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.excludedMeshesIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->excludedmeshesids(i), output);
  }

  // repeated string includedOnlyMeshesIds = 10;
  for (int i = 0; i < this->includedonlymeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->includedonlymeshesids(i).data(), this->includedonlymeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.includedOnlyMeshesIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->includedonlymeshesids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YLight)
}

::google::protobuf::uint8* YLight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YLight)
  // repeated float diffuse = 3;
  if (this->diffuse_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _diffuse_cached_byte_size_, target);
  }
  for (int i = 0; i < this->diffuse_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->diffuse(i), target);
  }

  // repeated float specular = 4;
  if (this->specular_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _specular_cached_byte_size_, target);
  }
  for (int i = 0; i < this->specular_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->specular(i), target);
  }

  // optional float intensity = 5;
  if (this->intensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->intensity(), target);
  }

  // optional float range = 6;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->range(), target);
  }

  // optional float angle = 7;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->angle(), target);
  }

  // optional float exponent = 8;
  if (this->exponent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->exponent(), target);
  }

  // repeated string excludedMeshesIds = 9;
  for (int i = 0; i < this->excludedmeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->excludedmeshesids(i).data(), this->excludedmeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.excludedMeshesIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->excludedmeshesids(i), target);
  }

  // repeated string includedOnlyMeshesIds = 10;
  for (int i = 0; i < this->includedonlymeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->includedonlymeshesids(i).data(), this->includedonlymeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.includedOnlyMeshesIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->includedonlymeshesids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YLight)
  return target;
}

int YLight::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YLight)
  int total_size = 0;

  // optional float intensity = 5;
  if (this->intensity() != 0) {
    total_size += 1 + 4;
  }

  // optional float range = 6;
  if (this->range() != 0) {
    total_size += 1 + 4;
  }

  // optional float angle = 7;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // optional float exponent = 8;
  if (this->exponent() != 0) {
    total_size += 1 + 4;
  }

  // repeated float diffuse = 3;
  {
    int data_size = 0;
    data_size = 4 * this->diffuse_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _diffuse_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float specular = 4;
  {
    int data_size = 0;
    data_size = 4 * this->specular_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _specular_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string excludedMeshesIds = 9;
  total_size += 1 * this->excludedmeshesids_size();
  for (int i = 0; i < this->excludedmeshesids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->excludedmeshesids(i));
  }

  // repeated string includedOnlyMeshesIds = 10;
  total_size += 1 * this->includedonlymeshesids_size();
  for (int i = 0; i < this->includedonlymeshesids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->includedonlymeshesids(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YLight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YLight)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YLight* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YLight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YLight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YLight)
    MergeFrom(*source);
  }
}

void YLight::MergeFrom(const YLight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YLight)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  diffuse_.MergeFrom(from.diffuse_);
  specular_.MergeFrom(from.specular_);
  excludedmeshesids_.MergeFrom(from.excludedmeshesids_);
  includedonlymeshesids_.MergeFrom(from.includedonlymeshesids_);
  if (from.intensity() != 0) {
    set_intensity(from.intensity());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.exponent() != 0) {
    set_exponent(from.exponent());
  }
}

void YLight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YLight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YLight::CopyFrom(const YLight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YLight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YLight::IsInitialized() const {

  return true;
}

void YLight::Swap(YLight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YLight::InternalSwap(YLight* other) {
  diffuse_.UnsafeArenaSwap(&other->diffuse_);
  specular_.UnsafeArenaSwap(&other->specular_);
  std::swap(intensity_, other->intensity_);
  std::swap(range_, other->range_);
  std::swap(angle_, other->angle_);
  std::swap(exponent_, other->exponent_);
  excludedmeshesids_.UnsafeArenaSwap(&other->excludedmeshesids_);
  includedonlymeshesids_.UnsafeArenaSwap(&other->includedonlymeshesids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YLight::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YLight_descriptor_;
  metadata.reflection = YLight_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YLight

// repeated float diffuse = 3;
int YLight::diffuse_size() const {
  return diffuse_.size();
}
void YLight::clear_diffuse() {
  diffuse_.Clear();
}
 float YLight::diffuse(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.diffuse)
  return diffuse_.Get(index);
}
 void YLight::set_diffuse(int index, float value) {
  diffuse_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YLight.diffuse)
}
 void YLight::add_diffuse(float value) {
  diffuse_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.diffuse)
}
 const ::google::protobuf::RepeatedField< float >&
YLight::diffuse() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.diffuse)
  return diffuse_;
}
 ::google::protobuf::RepeatedField< float >*
YLight::mutable_diffuse() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.diffuse)
  return &diffuse_;
}

// repeated float specular = 4;
int YLight::specular_size() const {
  return specular_.size();
}
void YLight::clear_specular() {
  specular_.Clear();
}
 float YLight::specular(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.specular)
  return specular_.Get(index);
}
 void YLight::set_specular(int index, float value) {
  specular_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YLight.specular)
}
 void YLight::add_specular(float value) {
  specular_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.specular)
}
 const ::google::protobuf::RepeatedField< float >&
YLight::specular() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.specular)
  return specular_;
}
 ::google::protobuf::RepeatedField< float >*
YLight::mutable_specular() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.specular)
  return &specular_;
}

// optional float intensity = 5;
void YLight::clear_intensity() {
  intensity_ = 0;
}
 float YLight::intensity() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.intensity)
  return intensity_;
}
 void YLight::set_intensity(float value) {
  
  intensity_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.intensity)
}

// optional float range = 6;
void YLight::clear_range() {
  range_ = 0;
}
 float YLight::range() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.range)
  return range_;
}
 void YLight::set_range(float value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.range)
}

// optional float angle = 7;
void YLight::clear_angle() {
  angle_ = 0;
}
 float YLight::angle() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.angle)
  return angle_;
}
 void YLight::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.angle)
}

// optional float exponent = 8;
void YLight::clear_exponent() {
  exponent_ = 0;
}
 float YLight::exponent() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.exponent)
  return exponent_;
}
 void YLight::set_exponent(float value) {
  
  exponent_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.exponent)
}

// repeated string excludedMeshesIds = 9;
int YLight::excludedmeshesids_size() const {
  return excludedmeshesids_.size();
}
void YLight::clear_excludedmeshesids() {
  excludedmeshesids_.Clear();
}
 const ::std::string& YLight::excludedmeshesids(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_.Get(index);
}
 ::std::string* YLight::mutable_excludedmeshesids(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_.Mutable(index);
}
 void YLight::set_excludedmeshesids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YLight.excludedMeshesIds)
  excludedmeshesids_.Mutable(index)->assign(value);
}
 void YLight::set_excludedmeshesids(int index, const char* value) {
  excludedmeshesids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YLight.excludedMeshesIds)
}
 void YLight::set_excludedmeshesids(int index, const char* value, size_t size) {
  excludedmeshesids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YLight.excludedMeshesIds)
}
 ::std::string* YLight::add_excludedmeshesids() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_.Add();
}
 void YLight::add_excludedmeshesids(const ::std::string& value) {
  excludedmeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.excludedMeshesIds)
}
 void YLight::add_excludedmeshesids(const char* value) {
  excludedmeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YLight.excludedMeshesIds)
}
 void YLight::add_excludedmeshesids(const char* value, size_t size) {
  excludedmeshesids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YLight.excludedMeshesIds)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
YLight::excludedmeshesids() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
YLight::mutable_excludedmeshesids() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.excludedMeshesIds)
  return &excludedmeshesids_;
}

// repeated string includedOnlyMeshesIds = 10;
int YLight::includedonlymeshesids_size() const {
  return includedonlymeshesids_.size();
}
void YLight::clear_includedonlymeshesids() {
  includedonlymeshesids_.Clear();
}
 const ::std::string& YLight::includedonlymeshesids(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_.Get(index);
}
 ::std::string* YLight::mutable_includedonlymeshesids(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_.Mutable(index);
}
 void YLight::set_includedonlymeshesids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YLight.includedOnlyMeshesIds)
  includedonlymeshesids_.Mutable(index)->assign(value);
}
 void YLight::set_includedonlymeshesids(int index, const char* value) {
  includedonlymeshesids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YLight.includedOnlyMeshesIds)
}
 void YLight::set_includedonlymeshesids(int index, const char* value, size_t size) {
  includedonlymeshesids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YLight.includedOnlyMeshesIds)
}
 ::std::string* YLight::add_includedonlymeshesids() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_.Add();
}
 void YLight::add_includedonlymeshesids(const ::std::string& value) {
  includedonlymeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.includedOnlyMeshesIds)
}
 void YLight::add_includedonlymeshesids(const char* value) {
  includedonlymeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YLight.includedOnlyMeshesIds)
}
 void YLight::add_includedonlymeshesids(const char* value, size_t size) {
  includedonlymeshesids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YLight.includedOnlyMeshesIds)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
YLight::includedonlymeshesids() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
YLight::mutable_includedonlymeshesids() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.includedOnlyMeshesIds)
  return &includedonlymeshesids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YCamera::kRotationFieldNumber;
const int YCamera::kTargetFieldNumber;
const int YCamera::kFovFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YCamera::YCamera()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YCamera)
}

void YCamera::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

YCamera::YCamera(const YCamera& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YCamera)
}

void YCamera::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  fov_ = 0;
}

YCamera::~YCamera() {
  // @@protoc_insertion_point(destructor:y3d.YCamera)
  SharedDtor();
}

void YCamera::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YCamera::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YCamera::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YCamera_descriptor_;
}

const YCamera& YCamera::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YCamera* YCamera::default_instance_ = NULL;

YCamera* YCamera::New(::google::protobuf::Arena* arena) const {
  YCamera* n = new YCamera;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YCamera::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YCamera)
  fov_ = 0;
  rotation_.Clear();
  target_.Clear();
}

bool YCamera::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YCamera)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float rotation = 3;
      case 3: {
        if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rotation())));
        } else if (tag == 29) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26, input, this->mutable_rotation())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_target;
        break;
      }

      // repeated float target = 4;
      case 4: {
        if (tag == 34) {
         parse_target:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_target())));
        } else if (tag == 37) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34, input, this->mutable_target())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_fov;
        break;
      }

      // optional float fov = 5;
      case 5: {
        if (tag == 45) {
         parse_fov:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fov_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YCamera)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YCamera)
  return false;
#undef DO_
}

void YCamera::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YCamera)
  // repeated float rotation = 3;
  if (this->rotation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_rotation_cached_byte_size_);
  }
  for (int i = 0; i < this->rotation_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->rotation(i), output);
  }

  // repeated float target = 4;
  if (this->target_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_target_cached_byte_size_);
  }
  for (int i = 0; i < this->target_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->target(i), output);
  }

  // optional float fov = 5;
  if (this->fov() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->fov(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YCamera)
}

::google::protobuf::uint8* YCamera::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YCamera)
  // repeated float rotation = 3;
  if (this->rotation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _rotation_cached_byte_size_, target);
  }
  for (int i = 0; i < this->rotation_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->rotation(i), target);
  }

  // repeated float target = 4;
  if (this->target_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _target_cached_byte_size_, target);
  }
  for (int i = 0; i < this->target_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->target(i), target);
  }

  // optional float fov = 5;
  if (this->fov() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->fov(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YCamera)
  return target;
}

int YCamera::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YCamera)
  int total_size = 0;

  // optional float fov = 5;
  if (this->fov() != 0) {
    total_size += 1 + 4;
  }

  // repeated float rotation = 3;
  {
    int data_size = 0;
    data_size = 4 * this->rotation_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rotation_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float target = 4;
  {
    int data_size = 0;
    data_size = 4 * this->target_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YCamera::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YCamera)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YCamera* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YCamera>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YCamera)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YCamera)
    MergeFrom(*source);
  }
}

void YCamera::MergeFrom(const YCamera& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YCamera)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rotation_.MergeFrom(from.rotation_);
  target_.MergeFrom(from.target_);
  if (from.fov() != 0) {
    set_fov(from.fov());
  }
}

void YCamera::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YCamera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YCamera::CopyFrom(const YCamera& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YCamera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YCamera::IsInitialized() const {

  return true;
}

void YCamera::Swap(YCamera* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YCamera::InternalSwap(YCamera* other) {
  rotation_.UnsafeArenaSwap(&other->rotation_);
  target_.UnsafeArenaSwap(&other->target_);
  std::swap(fov_, other->fov_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YCamera::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YCamera_descriptor_;
  metadata.reflection = YCamera_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YCamera

// repeated float rotation = 3;
int YCamera::rotation_size() const {
  return rotation_.size();
}
void YCamera::clear_rotation() {
  rotation_.Clear();
}
 float YCamera::rotation(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YCamera.rotation)
  return rotation_.Get(index);
}
 void YCamera::set_rotation(int index, float value) {
  rotation_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YCamera.rotation)
}
 void YCamera::add_rotation(float value) {
  rotation_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YCamera.rotation)
}
 const ::google::protobuf::RepeatedField< float >&
YCamera::rotation() const {
  // @@protoc_insertion_point(field_list:y3d.YCamera.rotation)
  return rotation_;
}
 ::google::protobuf::RepeatedField< float >*
YCamera::mutable_rotation() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YCamera.rotation)
  return &rotation_;
}

// repeated float target = 4;
int YCamera::target_size() const {
  return target_.size();
}
void YCamera::clear_target() {
  target_.Clear();
}
 float YCamera::target(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YCamera.target)
  return target_.Get(index);
}
 void YCamera::set_target(int index, float value) {
  target_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YCamera.target)
}
 void YCamera::add_target(float value) {
  target_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YCamera.target)
}
 const ::google::protobuf::RepeatedField< float >&
YCamera::target() const {
  // @@protoc_insertion_point(field_list:y3d.YCamera.target)
  return target_;
}
 ::google::protobuf::RepeatedField< float >*
YCamera::mutable_target() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YCamera.target)
  return &target_;
}

// optional float fov = 5;
void YCamera::clear_fov() {
  fov_ = 0;
}
 float YCamera::fov() const {
  // @@protoc_insertion_point(field_get:y3d.YCamera.fov)
  return fov_;
}
 void YCamera::set_fov(float value) {
  
  fov_ = value;
  // @@protoc_insertion_point(field_set:y3d.YCamera.fov)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* YMesh_MeshType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YMesh_MeshType_descriptor_;
}
bool YMesh_MeshType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const YMesh_MeshType YMesh::Unknown;
const YMesh_MeshType YMesh::Editable_Mesh;
const YMesh_MeshType YMesh::Editable_Poly;
const YMesh_MeshType YMesh::Box;
const YMesh_MeshType YMesh::Sphere;
const YMesh_MeshType YMesh::GeoSphere;
const YMesh_MeshType YMesh::Cylinder;
const YMesh_MeshType YMesh::Tube;
const YMesh_MeshType YMesh::Torus;
const YMesh_MeshType YMesh::Pyramid;
const YMesh_MeshType YMesh::Teapot;
const YMesh_MeshType YMesh::Plane;
const YMesh_MeshType YMesh::Target;
const YMesh_MeshType YMesh::Cone;
const YMesh_MeshType YMesh::MeshType_MIN;
const YMesh_MeshType YMesh::MeshType_MAX;
const int YMesh::MeshType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* YMesh_XrefStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YMesh_XrefStatus_descriptor_;
}
bool YMesh_XrefStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const YMesh_XrefStatus YMesh::ORIGINAL;
const YMesh_XrefStatus YMesh::XREF_HIGHT;
const YMesh_XrefStatus YMesh::XREF_LOW;
const YMesh_XrefStatus YMesh::XREF_LOW_DISPLAY;
const YMesh_XrefStatus YMesh::BOX;
const YMesh_XrefStatus YMesh::MERGED;
const YMesh_XrefStatus YMesh::FINAL;
const YMesh_XrefStatus YMesh::XrefStatus_MIN;
const YMesh_XrefStatus YMesh::XrefStatus_MAX;
const int YMesh::XrefStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YMesh::kNumFacesFieldNumber;
const int YMesh::kBboxFieldNumber;
const int YMesh::kResIdFieldNumber;
const int YMesh::kXstatusFieldNumber;
const int YMesh::kMtypeFieldNumber;
const int YMesh::kVernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YMesh::YMesh()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YMesh)
}

void YMesh::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  bbox_ = const_cast< ::y3d::YBox3*>(&::y3d::YBox3::default_instance());
}

YMesh::YMesh(const YMesh& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YMesh)
}

void YMesh::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  num_faces_ = 0;
  bbox_ = NULL;
  res_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xstatus_ = 0;
  mtype_ = 0;
  vername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

YMesh::~YMesh() {
  // @@protoc_insertion_point(destructor:y3d.YMesh)
  SharedDtor();
}

void YMesh::SharedDtor() {
  res_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete bbox_;
  }
}

void YMesh::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YMesh::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YMesh_descriptor_;
}

const YMesh& YMesh::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YMesh* YMesh::default_instance_ = NULL;

YMesh* YMesh::New(::google::protobuf::Arena* arena) const {
  YMesh* n = new YMesh;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YMesh::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YMesh)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YMesh, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YMesh*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(num_faces_, xstatus_);
  if (GetArenaNoVirtual() == NULL && bbox_ != NULL) delete bbox_;
  bbox_ = NULL;
  res_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mtype_ = 0;
  vername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool YMesh::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YMesh)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_faces = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_faces_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bbox;
        break;
      }

      // optional .y3d.YBox3 bbox = 2;
      case 2: {
        if (tag == 18) {
         parse_bbox:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bbox()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_res_id;
        break;
      }

      // optional string res_id = 3;
      case 3: {
        if (tag == 26) {
         parse_res_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_res_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->res_id().data(), this->res_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YMesh.res_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_xstatus;
        break;
      }

      // optional .y3d.YMesh.XrefStatus xstatus = 5;
      case 5: {
        if (tag == 40) {
         parse_xstatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_xstatus(static_cast< ::y3d::YMesh_XrefStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_mtype;
        break;
      }

      // optional .y3d.YMesh.MeshType mtype = 6;
      case 6: {
        if (tag == 48) {
         parse_mtype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mtype(static_cast< ::y3d::YMesh_MeshType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_vername;
        break;
      }

      // optional string vername = 7;
      case 7: {
        if (tag == 58) {
         parse_vername:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vername().data(), this->vername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YMesh.vername"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YMesh)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YMesh)
  return false;
#undef DO_
}

void YMesh::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YMesh)
  // optional int32 num_faces = 1;
  if (this->num_faces() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_faces(), output);
  }

  // optional .y3d.YBox3 bbox = 2;
  if (this->has_bbox()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->bbox_, output);
  }

  // optional string res_id = 3;
  if (this->res_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_id().data(), this->res_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMesh.res_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->res_id(), output);
  }

  // optional .y3d.YMesh.XrefStatus xstatus = 5;
  if (this->xstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->xstatus(), output);
  }

  // optional .y3d.YMesh.MeshType mtype = 6;
  if (this->mtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->mtype(), output);
  }

  // optional string vername = 7;
  if (this->vername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vername().data(), this->vername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMesh.vername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->vername(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YMesh)
}

::google::protobuf::uint8* YMesh::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YMesh)
  // optional int32 num_faces = 1;
  if (this->num_faces() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_faces(), target);
  }

  // optional .y3d.YBox3 bbox = 2;
  if (this->has_bbox()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->bbox_, false, target);
  }

  // optional string res_id = 3;
  if (this->res_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_id().data(), this->res_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMesh.res_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->res_id(), target);
  }

  // optional .y3d.YMesh.XrefStatus xstatus = 5;
  if (this->xstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->xstatus(), target);
  }

  // optional .y3d.YMesh.MeshType mtype = 6;
  if (this->mtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->mtype(), target);
  }

  // optional string vername = 7;
  if (this->vername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vername().data(), this->vername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMesh.vername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->vername(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YMesh)
  return target;
}

int YMesh::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YMesh)
  int total_size = 0;

  // optional int32 num_faces = 1;
  if (this->num_faces() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_faces());
  }

  // optional .y3d.YBox3 bbox = 2;
  if (this->has_bbox()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bbox_);
  }

  // optional string res_id = 3;
  if (this->res_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->res_id());
  }

  // optional .y3d.YMesh.XrefStatus xstatus = 5;
  if (this->xstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->xstatus());
  }

  // optional .y3d.YMesh.MeshType mtype = 6;
  if (this->mtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mtype());
  }

  // optional string vername = 7;
  if (this->vername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vername());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YMesh::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YMesh)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YMesh* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YMesh>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YMesh)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YMesh)
    MergeFrom(*source);
  }
}

void YMesh::MergeFrom(const YMesh& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YMesh)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.num_faces() != 0) {
    set_num_faces(from.num_faces());
  }
  if (from.has_bbox()) {
    mutable_bbox()->::y3d::YBox3::MergeFrom(from.bbox());
  }
  if (from.res_id().size() > 0) {

    res_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_id_);
  }
  if (from.xstatus() != 0) {
    set_xstatus(from.xstatus());
  }
  if (from.mtype() != 0) {
    set_mtype(from.mtype());
  }
  if (from.vername().size() > 0) {

    vername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vername_);
  }
}

void YMesh::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YMesh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YMesh::CopyFrom(const YMesh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YMesh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YMesh::IsInitialized() const {

  return true;
}

void YMesh::Swap(YMesh* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YMesh::InternalSwap(YMesh* other) {
  std::swap(num_faces_, other->num_faces_);
  std::swap(bbox_, other->bbox_);
  res_id_.Swap(&other->res_id_);
  std::swap(xstatus_, other->xstatus_);
  std::swap(mtype_, other->mtype_);
  vername_.Swap(&other->vername_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YMesh::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YMesh_descriptor_;
  metadata.reflection = YMesh_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YMesh

// optional int32 num_faces = 1;
void YMesh::clear_num_faces() {
  num_faces_ = 0;
}
 ::google::protobuf::int32 YMesh::num_faces() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.num_faces)
  return num_faces_;
}
 void YMesh::set_num_faces(::google::protobuf::int32 value) {
  
  num_faces_ = value;
  // @@protoc_insertion_point(field_set:y3d.YMesh.num_faces)
}

// optional .y3d.YBox3 bbox = 2;
bool YMesh::has_bbox() const {
  return !_is_default_instance_ && bbox_ != NULL;
}
void YMesh::clear_bbox() {
  if (GetArenaNoVirtual() == NULL && bbox_ != NULL) delete bbox_;
  bbox_ = NULL;
}
const ::y3d::YBox3& YMesh::bbox() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.bbox)
  return bbox_ != NULL ? *bbox_ : *default_instance_->bbox_;
}
::y3d::YBox3* YMesh::mutable_bbox() {
  
  if (bbox_ == NULL) {
    bbox_ = new ::y3d::YBox3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YMesh.bbox)
  return bbox_;
}
::y3d::YBox3* YMesh::release_bbox() {
  // @@protoc_insertion_point(field_release:y3d.YMesh.bbox)
  
  ::y3d::YBox3* temp = bbox_;
  bbox_ = NULL;
  return temp;
}
void YMesh::set_allocated_bbox(::y3d::YBox3* bbox) {
  delete bbox_;
  bbox_ = bbox;
  if (bbox) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YMesh.bbox)
}

// optional string res_id = 3;
void YMesh::clear_res_id() {
  res_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& YMesh::res_id() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.res_id)
  return res_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YMesh::set_res_id(const ::std::string& value) {
  
  res_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YMesh.res_id)
}
 void YMesh::set_res_id(const char* value) {
  
  res_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YMesh.res_id)
}
 void YMesh::set_res_id(const char* value, size_t size) {
  
  res_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YMesh.res_id)
}
 ::std::string* YMesh::mutable_res_id() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YMesh.res_id)
  return res_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YMesh::release_res_id() {
  // @@protoc_insertion_point(field_release:y3d.YMesh.res_id)
  
  return res_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YMesh::set_allocated_res_id(::std::string* res_id) {
  if (res_id != NULL) {
    
  } else {
    
  }
  res_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), res_id);
  // @@protoc_insertion_point(field_set_allocated:y3d.YMesh.res_id)
}

// optional .y3d.YMesh.XrefStatus xstatus = 5;
void YMesh::clear_xstatus() {
  xstatus_ = 0;
}
 ::y3d::YMesh_XrefStatus YMesh::xstatus() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.xstatus)
  return static_cast< ::y3d::YMesh_XrefStatus >(xstatus_);
}
 void YMesh::set_xstatus(::y3d::YMesh_XrefStatus value) {
  
  xstatus_ = value;
  // @@protoc_insertion_point(field_set:y3d.YMesh.xstatus)
}

// optional .y3d.YMesh.MeshType mtype = 6;
void YMesh::clear_mtype() {
  mtype_ = 0;
}
 ::y3d::YMesh_MeshType YMesh::mtype() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.mtype)
  return static_cast< ::y3d::YMesh_MeshType >(mtype_);
}
 void YMesh::set_mtype(::y3d::YMesh_MeshType value) {
  
  mtype_ = value;
  // @@protoc_insertion_point(field_set:y3d.YMesh.mtype)
}

// optional string vername = 7;
void YMesh::clear_vername() {
  vername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& YMesh::vername() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.vername)
  return vername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YMesh::set_vername(const ::std::string& value) {
  
  vername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YMesh.vername)
}
 void YMesh::set_vername(const char* value) {
  
  vername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YMesh.vername)
}
 void YMesh::set_vername(const char* value, size_t size) {
  
  vername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YMesh.vername)
}
 ::std::string* YMesh::mutable_vername() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YMesh.vername)
  return vername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YMesh::release_vername() {
  // @@protoc_insertion_point(field_release:y3d.YMesh.vername)
  
  return vername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YMesh::set_allocated_vername(::std::string* vername) {
  if (vername != NULL) {
    
  } else {
    
  }
  vername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vername);
  // @@protoc_insertion_point(field_set_allocated:y3d.YMesh.vername)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YObject::kNameFieldNumber;
const int YObject::kPosFieldNumber;
const int YObject::kExtraFieldNumber;
const int YObject::kOtypeFieldNumber;
const int YObject::kTagsFieldNumber;
const int YObject::kCateIdFieldNumber;
const int YObject::kLightFieldNumber;
const int YObject::kCameraFieldNumber;
const int YObject::kMeshFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YObject::YObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YObject)
}

void YObject::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  pos_ = const_cast< ::y3d::YPoint3*>(&::y3d::YPoint3::default_instance());
  YObject_default_oneof_instance_->light_ = const_cast< ::y3d::YLight*>(&::y3d::YLight::default_instance());
  YObject_default_oneof_instance_->camera_ = const_cast< ::y3d::YCamera*>(&::y3d::YCamera::default_instance());
  YObject_default_oneof_instance_->mesh_ = const_cast< ::y3d::YMesh*>(&::y3d::YMesh::default_instance());
}

YObject::YObject(const YObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YObject)
}

void YObject::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pos_ = NULL;
  extra_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  extra_.SetEntryDescriptor(
      &::y3d::YObject_ExtraEntry_descriptor_);
  otype_ = 0;
  cate_id_ = 0;
  clear_has_data();
}

YObject::~YObject() {
  // @@protoc_insertion_point(destructor:y3d.YObject)
  SharedDtor();
}

void YObject::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_data()) {
    clear_data();
  }
  if (this != default_instance_) {
    delete pos_;
  }
}

void YObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YObject_descriptor_;
}

const YObject& YObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YObject* YObject::default_instance_ = NULL;

YObject* YObject::New(::google::protobuf::Arena* arena) const {
  YObject* n = new YObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YObject::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:y3d.YObject)
  switch(data_case()) {
    case kLight: {
      delete data_.light_;
      break;
    }
    case kCamera: {
      delete data_.camera_;
      break;
    }
    case kMesh: {
      delete data_.mesh_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void YObject::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YObject)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YObject, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YObject*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(otype_, cate_id_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  extra_.Clear();
  tags_.Clear();
  clear_data();
}

bool YObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YObject.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pos;
        break;
      }

      // optional .y3d.YPoint3 pos = 3;
      case 3: {
        if (tag == 26) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_extra;
        break;
      }

      // map<string, .google.protobuf.Any> extra = 5;
      case 5: {
        if (tag == 42) {
         parse_extra:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra:
          YObject_ExtraEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::protobuf::Any,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Any > > parser(&extra_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YObject.ExtraEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_extra;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(48)) goto parse_otype;
        break;
      }

      // optional .y3d.ObjectType otype = 6;
      case 6: {
        if (tag == 48) {
         parse_otype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_otype(static_cast< ::y3d::ObjectType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_tags;
        break;
      }

      // repeated string tags = 7;
      case 7: {
        if (tag == 58) {
         parse_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YObject.tags"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_tags;
        if (input->ExpectTag(64)) goto parse_cate_id;
        break;
      }

      // optional int32 cate_id = 8;
      case 8: {
        if (tag == 64) {
         parse_cate_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cate_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_light;
        break;
      }

      // optional .y3d.YLight light = 10;
      case 10: {
        if (tag == 82) {
         parse_light:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_light()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_camera;
        break;
      }

      // optional .y3d.YCamera camera = 11;
      case 11: {
        if (tag == 90) {
         parse_camera:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_camera()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_mesh;
        break;
      }

      // optional .y3d.YMesh mesh = 12;
      case 12: {
        if (tag == 98) {
         parse_mesh:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mesh()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YObject)
  return false;
#undef DO_
}

void YObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YObject)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .y3d.YPoint3 pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  // map<string, .google.protobuf.Any> extra = 5;
  if (!this->extra().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YObject.ExtraEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->extra().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->extra().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(extra_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it) {
        entry.reset(extra_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .y3d.ObjectType otype = 6;
  if (this->otype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->otype(), output);
  }

  // repeated string tags = 7;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->tags(i), output);
  }

  // optional int32 cate_id = 8;
  if (this->cate_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->cate_id(), output);
  }

  // optional .y3d.YLight light = 10;
  if (has_light()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *data_.light_, output);
  }

  // optional .y3d.YCamera camera = 11;
  if (has_camera()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *data_.camera_, output);
  }

  // optional .y3d.YMesh mesh = 12;
  if (has_mesh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *data_.mesh_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YObject)
}

::google::protobuf::uint8* YObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YObject)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .y3d.YPoint3 pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pos_, false, target);
  }

  // map<string, .google.protobuf.Any> extra = 5;
  if (!this->extra().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YObject.ExtraEntry.key");
      }
    };

    if (deterministic &&
        this->extra().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->extra().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(extra_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it) {
        entry.reset(extra_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .y3d.ObjectType otype = 6;
  if (this->otype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->otype(), target);
  }

  // repeated string tags = 7;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->tags(i), target);
  }

  // optional int32 cate_id = 8;
  if (this->cate_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->cate_id(), target);
  }

  // optional .y3d.YLight light = 10;
  if (has_light()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *data_.light_, false, target);
  }

  // optional .y3d.YCamera camera = 11;
  if (has_camera()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *data_.camera_, false, target);
  }

  // optional .y3d.YMesh mesh = 12;
  if (has_mesh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *data_.mesh_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YObject)
  return target;
}

int YObject::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YObject)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .y3d.YPoint3 pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // optional .y3d.ObjectType otype = 6;
  if (this->otype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->otype());
  }

  // optional int32 cate_id = 8;
  if (this->cate_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cate_id());
  }

  // map<string, .google.protobuf.Any> extra = 5;
  total_size += 1 * this->extra_size();
  {
    ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
        it = this->extra().begin();
        it != this->extra().end(); ++it) {
      entry.reset(extra_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string tags = 7;
  total_size += 1 * this->tags_size();
  for (int i = 0; i < this->tags_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  switch (data_case()) {
    // optional .y3d.YLight light = 10;
    case kLight: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_.light_);
      break;
    }
    // optional .y3d.YCamera camera = 11;
    case kCamera: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_.camera_);
      break;
    }
    // optional .y3d.YMesh mesh = 12;
    case kMesh: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_.mesh_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YObject)
    MergeFrom(*source);
  }
}

void YObject::MergeFrom(const YObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  extra_.MergeFrom(from.extra_);
  tags_.MergeFrom(from.tags_);
  switch (from.data_case()) {
    case kLight: {
      mutable_light()->::y3d::YLight::MergeFrom(from.light());
      break;
    }
    case kCamera: {
      mutable_camera()->::y3d::YCamera::MergeFrom(from.camera());
      break;
    }
    case kMesh: {
      mutable_mesh()->::y3d::YMesh::MergeFrom(from.mesh());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_pos()) {
    mutable_pos()->::y3d::YPoint3::MergeFrom(from.pos());
  }
  if (from.otype() != 0) {
    set_otype(from.otype());
  }
  if (from.cate_id() != 0) {
    set_cate_id(from.cate_id());
  }
}

void YObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YObject::CopyFrom(const YObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YObject::IsInitialized() const {

  return true;
}

void YObject::Swap(YObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YObject::InternalSwap(YObject* other) {
  name_.Swap(&other->name_);
  std::swap(pos_, other->pos_);
  extra_.Swap(&other->extra_);
  std::swap(otype_, other->otype_);
  tags_.UnsafeArenaSwap(&other->tags_);
  std::swap(cate_id_, other->cate_id_);
  std::swap(data_, other->data_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YObject_descriptor_;
  metadata.reflection = YObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YObject

// optional string name = 1;
void YObject::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& YObject::name() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YObject::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YObject.name)
}
 void YObject::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YObject.name)
}
 void YObject::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YObject.name)
}
 ::std::string* YObject::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YObject.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YObject::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YObject.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YObject::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.name)
}

// optional .y3d.YPoint3 pos = 3;
bool YObject::has_pos() const {
  return !_is_default_instance_ && pos_ != NULL;
}
void YObject::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::y3d::YPoint3& YObject::pos() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
::y3d::YPoint3* YObject::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::y3d::YPoint3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.pos)
  return pos_;
}
::y3d::YPoint3* YObject::release_pos() {
  // @@protoc_insertion_point(field_release:y3d.YObject.pos)
  
  ::y3d::YPoint3* temp = pos_;
  pos_ = NULL;
  return temp;
}
void YObject::set_allocated_pos(::y3d::YPoint3* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.pos)
}

// map<string, .google.protobuf.Any> extra = 5;
int YObject::extra_size() const {
  return extra_.size();
}
void YObject::clear_extra() {
  extra_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >&
YObject::extra() const {
  // @@protoc_insertion_point(field_map:y3d.YObject.extra)
  return extra_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >*
YObject::mutable_extra() {
  // @@protoc_insertion_point(field_mutable_map:y3d.YObject.extra)
  return extra_.MutableMap();
}

// optional .y3d.ObjectType otype = 6;
void YObject::clear_otype() {
  otype_ = 0;
}
 ::y3d::ObjectType YObject::otype() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.otype)
  return static_cast< ::y3d::ObjectType >(otype_);
}
 void YObject::set_otype(::y3d::ObjectType value) {
  
  otype_ = value;
  // @@protoc_insertion_point(field_set:y3d.YObject.otype)
}

// repeated string tags = 7;
int YObject::tags_size() const {
  return tags_.size();
}
void YObject::clear_tags() {
  tags_.Clear();
}
 const ::std::string& YObject::tags(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YObject.tags)
  return tags_.Get(index);
}
 ::std::string* YObject::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YObject.tags)
  return tags_.Mutable(index);
}
 void YObject::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YObject.tags)
  tags_.Mutable(index)->assign(value);
}
 void YObject::set_tags(int index, const char* value) {
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YObject.tags)
}
 void YObject::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YObject.tags)
}
 ::std::string* YObject::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YObject.tags)
  return tags_.Add();
}
 void YObject::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YObject.tags)
}
 void YObject::add_tags(const char* value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YObject.tags)
}
 void YObject::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YObject.tags)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
YObject::tags() const {
  // @@protoc_insertion_point(field_list:y3d.YObject.tags)
  return tags_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
YObject::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YObject.tags)
  return &tags_;
}

// optional int32 cate_id = 8;
void YObject::clear_cate_id() {
  cate_id_ = 0;
}
 ::google::protobuf::int32 YObject::cate_id() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.cate_id)
  return cate_id_;
}
 void YObject::set_cate_id(::google::protobuf::int32 value) {
  
  cate_id_ = value;
  // @@protoc_insertion_point(field_set:y3d.YObject.cate_id)
}

// optional .y3d.YLight light = 10;
bool YObject::has_light() const {
  return data_case() == kLight;
}
void YObject::set_has_light() {
  _oneof_case_[0] = kLight;
}
void YObject::clear_light() {
  if (has_light()) {
    delete data_.light_;
    clear_has_data();
  }
}
 const ::y3d::YLight& YObject::light() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.light)
  return has_light()
      ? *data_.light_
      : ::y3d::YLight::default_instance();
}
::y3d::YLight* YObject::mutable_light() {
  if (!has_light()) {
    clear_data();
    set_has_light();
    data_.light_ = new ::y3d::YLight;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.light)
  return data_.light_;
}
::y3d::YLight* YObject::release_light() {
  // @@protoc_insertion_point(field_release:y3d.YObject.light)
  if (has_light()) {
    clear_has_data();
    ::y3d::YLight* temp = data_.light_;
    data_.light_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YObject::set_allocated_light(::y3d::YLight* light) {
  clear_data();
  if (light) {
    set_has_light();
    data_.light_ = light;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.light)
}

// optional .y3d.YCamera camera = 11;
bool YObject::has_camera() const {
  return data_case() == kCamera;
}
void YObject::set_has_camera() {
  _oneof_case_[0] = kCamera;
}
void YObject::clear_camera() {
  if (has_camera()) {
    delete data_.camera_;
    clear_has_data();
  }
}
 const ::y3d::YCamera& YObject::camera() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.camera)
  return has_camera()
      ? *data_.camera_
      : ::y3d::YCamera::default_instance();
}
::y3d::YCamera* YObject::mutable_camera() {
  if (!has_camera()) {
    clear_data();
    set_has_camera();
    data_.camera_ = new ::y3d::YCamera;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.camera)
  return data_.camera_;
}
::y3d::YCamera* YObject::release_camera() {
  // @@protoc_insertion_point(field_release:y3d.YObject.camera)
  if (has_camera()) {
    clear_has_data();
    ::y3d::YCamera* temp = data_.camera_;
    data_.camera_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YObject::set_allocated_camera(::y3d::YCamera* camera) {
  clear_data();
  if (camera) {
    set_has_camera();
    data_.camera_ = camera;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.camera)
}

// optional .y3d.YMesh mesh = 12;
bool YObject::has_mesh() const {
  return data_case() == kMesh;
}
void YObject::set_has_mesh() {
  _oneof_case_[0] = kMesh;
}
void YObject::clear_mesh() {
  if (has_mesh()) {
    delete data_.mesh_;
    clear_has_data();
  }
}
 const ::y3d::YMesh& YObject::mesh() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.mesh)
  return has_mesh()
      ? *data_.mesh_
      : ::y3d::YMesh::default_instance();
}
::y3d::YMesh* YObject::mutable_mesh() {
  if (!has_mesh()) {
    clear_data();
    set_has_mesh();
    data_.mesh_ = new ::y3d::YMesh;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.mesh)
  return data_.mesh_;
}
::y3d::YMesh* YObject::release_mesh() {
  // @@protoc_insertion_point(field_release:y3d.YObject.mesh)
  if (has_mesh()) {
    clear_has_data();
    ::y3d::YMesh* temp = data_.mesh_;
    data_.mesh_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YObject::set_allocated_mesh(::y3d::YMesh* mesh) {
  clear_data();
  if (mesh) {
    set_has_mesh();
    data_.mesh_ = mesh;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.mesh)
}

bool YObject::has_data() const {
  return data_case() != DATA_NOT_SET;
}
void YObject::clear_has_data() {
  _oneof_case_[0] = DATA_NOT_SET;
}
YObject::DataCase YObject::data_case() const {
  return YObject::DataCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YArea::kNameFieldNumber;
const int YArea::kGroupsFieldNumber;
const int YArea::kObjsFieldNumber;
const int YArea::kGversFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YArea::YArea()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YArea)
}

void YArea::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

YArea::YArea(const YArea& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YArea)
}

void YArea::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gvers_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  gvers_.SetEntryDescriptor(
      &::y3d::YArea_GversEntry_descriptor_);
}

YArea::~YArea() {
  // @@protoc_insertion_point(destructor:y3d.YArea)
  SharedDtor();
}

void YArea::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void YArea::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YArea::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YArea_descriptor_;
}

const YArea& YArea::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YArea* YArea::default_instance_ = NULL;

YArea* YArea::New(::google::protobuf::Arena* arena) const {
  YArea* n = new YArea;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YArea::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YArea)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groups_.Clear();
  objs_.Clear();
  gvers_.Clear();
}

bool YArea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YArea)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YArea.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groups;
        break;
      }

      // repeated .y3d.YGroup groups = 2;
      case 2: {
        if (tag == 18) {
         parse_groups:
          DO_(input->IncrementRecursionDepth());
         parse_loop_groups:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_groups;
        if (input->ExpectTag(26)) goto parse_loop_objs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .y3d.YObject objs = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_objs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_objs;
        if (input->ExpectTag(50)) goto parse_loop_gvers;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, .y3d.YGroupVer> gvers = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_gvers:
          YArea_GversEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::y3d::YGroupVer,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer > > parser(&gvers_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YArea.GversEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_gvers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YArea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YArea)
  return false;
#undef DO_
}

void YArea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YArea)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YArea.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->groups(i), output);
  }

  // repeated .y3d.YObject objs = 3;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->objs(i), output);
  }

  // map<string, .y3d.YGroupVer> gvers = 6;
  if (!this->gvers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YArea.GversEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->gvers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gvers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gvers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it) {
        entry.reset(gvers_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:y3d.YArea)
}

::google::protobuf::uint8* YArea::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YArea)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YArea.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->groups(i), false, target);
  }

  // repeated .y3d.YObject objs = 3;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->objs(i), false, target);
  }

  // map<string, .y3d.YGroupVer> gvers = 6;
  if (!this->gvers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YArea.GversEntry.key");
      }
    };

    if (deterministic &&
        this->gvers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gvers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gvers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it) {
        entry.reset(gvers_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YArea)
  return target;
}

int YArea::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YArea)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated .y3d.YGroup groups = 2;
  total_size += 1 * this->groups_size();
  for (int i = 0; i < this->groups_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->groups(i));
  }

  // repeated .y3d.YObject objs = 3;
  total_size += 1 * this->objs_size();
  for (int i = 0; i < this->objs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objs(i));
  }

  // map<string, .y3d.YGroupVer> gvers = 6;
  total_size += 1 * this->gvers_size();
  {
    ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
        it = this->gvers().begin();
        it != this->gvers().end(); ++it) {
      entry.reset(gvers_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YArea::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YArea)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YArea* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YArea>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YArea)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YArea)
    MergeFrom(*source);
  }
}

void YArea::MergeFrom(const YArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YArea)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  groups_.MergeFrom(from.groups_);
  objs_.MergeFrom(from.objs_);
  gvers_.MergeFrom(from.gvers_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void YArea::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YArea::CopyFrom(const YArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YArea::IsInitialized() const {

  return true;
}

void YArea::Swap(YArea* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YArea::InternalSwap(YArea* other) {
  name_.Swap(&other->name_);
  groups_.UnsafeArenaSwap(&other->groups_);
  objs_.UnsafeArenaSwap(&other->objs_);
  gvers_.Swap(&other->gvers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YArea::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YArea_descriptor_;
  metadata.reflection = YArea_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YArea

// optional string name = 1;
void YArea::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& YArea::name() const {
  // @@protoc_insertion_point(field_get:y3d.YArea.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YArea::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YArea.name)
}
 void YArea::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YArea.name)
}
 void YArea::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YArea.name)
}
 ::std::string* YArea::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YArea.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YArea::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YArea.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YArea::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YArea.name)
}

// repeated .y3d.YGroup groups = 2;
int YArea::groups_size() const {
  return groups_.size();
}
void YArea::clear_groups() {
  groups_.Clear();
}
const ::y3d::YGroup& YArea::groups(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YArea.groups)
  return groups_.Get(index);
}
::y3d::YGroup* YArea::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YArea.groups)
  return groups_.Mutable(index);
}
::y3d::YGroup* YArea::add_groups() {
  // @@protoc_insertion_point(field_add:y3d.YArea.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YGroup >*
YArea::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YArea.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YGroup >&
YArea::groups() const {
  // @@protoc_insertion_point(field_list:y3d.YArea.groups)
  return groups_;
}

// repeated .y3d.YObject objs = 3;
int YArea::objs_size() const {
  return objs_.size();
}
void YArea::clear_objs() {
  objs_.Clear();
}
const ::y3d::YObject& YArea::objs(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YArea.objs)
  return objs_.Get(index);
}
::y3d::YObject* YArea::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YArea.objs)
  return objs_.Mutable(index);
}
::y3d::YObject* YArea::add_objs() {
  // @@protoc_insertion_point(field_add:y3d.YArea.objs)
  return objs_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YObject >*
YArea::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YArea.objs)
  return &objs_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YObject >&
YArea::objs() const {
  // @@protoc_insertion_point(field_list:y3d.YArea.objs)
  return objs_;
}

// map<string, .y3d.YGroupVer> gvers = 6;
int YArea::gvers_size() const {
  return gvers_.size();
}
void YArea::clear_gvers() {
  gvers_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >&
YArea::gvers() const {
  // @@protoc_insertion_point(field_map:y3d.YArea.gvers)
  return gvers_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >*
YArea::mutable_gvers() {
  // @@protoc_insertion_point(field_mutable_map:y3d.YArea.gvers)
  return gvers_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YAreaList::kAreasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YAreaList::YAreaList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YAreaList)
}

void YAreaList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

YAreaList::YAreaList(const YAreaList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YAreaList)
}

void YAreaList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

YAreaList::~YAreaList() {
  // @@protoc_insertion_point(destructor:y3d.YAreaList)
  SharedDtor();
}

void YAreaList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YAreaList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YAreaList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YAreaList_descriptor_;
}

const YAreaList& YAreaList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YAreaList* YAreaList::default_instance_ = NULL;

YAreaList* YAreaList::New(::google::protobuf::Arena* arena) const {
  YAreaList* n = new YAreaList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YAreaList::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YAreaList)
  areas_.Clear();
}

bool YAreaList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YAreaList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .y3d.YArea areas = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_areas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_areas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_areas;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YAreaList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YAreaList)
  return false;
#undef DO_
}

void YAreaList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YAreaList)
  // repeated .y3d.YArea areas = 1;
  for (unsigned int i = 0, n = this->areas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->areas(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YAreaList)
}

::google::protobuf::uint8* YAreaList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YAreaList)
  // repeated .y3d.YArea areas = 1;
  for (unsigned int i = 0, n = this->areas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->areas(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YAreaList)
  return target;
}

int YAreaList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YAreaList)
  int total_size = 0;

  // repeated .y3d.YArea areas = 1;
  total_size += 1 * this->areas_size();
  for (int i = 0; i < this->areas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->areas(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YAreaList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YAreaList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YAreaList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YAreaList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YAreaList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YAreaList)
    MergeFrom(*source);
  }
}

void YAreaList::MergeFrom(const YAreaList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YAreaList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  areas_.MergeFrom(from.areas_);
}

void YAreaList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YAreaList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YAreaList::CopyFrom(const YAreaList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YAreaList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YAreaList::IsInitialized() const {

  return true;
}

void YAreaList::Swap(YAreaList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YAreaList::InternalSwap(YAreaList* other) {
  areas_.UnsafeArenaSwap(&other->areas_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YAreaList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YAreaList_descriptor_;
  metadata.reflection = YAreaList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YAreaList

// repeated .y3d.YArea areas = 1;
int YAreaList::areas_size() const {
  return areas_.size();
}
void YAreaList::clear_areas() {
  areas_.Clear();
}
const ::y3d::YArea& YAreaList::areas(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YAreaList.areas)
  return areas_.Get(index);
}
::y3d::YArea* YAreaList::mutable_areas(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YAreaList.areas)
  return areas_.Mutable(index);
}
::y3d::YArea* YAreaList::add_areas() {
  // @@protoc_insertion_point(field_add:y3d.YAreaList.areas)
  return areas_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YArea >*
YAreaList::mutable_areas() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YAreaList.areas)
  return &areas_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YArea >&
YAreaList::areas() const {
  // @@protoc_insertion_point(field_list:y3d.YAreaList.areas)
  return areas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YLayer::kNameFieldNumber;
const int YLayer::kGroupsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YLayer::YLayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YLayer)
}

void YLayer::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

YLayer::YLayer(const YLayer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YLayer)
}

void YLayer::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

YLayer::~YLayer() {
  // @@protoc_insertion_point(destructor:y3d.YLayer)
  SharedDtor();
}

void YLayer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void YLayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YLayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YLayer_descriptor_;
}

const YLayer& YLayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YLayer* YLayer::default_instance_ = NULL;

YLayer* YLayer::New(::google::protobuf::Arena* arena) const {
  YLayer* n = new YLayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YLayer::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YLayer)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groups_.Clear();
}

bool YLayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YLayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YLayer.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groups;
        break;
      }

      // repeated .y3d.YGroup groups = 2;
      case 2: {
        if (tag == 18) {
         parse_groups:
          DO_(input->IncrementRecursionDepth());
         parse_loop_groups:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_groups;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YLayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YLayer)
  return false;
#undef DO_
}

void YLayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YLayer)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLayer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->groups(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YLayer)
}

::google::protobuf::uint8* YLayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YLayer)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLayer.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->groups(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YLayer)
  return target;
}

int YLayer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YLayer)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated .y3d.YGroup groups = 2;
  total_size += 1 * this->groups_size();
  for (int i = 0; i < this->groups_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->groups(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YLayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YLayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YLayer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YLayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YLayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YLayer)
    MergeFrom(*source);
  }
}

void YLayer::MergeFrom(const YLayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YLayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  groups_.MergeFrom(from.groups_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void YLayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YLayer::CopyFrom(const YLayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YLayer::IsInitialized() const {

  return true;
}

void YLayer::Swap(YLayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YLayer::InternalSwap(YLayer* other) {
  name_.Swap(&other->name_);
  groups_.UnsafeArenaSwap(&other->groups_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YLayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YLayer_descriptor_;
  metadata.reflection = YLayer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YLayer

// optional string name = 1;
void YLayer::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& YLayer::name() const {
  // @@protoc_insertion_point(field_get:y3d.YLayer.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YLayer::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YLayer.name)
}
 void YLayer::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YLayer.name)
}
 void YLayer::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YLayer.name)
}
 ::std::string* YLayer::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YLayer.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YLayer::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YLayer.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YLayer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YLayer.name)
}

// repeated .y3d.YGroup groups = 2;
int YLayer::groups_size() const {
  return groups_.size();
}
void YLayer::clear_groups() {
  groups_.Clear();
}
const ::y3d::YGroup& YLayer::groups(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLayer.groups)
  return groups_.Get(index);
}
::y3d::YGroup* YLayer::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YLayer.groups)
  return groups_.Mutable(index);
}
::y3d::YGroup* YLayer::add_groups() {
  // @@protoc_insertion_point(field_add:y3d.YLayer.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YGroup >*
YLayer::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLayer.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YGroup >&
YLayer::groups() const {
  // @@protoc_insertion_point(field_list:y3d.YLayer.groups)
  return groups_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YGroup::kNameFieldNumber;
const int YGroup::kObjsFieldNumber;
const int YGroup::kChildrenFieldNumber;
const int YGroup::kGvTypeFieldNumber;
const int YGroup::kXrefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YGroup::YGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YGroup)
}

void YGroup::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

YGroup::YGroup(const YGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YGroup)
}

void YGroup::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gv_type_ = 0;
}

YGroup::~YGroup() {
  // @@protoc_insertion_point(destructor:y3d.YGroup)
  SharedDtor();
}

void YGroup::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void YGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YGroup_descriptor_;
}

const YGroup& YGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YGroup* YGroup::default_instance_ = NULL;

YGroup* YGroup::New(::google::protobuf::Arena* arena) const {
  YGroup* n = new YGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YGroup)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gv_type_ = 0;
  objs_.Clear();
  children_.Clear();
  xref_.Clear();
}

bool YGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YGroup.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_objs;
        break;
      }

      // repeated .y3d.YObject objs = 2;
      case 2: {
        if (tag == 18) {
         parse_objs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_objs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_objs;
        if (input->ExpectTag(26)) goto parse_loop_children;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .y3d.YGroup children = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_children:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_children;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_gv_type;
        break;
      }

      // optional .y3d.GVerType gv_type = 4;
      case 4: {
        if (tag == 32) {
         parse_gv_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gv_type(static_cast< ::y3d::GVerType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_xref;
        break;
      }

      // repeated string xref = 5;
      case 5: {
        if (tag == 42) {
         parse_xref:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_xref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xref(this->xref_size() - 1).data(),
            this->xref(this->xref_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YGroup.xref"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_xref;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YGroup)
  return false;
#undef DO_
}

void YGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YGroup)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .y3d.YObject objs = 2;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->objs(i), output);
  }

  // repeated .y3d.YGroup children = 3;
  for (unsigned int i = 0, n = this->children_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->children(i), output);
  }

  // optional .y3d.GVerType gv_type = 4;
  if (this->gv_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->gv_type(), output);
  }

  // repeated string xref = 5;
  for (int i = 0; i < this->xref_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xref(i).data(), this->xref(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.xref");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->xref(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YGroup)
}

::google::protobuf::uint8* YGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YGroup)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .y3d.YObject objs = 2;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->objs(i), false, target);
  }

  // repeated .y3d.YGroup children = 3;
  for (unsigned int i = 0, n = this->children_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->children(i), false, target);
  }

  // optional .y3d.GVerType gv_type = 4;
  if (this->gv_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->gv_type(), target);
  }

  // repeated string xref = 5;
  for (int i = 0; i < this->xref_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xref(i).data(), this->xref(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.xref");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->xref(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YGroup)
  return target;
}

int YGroup::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YGroup)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .y3d.GVerType gv_type = 4;
  if (this->gv_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gv_type());
  }

  // repeated .y3d.YObject objs = 2;
  total_size += 1 * this->objs_size();
  for (int i = 0; i < this->objs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objs(i));
  }

  // repeated .y3d.YGroup children = 3;
  total_size += 1 * this->children_size();
  for (int i = 0; i < this->children_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->children(i));
  }

  // repeated string xref = 5;
  total_size += 1 * this->xref_size();
  for (int i = 0; i < this->xref_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->xref(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YGroup* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YGroup)
    MergeFrom(*source);
  }
}

void YGroup::MergeFrom(const YGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  objs_.MergeFrom(from.objs_);
  children_.MergeFrom(from.children_);
  xref_.MergeFrom(from.xref_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.gv_type() != 0) {
    set_gv_type(from.gv_type());
  }
}

void YGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YGroup::CopyFrom(const YGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YGroup::IsInitialized() const {

  return true;
}

void YGroup::Swap(YGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YGroup::InternalSwap(YGroup* other) {
  name_.Swap(&other->name_);
  objs_.UnsafeArenaSwap(&other->objs_);
  children_.UnsafeArenaSwap(&other->children_);
  std::swap(gv_type_, other->gv_type_);
  xref_.UnsafeArenaSwap(&other->xref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YGroup_descriptor_;
  metadata.reflection = YGroup_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YGroup

// optional string name = 1;
void YGroup::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& YGroup::name() const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YGroup::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YGroup.name)
}
 void YGroup::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YGroup.name)
}
 void YGroup::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YGroup.name)
}
 ::std::string* YGroup::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YGroup::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YGroup.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YGroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YGroup.name)
}

// repeated .y3d.YObject objs = 2;
int YGroup::objs_size() const {
  return objs_.size();
}
void YGroup::clear_objs() {
  objs_.Clear();
}
const ::y3d::YObject& YGroup::objs(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.objs)
  return objs_.Get(index);
}
::y3d::YObject* YGroup::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.objs)
  return objs_.Mutable(index);
}
::y3d::YObject* YGroup::add_objs() {
  // @@protoc_insertion_point(field_add:y3d.YGroup.objs)
  return objs_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YObject >*
YGroup::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YGroup.objs)
  return &objs_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YObject >&
YGroup::objs() const {
  // @@protoc_insertion_point(field_list:y3d.YGroup.objs)
  return objs_;
}

// repeated .y3d.YGroup children = 3;
int YGroup::children_size() const {
  return children_.size();
}
void YGroup::clear_children() {
  children_.Clear();
}
const ::y3d::YGroup& YGroup::children(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.children)
  return children_.Get(index);
}
::y3d::YGroup* YGroup::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.children)
  return children_.Mutable(index);
}
::y3d::YGroup* YGroup::add_children() {
  // @@protoc_insertion_point(field_add:y3d.YGroup.children)
  return children_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YGroup >*
YGroup::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YGroup.children)
  return &children_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YGroup >&
YGroup::children() const {
  // @@protoc_insertion_point(field_list:y3d.YGroup.children)
  return children_;
}

// optional .y3d.GVerType gv_type = 4;
void YGroup::clear_gv_type() {
  gv_type_ = 0;
}
 ::y3d::GVerType YGroup::gv_type() const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.gv_type)
  return static_cast< ::y3d::GVerType >(gv_type_);
}
 void YGroup::set_gv_type(::y3d::GVerType value) {
  
  gv_type_ = value;
  // @@protoc_insertion_point(field_set:y3d.YGroup.gv_type)
}

// repeated string xref = 5;
int YGroup::xref_size() const {
  return xref_.size();
}
void YGroup::clear_xref() {
  xref_.Clear();
}
 const ::std::string& YGroup::xref(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.xref)
  return xref_.Get(index);
}
 ::std::string* YGroup::mutable_xref(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.xref)
  return xref_.Mutable(index);
}
 void YGroup::set_xref(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YGroup.xref)
  xref_.Mutable(index)->assign(value);
}
 void YGroup::set_xref(int index, const char* value) {
  xref_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YGroup.xref)
}
 void YGroup::set_xref(int index, const char* value, size_t size) {
  xref_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YGroup.xref)
}
 ::std::string* YGroup::add_xref() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YGroup.xref)
  return xref_.Add();
}
 void YGroup::add_xref(const ::std::string& value) {
  xref_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YGroup.xref)
}
 void YGroup::add_xref(const char* value) {
  xref_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YGroup.xref)
}
 void YGroup::add_xref(const char* value, size_t size) {
  xref_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YGroup.xref)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
YGroup::xref() const {
  // @@protoc_insertion_point(field_list:y3d.YGroup.xref)
  return xref_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
YGroup::mutable_xref() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YGroup.xref)
  return &xref_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YGroupVer::kVnameFieldNumber;
const int YGroupVer::kGroupDataFieldNumber;
const int YGroupVer::kStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YGroupVer::YGroupVer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YGroupVer)
}

void YGroupVer::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  groupdata_ = const_cast< ::y3d::YGroup*>(&::y3d::YGroup::default_instance());
}

YGroupVer::YGroupVer(const YGroupVer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YGroupVer)
}

void YGroupVer::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  vname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupdata_ = NULL;
  step_ = 0;
}

YGroupVer::~YGroupVer() {
  // @@protoc_insertion_point(destructor:y3d.YGroupVer)
  SharedDtor();
}

void YGroupVer::SharedDtor() {
  vname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete groupdata_;
  }
}

void YGroupVer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YGroupVer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YGroupVer_descriptor_;
}

const YGroupVer& YGroupVer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YGroupVer* YGroupVer::default_instance_ = NULL;

YGroupVer* YGroupVer::New(::google::protobuf::Arena* arena) const {
  YGroupVer* n = new YGroupVer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YGroupVer::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YGroupVer)
  vname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && groupdata_ != NULL) delete groupdata_;
  groupdata_ = NULL;
  step_ = 0;
}

bool YGroupVer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YGroupVer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string vname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vname().data(), this->vname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YGroupVer.vname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupData;
        break;
      }

      // optional .y3d.YGroup groupData = 2;
      case 2: {
        if (tag == 18) {
         parse_groupData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_groupdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_step;
        break;
      }

      // optional int32 step = 3;
      case 3: {
        if (tag == 24) {
         parse_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YGroupVer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YGroupVer)
  return false;
#undef DO_
}

void YGroupVer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YGroupVer)
  // optional string vname = 1;
  if (this->vname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vname().data(), this->vname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroupVer.vname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vname(), output);
  }

  // optional .y3d.YGroup groupData = 2;
  if (this->has_groupdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->groupdata_, output);
  }

  // optional int32 step = 3;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->step(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YGroupVer)
}

::google::protobuf::uint8* YGroupVer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YGroupVer)
  // optional string vname = 1;
  if (this->vname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vname().data(), this->vname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroupVer.vname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vname(), target);
  }

  // optional .y3d.YGroup groupData = 2;
  if (this->has_groupdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->groupdata_, false, target);
  }

  // optional int32 step = 3;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->step(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YGroupVer)
  return target;
}

int YGroupVer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YGroupVer)
  int total_size = 0;

  // optional string vname = 1;
  if (this->vname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vname());
  }

  // optional .y3d.YGroup groupData = 2;
  if (this->has_groupdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->groupdata_);
  }

  // optional int32 step = 3;
  if (this->step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->step());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YGroupVer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YGroupVer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YGroupVer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YGroupVer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YGroupVer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YGroupVer)
    MergeFrom(*source);
  }
}

void YGroupVer::MergeFrom(const YGroupVer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YGroupVer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vname().size() > 0) {

    vname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vname_);
  }
  if (from.has_groupdata()) {
    mutable_groupdata()->::y3d::YGroup::MergeFrom(from.groupdata());
  }
  if (from.step() != 0) {
    set_step(from.step());
  }
}

void YGroupVer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YGroupVer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YGroupVer::CopyFrom(const YGroupVer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YGroupVer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YGroupVer::IsInitialized() const {

  return true;
}

void YGroupVer::Swap(YGroupVer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YGroupVer::InternalSwap(YGroupVer* other) {
  vname_.Swap(&other->vname_);
  std::swap(groupdata_, other->groupdata_);
  std::swap(step_, other->step_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YGroupVer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YGroupVer_descriptor_;
  metadata.reflection = YGroupVer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YGroupVer

// optional string vname = 1;
void YGroupVer::clear_vname() {
  vname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& YGroupVer::vname() const {
  // @@protoc_insertion_point(field_get:y3d.YGroupVer.vname)
  return vname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YGroupVer::set_vname(const ::std::string& value) {
  
  vname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YGroupVer.vname)
}
 void YGroupVer::set_vname(const char* value) {
  
  vname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YGroupVer.vname)
}
 void YGroupVer::set_vname(const char* value, size_t size) {
  
  vname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YGroupVer.vname)
}
 ::std::string* YGroupVer::mutable_vname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YGroupVer.vname)
  return vname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YGroupVer::release_vname() {
  // @@protoc_insertion_point(field_release:y3d.YGroupVer.vname)
  
  return vname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YGroupVer::set_allocated_vname(::std::string* vname) {
  if (vname != NULL) {
    
  } else {
    
  }
  vname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vname);
  // @@protoc_insertion_point(field_set_allocated:y3d.YGroupVer.vname)
}

// optional .y3d.YGroup groupData = 2;
bool YGroupVer::has_groupdata() const {
  return !_is_default_instance_ && groupdata_ != NULL;
}
void YGroupVer::clear_groupdata() {
  if (GetArenaNoVirtual() == NULL && groupdata_ != NULL) delete groupdata_;
  groupdata_ = NULL;
}
const ::y3d::YGroup& YGroupVer::groupdata() const {
  // @@protoc_insertion_point(field_get:y3d.YGroupVer.groupData)
  return groupdata_ != NULL ? *groupdata_ : *default_instance_->groupdata_;
}
::y3d::YGroup* YGroupVer::mutable_groupdata() {
  
  if (groupdata_ == NULL) {
    groupdata_ = new ::y3d::YGroup;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YGroupVer.groupData)
  return groupdata_;
}
::y3d::YGroup* YGroupVer::release_groupdata() {
  // @@protoc_insertion_point(field_release:y3d.YGroupVer.groupData)
  
  ::y3d::YGroup* temp = groupdata_;
  groupdata_ = NULL;
  return temp;
}
void YGroupVer::set_allocated_groupdata(::y3d::YGroup* groupdata) {
  delete groupdata_;
  groupdata_ = groupdata;
  if (groupdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YGroupVer.groupData)
}

// optional int32 step = 3;
void YGroupVer::clear_step() {
  step_ = 0;
}
 ::google::protobuf::int32 YGroupVer::step() const {
  // @@protoc_insertion_point(field_get:y3d.YGroupVer.step)
  return step_;
}
 void YGroupVer::set_step(::google::protobuf::int32 value) {
  
  step_ = value;
  // @@protoc_insertion_point(field_set:y3d.YGroupVer.step)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilterView::kOtypeFieldNumber;
const int FilterView::kFaceRangeFieldNumber;
const int FilterView::kSearchFieldNumber;
const int FilterView::kAidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilterView::FilterView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.FilterView)
}

void FilterView::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FilterView::FilterView(const FilterView& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.FilterView)
}

void FilterView::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  otype_ = 0;
  face_range_ = 0;
  search_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aid_ = 0;
}

FilterView::~FilterView() {
  // @@protoc_insertion_point(destructor:y3d.FilterView)
  SharedDtor();
}

void FilterView::SharedDtor() {
  search_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FilterView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilterView::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilterView_descriptor_;
}

const FilterView& FilterView::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

FilterView* FilterView::default_instance_ = NULL;

FilterView* FilterView::New(::google::protobuf::Arena* arena) const {
  FilterView* n = new FilterView;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilterView::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.FilterView)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FilterView, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FilterView*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(otype_, face_range_);
  search_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aid_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool FilterView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.FilterView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .y3d.ObjectType otype = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_otype(static_cast< ::y3d::ObjectType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_face_range;
        break;
      }

      // optional int32 face_range = 2;
      case 2: {
        if (tag == 16) {
         parse_face_range:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &face_range_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_search;
        break;
      }

      // optional string search = 3;
      case 3: {
        if (tag == 26) {
         parse_search:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search().data(), this->search().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.FilterView.search"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_aid;
        break;
      }

      // optional int32 aid = 4;
      case 4: {
        if (tag == 32) {
         parse_aid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.FilterView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.FilterView)
  return false;
#undef DO_
}

void FilterView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.FilterView)
  // optional .y3d.ObjectType otype = 1;
  if (this->otype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->otype(), output);
  }

  // optional int32 face_range = 2;
  if (this->face_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->face_range(), output);
  }

  // optional string search = 3;
  if (this->search().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search().data(), this->search().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.FilterView.search");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->search(), output);
  }

  // optional int32 aid = 4;
  if (this->aid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->aid(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.FilterView)
}

::google::protobuf::uint8* FilterView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.FilterView)
  // optional .y3d.ObjectType otype = 1;
  if (this->otype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->otype(), target);
  }

  // optional int32 face_range = 2;
  if (this->face_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->face_range(), target);
  }

  // optional string search = 3;
  if (this->search().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search().data(), this->search().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.FilterView.search");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->search(), target);
  }

  // optional int32 aid = 4;
  if (this->aid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->aid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.FilterView)
  return target;
}

int FilterView::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.FilterView)
  int total_size = 0;

  // optional .y3d.ObjectType otype = 1;
  if (this->otype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->otype());
  }

  // optional int32 face_range = 2;
  if (this->face_range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->face_range());
  }

  // optional string search = 3;
  if (this->search().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search());
  }

  // optional int32 aid = 4;
  if (this->aid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->aid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilterView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.FilterView)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FilterView* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FilterView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.FilterView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.FilterView)
    MergeFrom(*source);
  }
}

void FilterView::MergeFrom(const FilterView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.FilterView)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.otype() != 0) {
    set_otype(from.otype());
  }
  if (from.face_range() != 0) {
    set_face_range(from.face_range());
  }
  if (from.search().size() > 0) {

    search_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_);
  }
  if (from.aid() != 0) {
    set_aid(from.aid());
  }
}

void FilterView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.FilterView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterView::CopyFrom(const FilterView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.FilterView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterView::IsInitialized() const {

  return true;
}

void FilterView::Swap(FilterView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilterView::InternalSwap(FilterView* other) {
  std::swap(otype_, other->otype_);
  std::swap(face_range_, other->face_range_);
  search_.Swap(&other->search_);
  std::swap(aid_, other->aid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilterView::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilterView_descriptor_;
  metadata.reflection = FilterView_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FilterView

// optional .y3d.ObjectType otype = 1;
void FilterView::clear_otype() {
  otype_ = 0;
}
 ::y3d::ObjectType FilterView::otype() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.otype)
  return static_cast< ::y3d::ObjectType >(otype_);
}
 void FilterView::set_otype(::y3d::ObjectType value) {
  
  otype_ = value;
  // @@protoc_insertion_point(field_set:y3d.FilterView.otype)
}

// optional int32 face_range = 2;
void FilterView::clear_face_range() {
  face_range_ = 0;
}
 ::google::protobuf::int32 FilterView::face_range() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.face_range)
  return face_range_;
}
 void FilterView::set_face_range(::google::protobuf::int32 value) {
  
  face_range_ = value;
  // @@protoc_insertion_point(field_set:y3d.FilterView.face_range)
}

// optional string search = 3;
void FilterView::clear_search() {
  search_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FilterView::search() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.search)
  return search_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FilterView::set_search(const ::std::string& value) {
  
  search_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.FilterView.search)
}
 void FilterView::set_search(const char* value) {
  
  search_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.FilterView.search)
}
 void FilterView::set_search(const char* value, size_t size) {
  
  search_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.FilterView.search)
}
 ::std::string* FilterView::mutable_search() {
  
  // @@protoc_insertion_point(field_mutable:y3d.FilterView.search)
  return search_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FilterView::release_search() {
  // @@protoc_insertion_point(field_release:y3d.FilterView.search)
  
  return search_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FilterView::set_allocated_search(::std::string* search) {
  if (search != NULL) {
    
  } else {
    
  }
  search_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search);
  // @@protoc_insertion_point(field_set_allocated:y3d.FilterView.search)
}

// optional int32 aid = 4;
void FilterView::clear_aid() {
  aid_ = 0;
}
 ::google::protobuf::int32 FilterView::aid() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.aid)
  return aid_;
}
 void FilterView::set_aid(::google::protobuf::int32 value) {
  
  aid_ = value;
  // @@protoc_insertion_point(field_set:y3d.FilterView.aid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectInfo::kPnameFieldNumber;
const int ProjectInfo::kPathFieldNumber;
const int ProjectInfo::kTsFieldNumber;
const int ProjectInfo::kOptimizeOpsFieldNumber;
const int ProjectInfo::kFviewFieldNumber;
const int ProjectInfo::kOptimizeRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectInfo::ProjectInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ProjectInfo)
}

void ProjectInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  ts_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
  optimize_ops_ = const_cast< ::y3d::OptimizeOptions*>(&::y3d::OptimizeOptions::default_instance());
}

ProjectInfo::ProjectInfo(const ProjectInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.ProjectInfo)
}

void ProjectInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ts_ = NULL;
  optimize_ops_ = NULL;
  optimize_ratio_ = 0;
}

ProjectInfo::~ProjectInfo() {
  // @@protoc_insertion_point(destructor:y3d.ProjectInfo)
  SharedDtor();
}

void ProjectInfo::SharedDtor() {
  pname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete ts_;
    delete optimize_ops_;
  }
}

void ProjectInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProjectInfo_descriptor_;
}

const ProjectInfo& ProjectInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

ProjectInfo* ProjectInfo::default_instance_ = NULL;

ProjectInfo* ProjectInfo::New(::google::protobuf::Arena* arena) const {
  ProjectInfo* n = new ProjectInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ProjectInfo)
  pname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ts_ != NULL) delete ts_;
  ts_ = NULL;
  if (GetArenaNoVirtual() == NULL && optimize_ops_ != NULL) delete optimize_ops_;
  optimize_ops_ = NULL;
  optimize_ratio_ = 0;
  fview_.Clear();
}

bool ProjectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ProjectInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pname().data(), this->pname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ProjectInfo.pname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // optional string path = 2;
      case 2: {
        if (tag == 18) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ProjectInfo.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ts;
        break;
      }

      // optional .google.protobuf.Timestamp ts = 3;
      case 3: {
        if (tag == 26) {
         parse_ts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_optimize_ops;
        break;
      }

      // optional .y3d.OptimizeOptions optimize_ops = 5;
      case 5: {
        if (tag == 42) {
         parse_optimize_ops:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optimize_ops()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_fview;
        break;
      }

      // repeated .y3d.FilterView fview = 6;
      case 6: {
        if (tag == 50) {
         parse_fview:
          DO_(input->IncrementRecursionDepth());
         parse_loop_fview:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fview()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_fview;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(61)) goto parse_optimize_ratio;
        break;
      }

      // optional float optimize_ratio = 7;
      case 7: {
        if (tag == 61) {
         parse_optimize_ratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optimize_ratio_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ProjectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ProjectInfo)
  return false;
#undef DO_
}

void ProjectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ProjectInfo)
  // optional string pname = 1;
  if (this->pname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pname().data(), this->pname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.pname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pname(), output);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // optional .google.protobuf.Timestamp ts = 3;
  if (this->has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ts_, output);
  }

  // optional .y3d.OptimizeOptions optimize_ops = 5;
  if (this->has_optimize_ops()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->optimize_ops_, output);
  }

  // repeated .y3d.FilterView fview = 6;
  for (unsigned int i = 0, n = this->fview_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->fview(i), output);
  }

  // optional float optimize_ratio = 7;
  if (this->optimize_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->optimize_ratio(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ProjectInfo)
}

::google::protobuf::uint8* ProjectInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ProjectInfo)
  // optional string pname = 1;
  if (this->pname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pname().data(), this->pname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.pname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pname(), target);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // optional .google.protobuf.Timestamp ts = 3;
  if (this->has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ts_, false, target);
  }

  // optional .y3d.OptimizeOptions optimize_ops = 5;
  if (this->has_optimize_ops()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->optimize_ops_, false, target);
  }

  // repeated .y3d.FilterView fview = 6;
  for (unsigned int i = 0, n = this->fview_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->fview(i), false, target);
  }

  // optional float optimize_ratio = 7;
  if (this->optimize_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->optimize_ratio(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ProjectInfo)
  return target;
}

int ProjectInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ProjectInfo)
  int total_size = 0;

  // optional string pname = 1;
  if (this->pname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pname());
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional .google.protobuf.Timestamp ts = 3;
  if (this->has_ts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ts_);
  }

  // optional .y3d.OptimizeOptions optimize_ops = 5;
  if (this->has_optimize_ops()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->optimize_ops_);
  }

  // optional float optimize_ratio = 7;
  if (this->optimize_ratio() != 0) {
    total_size += 1 + 4;
  }

  // repeated .y3d.FilterView fview = 6;
  total_size += 1 * this->fview_size();
  for (int i = 0; i < this->fview_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fview(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ProjectInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProjectInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ProjectInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ProjectInfo)
    MergeFrom(*source);
  }
}

void ProjectInfo::MergeFrom(const ProjectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ProjectInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  fview_.MergeFrom(from.fview_);
  if (from.pname().size() > 0) {

    pname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pname_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_ts()) {
    mutable_ts()->::google::protobuf::Timestamp::MergeFrom(from.ts());
  }
  if (from.has_optimize_ops()) {
    mutable_optimize_ops()->::y3d::OptimizeOptions::MergeFrom(from.optimize_ops());
  }
  if (from.optimize_ratio() != 0) {
    set_optimize_ratio(from.optimize_ratio());
  }
}

void ProjectInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ProjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectInfo::CopyFrom(const ProjectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ProjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectInfo::IsInitialized() const {

  return true;
}

void ProjectInfo::Swap(ProjectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectInfo::InternalSwap(ProjectInfo* other) {
  pname_.Swap(&other->pname_);
  path_.Swap(&other->path_);
  std::swap(ts_, other->ts_);
  std::swap(optimize_ops_, other->optimize_ops_);
  fview_.UnsafeArenaSwap(&other->fview_);
  std::swap(optimize_ratio_, other->optimize_ratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProjectInfo_descriptor_;
  metadata.reflection = ProjectInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectInfo

// optional string pname = 1;
void ProjectInfo::clear_pname() {
  pname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProjectInfo::pname() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.pname)
  return pname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProjectInfo::set_pname(const ::std::string& value) {
  
  pname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ProjectInfo.pname)
}
 void ProjectInfo::set_pname(const char* value) {
  
  pname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ProjectInfo.pname)
}
 void ProjectInfo::set_pname(const char* value, size_t size) {
  
  pname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ProjectInfo.pname)
}
 ::std::string* ProjectInfo::mutable_pname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.pname)
  return pname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProjectInfo::release_pname() {
  // @@protoc_insertion_point(field_release:y3d.ProjectInfo.pname)
  
  return pname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProjectInfo::set_allocated_pname(::std::string* pname) {
  if (pname != NULL) {
    
  } else {
    
  }
  pname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pname);
  // @@protoc_insertion_point(field_set_allocated:y3d.ProjectInfo.pname)
}

// optional string path = 2;
void ProjectInfo::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProjectInfo::path() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProjectInfo::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ProjectInfo.path)
}
 void ProjectInfo::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ProjectInfo.path)
}
 void ProjectInfo::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ProjectInfo.path)
}
 ::std::string* ProjectInfo::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProjectInfo::release_path() {
  // @@protoc_insertion_point(field_release:y3d.ProjectInfo.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProjectInfo::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:y3d.ProjectInfo.path)
}

// optional .google.protobuf.Timestamp ts = 3;
bool ProjectInfo::has_ts() const {
  return !_is_default_instance_ && ts_ != NULL;
}
void ProjectInfo::clear_ts() {
  if (GetArenaNoVirtual() == NULL && ts_ != NULL) delete ts_;
  ts_ = NULL;
}
const ::google::protobuf::Timestamp& ProjectInfo::ts() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.ts)
  return ts_ != NULL ? *ts_ : *default_instance_->ts_;
}
::google::protobuf::Timestamp* ProjectInfo::mutable_ts() {
  
  if (ts_ == NULL) {
    ts_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.ts)
  return ts_;
}
::google::protobuf::Timestamp* ProjectInfo::release_ts() {
  // @@protoc_insertion_point(field_release:y3d.ProjectInfo.ts)
  
  ::google::protobuf::Timestamp* temp = ts_;
  ts_ = NULL;
  return temp;
}
void ProjectInfo::set_allocated_ts(::google::protobuf::Timestamp* ts) {
  delete ts_;
  if (ts != NULL && ts->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_ts = new ::google::protobuf::Timestamp;
    new_ts->CopyFrom(*ts);
    ts = new_ts;
  }
  ts_ = ts;
  if (ts) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ProjectInfo.ts)
}

// optional .y3d.OptimizeOptions optimize_ops = 5;
bool ProjectInfo::has_optimize_ops() const {
  return !_is_default_instance_ && optimize_ops_ != NULL;
}
void ProjectInfo::clear_optimize_ops() {
  if (GetArenaNoVirtual() == NULL && optimize_ops_ != NULL) delete optimize_ops_;
  optimize_ops_ = NULL;
}
const ::y3d::OptimizeOptions& ProjectInfo::optimize_ops() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.optimize_ops)
  return optimize_ops_ != NULL ? *optimize_ops_ : *default_instance_->optimize_ops_;
}
::y3d::OptimizeOptions* ProjectInfo::mutable_optimize_ops() {
  
  if (optimize_ops_ == NULL) {
    optimize_ops_ = new ::y3d::OptimizeOptions;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.optimize_ops)
  return optimize_ops_;
}
::y3d::OptimizeOptions* ProjectInfo::release_optimize_ops() {
  // @@protoc_insertion_point(field_release:y3d.ProjectInfo.optimize_ops)
  
  ::y3d::OptimizeOptions* temp = optimize_ops_;
  optimize_ops_ = NULL;
  return temp;
}
void ProjectInfo::set_allocated_optimize_ops(::y3d::OptimizeOptions* optimize_ops) {
  delete optimize_ops_;
  optimize_ops_ = optimize_ops;
  if (optimize_ops) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ProjectInfo.optimize_ops)
}

// repeated .y3d.FilterView fview = 6;
int ProjectInfo::fview_size() const {
  return fview_.size();
}
void ProjectInfo::clear_fview() {
  fview_.Clear();
}
const ::y3d::FilterView& ProjectInfo::fview(int index) const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.fview)
  return fview_.Get(index);
}
::y3d::FilterView* ProjectInfo::mutable_fview(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.fview)
  return fview_.Mutable(index);
}
::y3d::FilterView* ProjectInfo::add_fview() {
  // @@protoc_insertion_point(field_add:y3d.ProjectInfo.fview)
  return fview_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::FilterView >*
ProjectInfo::mutable_fview() {
  // @@protoc_insertion_point(field_mutable_list:y3d.ProjectInfo.fview)
  return &fview_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::FilterView >&
ProjectInfo::fview() const {
  // @@protoc_insertion_point(field_list:y3d.ProjectInfo.fview)
  return fview_;
}

// optional float optimize_ratio = 7;
void ProjectInfo::clear_optimize_ratio() {
  optimize_ratio_ = 0;
}
 float ProjectInfo::optimize_ratio() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.optimize_ratio)
  return optimize_ratio_;
}
 void ProjectInfo::set_optimize_ratio(float value) {
  
  optimize_ratio_ = value;
  // @@protoc_insertion_point(field_set:y3d.ProjectInfo.optimize_ratio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SettingData::kAsetNameFieldNumber;
const int SettingData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SettingData::SettingData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.SettingData)
}

void SettingData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SettingData::SettingData(const SettingData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.SettingData)
}

void SettingData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  aset_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  data_.SetEntryDescriptor(
      &::y3d::SettingData_DataEntry_descriptor_);
}

SettingData::~SettingData() {
  // @@protoc_insertion_point(destructor:y3d.SettingData)
  SharedDtor();
}

void SettingData::SharedDtor() {
  aset_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SettingData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SettingData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SettingData_descriptor_;
}

const SettingData& SettingData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

SettingData* SettingData::default_instance_ = NULL;

SettingData* SettingData::New(::google::protobuf::Arena* arena) const {
  SettingData* n = new SettingData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SettingData::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.SettingData)
  aset_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool SettingData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.SettingData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string aset_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aset_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->aset_name().data(), this->aset_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.SettingData.aset_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // map<string, .google.protobuf.Any> data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          SettingData_DataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::protobuf::Any,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Any > > parser(&data_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.SettingData.DataEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.SettingData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.SettingData)
  return false;
#undef DO_
}

void SettingData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.SettingData)
  // optional string aset_name = 1;
  if (this->aset_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aset_name().data(), this->aset_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.SettingData.aset_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->aset_name(), output);
  }

  // map<string, .google.protobuf.Any> data = 2;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.SettingData.DataEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->data().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SettingData_DataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SettingData_DataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:y3d.SettingData)
}

::google::protobuf::uint8* SettingData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.SettingData)
  // optional string aset_name = 1;
  if (this->aset_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aset_name().data(), this->aset_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.SettingData.aset_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->aset_name(), target);
  }

  // map<string, .google.protobuf.Any> data = 2;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.SettingData.DataEntry.key");
      }
    };

    if (deterministic &&
        this->data().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SettingData_DataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SettingData_DataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.SettingData)
  return target;
}

int SettingData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.SettingData)
  int total_size = 0;

  // optional string aset_name = 1;
  if (this->aset_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->aset_name());
  }

  // map<string, .google.protobuf.Any> data = 2;
  total_size += 1 * this->data_size();
  {
    ::google::protobuf::scoped_ptr<SettingData_DataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
        it = this->data().begin();
        it != this->data().end(); ++it) {
      entry.reset(data_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SettingData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.SettingData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SettingData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SettingData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.SettingData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.SettingData)
    MergeFrom(*source);
  }
}

void SettingData::MergeFrom(const SettingData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.SettingData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.aset_name().size() > 0) {

    aset_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aset_name_);
  }
}

void SettingData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.SettingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettingData::CopyFrom(const SettingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.SettingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettingData::IsInitialized() const {

  return true;
}

void SettingData::Swap(SettingData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SettingData::InternalSwap(SettingData* other) {
  aset_name_.Swap(&other->aset_name_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SettingData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SettingData_descriptor_;
  metadata.reflection = SettingData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SettingData

// optional string aset_name = 1;
void SettingData::clear_aset_name() {
  aset_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SettingData::aset_name() const {
  // @@protoc_insertion_point(field_get:y3d.SettingData.aset_name)
  return aset_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SettingData::set_aset_name(const ::std::string& value) {
  
  aset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.SettingData.aset_name)
}
 void SettingData::set_aset_name(const char* value) {
  
  aset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.SettingData.aset_name)
}
 void SettingData::set_aset_name(const char* value, size_t size) {
  
  aset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.SettingData.aset_name)
}
 ::std::string* SettingData::mutable_aset_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.SettingData.aset_name)
  return aset_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SettingData::release_aset_name() {
  // @@protoc_insertion_point(field_release:y3d.SettingData.aset_name)
  
  return aset_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SettingData::set_allocated_aset_name(::std::string* aset_name) {
  if (aset_name != NULL) {
    
  } else {
    
  }
  aset_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aset_name);
  // @@protoc_insertion_point(field_set_allocated:y3d.SettingData.aset_name)
}

// map<string, .google.protobuf.Any> data = 2;
int SettingData::data_size() const {
  return data_.size();
}
void SettingData::clear_data() {
  data_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >&
SettingData::data() const {
  // @@protoc_insertion_point(field_map:y3d.SettingData.data)
  return data_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >*
SettingData::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:y3d.SettingData.data)
  return data_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSetting::kExtraFieldNumber;
const int PSetting::kMaxRecentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSetting::PSetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.PSetting)
}

void PSetting::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  extra_ = const_cast< ::y3d::SettingData*>(&::y3d::SettingData::default_instance());
}

PSetting::PSetting(const PSetting& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.PSetting)
}

void PSetting::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  extra_ = NULL;
  max_recent_ = 0;
}

PSetting::~PSetting() {
  // @@protoc_insertion_point(destructor:y3d.PSetting)
  SharedDtor();
}

void PSetting::SharedDtor() {
  if (this != default_instance_) {
    delete extra_;
  }
}

void PSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSetting::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PSetting_descriptor_;
}

const PSetting& PSetting::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

PSetting* PSetting::default_instance_ = NULL;

PSetting* PSetting::New(::google::protobuf::Arena* arena) const {
  PSetting* n = new PSetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.PSetting)
  if (GetArenaNoVirtual() == NULL && extra_ != NULL) delete extra_;
  extra_ = NULL;
  max_recent_ = 0;
}

bool PSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.PSetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .y3d.SettingData extra = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extra()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_recent;
        break;
      }

      // optional int32 max_recent = 2;
      case 2: {
        if (tag == 16) {
         parse_max_recent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_recent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.PSetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.PSetting)
  return false;
#undef DO_
}

void PSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.PSetting)
  // optional .y3d.SettingData extra = 1;
  if (this->has_extra()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->extra_, output);
  }

  // optional int32 max_recent = 2;
  if (this->max_recent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_recent(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.PSetting)
}

::google::protobuf::uint8* PSetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.PSetting)
  // optional .y3d.SettingData extra = 1;
  if (this->has_extra()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->extra_, false, target);
  }

  // optional int32 max_recent = 2;
  if (this->max_recent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_recent(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.PSetting)
  return target;
}

int PSetting::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.PSetting)
  int total_size = 0;

  // optional .y3d.SettingData extra = 1;
  if (this->has_extra()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->extra_);
  }

  // optional int32 max_recent = 2;
  if (this->max_recent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_recent());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.PSetting)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PSetting* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PSetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.PSetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.PSetting)
    MergeFrom(*source);
  }
}

void PSetting::MergeFrom(const PSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.PSetting)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_extra()) {
    mutable_extra()->::y3d::SettingData::MergeFrom(from.extra());
  }
  if (from.max_recent() != 0) {
    set_max_recent(from.max_recent());
  }
}

void PSetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.PSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSetting::CopyFrom(const PSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.PSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSetting::IsInitialized() const {

  return true;
}

void PSetting::Swap(PSetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSetting::InternalSwap(PSetting* other) {
  std::swap(extra_, other->extra_);
  std::swap(max_recent_, other->max_recent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSetting::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PSetting_descriptor_;
  metadata.reflection = PSetting_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PSetting

// optional .y3d.SettingData extra = 1;
bool PSetting::has_extra() const {
  return !_is_default_instance_ && extra_ != NULL;
}
void PSetting::clear_extra() {
  if (GetArenaNoVirtual() == NULL && extra_ != NULL) delete extra_;
  extra_ = NULL;
}
const ::y3d::SettingData& PSetting::extra() const {
  // @@protoc_insertion_point(field_get:y3d.PSetting.extra)
  return extra_ != NULL ? *extra_ : *default_instance_->extra_;
}
::y3d::SettingData* PSetting::mutable_extra() {
  
  if (extra_ == NULL) {
    extra_ = new ::y3d::SettingData;
  }
  // @@protoc_insertion_point(field_mutable:y3d.PSetting.extra)
  return extra_;
}
::y3d::SettingData* PSetting::release_extra() {
  // @@protoc_insertion_point(field_release:y3d.PSetting.extra)
  
  ::y3d::SettingData* temp = extra_;
  extra_ = NULL;
  return temp;
}
void PSetting::set_allocated_extra(::y3d::SettingData* extra) {
  delete extra_;
  extra_ = extra;
  if (extra) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.PSetting.extra)
}

// optional int32 max_recent = 2;
void PSetting::clear_max_recent() {
  max_recent_ = 0;
}
 ::google::protobuf::int32 PSetting::max_recent() const {
  // @@protoc_insertion_point(field_get:y3d.PSetting.max_recent)
  return max_recent_;
}
 void PSetting::set_max_recent(::google::protobuf::int32 value) {
  
  max_recent_ = value;
  // @@protoc_insertion_point(field_set:y3d.PSetting.max_recent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YSystem::kWorkingFolderFieldNumber;
const int YSystem::kDefaultInfoFieldNumber;
const int YSystem::kDefaultSettingFieldNumber;
const int YSystem::kProjectsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YSystem::YSystem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YSystem)
}

void YSystem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  default_info_ = const_cast< ::y3d::ProjectInfo*>(&::y3d::ProjectInfo::default_instance());
  default_setting_ = const_cast< ::y3d::PSetting*>(&::y3d::PSetting::default_instance());
}

YSystem::YSystem(const YSystem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YSystem)
}

void YSystem::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  working_folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_info_ = NULL;
  default_setting_ = NULL;
}

YSystem::~YSystem() {
  // @@protoc_insertion_point(destructor:y3d.YSystem)
  SharedDtor();
}

void YSystem::SharedDtor() {
  working_folder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete default_info_;
    delete default_setting_;
  }
}

void YSystem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YSystem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YSystem_descriptor_;
}

const YSystem& YSystem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YSystem* YSystem::default_instance_ = NULL;

YSystem* YSystem::New(::google::protobuf::Arena* arena) const {
  YSystem* n = new YSystem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YSystem::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YSystem)
  working_folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && default_info_ != NULL) delete default_info_;
  default_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && default_setting_ != NULL) delete default_setting_;
  default_setting_ = NULL;
  projects_.Clear();
}

bool YSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YSystem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string working_folder = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_working_folder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->working_folder().data(), this->working_folder().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YSystem.working_folder"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_default_info;
        break;
      }

      // optional .y3d.ProjectInfo default_info = 2;
      case 2: {
        if (tag == 18) {
         parse_default_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_default_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_default_setting;
        break;
      }

      // optional .y3d.PSetting default_setting = 3;
      case 3: {
        if (tag == 26) {
         parse_default_setting:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_default_setting()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_projects;
        break;
      }

      // repeated .y3d.ProjectInfo projects = 4;
      case 4: {
        if (tag == 34) {
         parse_projects:
          DO_(input->IncrementRecursionDepth());
         parse_loop_projects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_projects()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_projects;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YSystem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YSystem)
  return false;
#undef DO_
}

void YSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YSystem)
  // optional string working_folder = 1;
  if (this->working_folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->working_folder().data(), this->working_folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YSystem.working_folder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->working_folder(), output);
  }

  // optional .y3d.ProjectInfo default_info = 2;
  if (this->has_default_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->default_info_, output);
  }

  // optional .y3d.PSetting default_setting = 3;
  if (this->has_default_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->default_setting_, output);
  }

  // repeated .y3d.ProjectInfo projects = 4;
  for (unsigned int i = 0, n = this->projects_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->projects(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YSystem)
}

::google::protobuf::uint8* YSystem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YSystem)
  // optional string working_folder = 1;
  if (this->working_folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->working_folder().data(), this->working_folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YSystem.working_folder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->working_folder(), target);
  }

  // optional .y3d.ProjectInfo default_info = 2;
  if (this->has_default_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->default_info_, false, target);
  }

  // optional .y3d.PSetting default_setting = 3;
  if (this->has_default_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->default_setting_, false, target);
  }

  // repeated .y3d.ProjectInfo projects = 4;
  for (unsigned int i = 0, n = this->projects_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->projects(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YSystem)
  return target;
}

int YSystem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YSystem)
  int total_size = 0;

  // optional string working_folder = 1;
  if (this->working_folder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->working_folder());
  }

  // optional .y3d.ProjectInfo default_info = 2;
  if (this->has_default_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->default_info_);
  }

  // optional .y3d.PSetting default_setting = 3;
  if (this->has_default_setting()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->default_setting_);
  }

  // repeated .y3d.ProjectInfo projects = 4;
  total_size += 1 * this->projects_size();
  for (int i = 0; i < this->projects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->projects(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YSystem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YSystem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YSystem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YSystem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YSystem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YSystem)
    MergeFrom(*source);
  }
}

void YSystem::MergeFrom(const YSystem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YSystem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  projects_.MergeFrom(from.projects_);
  if (from.working_folder().size() > 0) {

    working_folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.working_folder_);
  }
  if (from.has_default_info()) {
    mutable_default_info()->::y3d::ProjectInfo::MergeFrom(from.default_info());
  }
  if (from.has_default_setting()) {
    mutable_default_setting()->::y3d::PSetting::MergeFrom(from.default_setting());
  }
}

void YSystem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YSystem::CopyFrom(const YSystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YSystem::IsInitialized() const {

  return true;
}

void YSystem::Swap(YSystem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YSystem::InternalSwap(YSystem* other) {
  working_folder_.Swap(&other->working_folder_);
  std::swap(default_info_, other->default_info_);
  std::swap(default_setting_, other->default_setting_);
  projects_.UnsafeArenaSwap(&other->projects_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YSystem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YSystem_descriptor_;
  metadata.reflection = YSystem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YSystem

// optional string working_folder = 1;
void YSystem::clear_working_folder() {
  working_folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& YSystem::working_folder() const {
  // @@protoc_insertion_point(field_get:y3d.YSystem.working_folder)
  return working_folder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YSystem::set_working_folder(const ::std::string& value) {
  
  working_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YSystem.working_folder)
}
 void YSystem::set_working_folder(const char* value) {
  
  working_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YSystem.working_folder)
}
 void YSystem::set_working_folder(const char* value, size_t size) {
  
  working_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YSystem.working_folder)
}
 ::std::string* YSystem::mutable_working_folder() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YSystem.working_folder)
  return working_folder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YSystem::release_working_folder() {
  // @@protoc_insertion_point(field_release:y3d.YSystem.working_folder)
  
  return working_folder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YSystem::set_allocated_working_folder(::std::string* working_folder) {
  if (working_folder != NULL) {
    
  } else {
    
  }
  working_folder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), working_folder);
  // @@protoc_insertion_point(field_set_allocated:y3d.YSystem.working_folder)
}

// optional .y3d.ProjectInfo default_info = 2;
bool YSystem::has_default_info() const {
  return !_is_default_instance_ && default_info_ != NULL;
}
void YSystem::clear_default_info() {
  if (GetArenaNoVirtual() == NULL && default_info_ != NULL) delete default_info_;
  default_info_ = NULL;
}
const ::y3d::ProjectInfo& YSystem::default_info() const {
  // @@protoc_insertion_point(field_get:y3d.YSystem.default_info)
  return default_info_ != NULL ? *default_info_ : *default_instance_->default_info_;
}
::y3d::ProjectInfo* YSystem::mutable_default_info() {
  
  if (default_info_ == NULL) {
    default_info_ = new ::y3d::ProjectInfo;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YSystem.default_info)
  return default_info_;
}
::y3d::ProjectInfo* YSystem::release_default_info() {
  // @@protoc_insertion_point(field_release:y3d.YSystem.default_info)
  
  ::y3d::ProjectInfo* temp = default_info_;
  default_info_ = NULL;
  return temp;
}
void YSystem::set_allocated_default_info(::y3d::ProjectInfo* default_info) {
  delete default_info_;
  default_info_ = default_info;
  if (default_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YSystem.default_info)
}

// optional .y3d.PSetting default_setting = 3;
bool YSystem::has_default_setting() const {
  return !_is_default_instance_ && default_setting_ != NULL;
}
void YSystem::clear_default_setting() {
  if (GetArenaNoVirtual() == NULL && default_setting_ != NULL) delete default_setting_;
  default_setting_ = NULL;
}
const ::y3d::PSetting& YSystem::default_setting() const {
  // @@protoc_insertion_point(field_get:y3d.YSystem.default_setting)
  return default_setting_ != NULL ? *default_setting_ : *default_instance_->default_setting_;
}
::y3d::PSetting* YSystem::mutable_default_setting() {
  
  if (default_setting_ == NULL) {
    default_setting_ = new ::y3d::PSetting;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YSystem.default_setting)
  return default_setting_;
}
::y3d::PSetting* YSystem::release_default_setting() {
  // @@protoc_insertion_point(field_release:y3d.YSystem.default_setting)
  
  ::y3d::PSetting* temp = default_setting_;
  default_setting_ = NULL;
  return temp;
}
void YSystem::set_allocated_default_setting(::y3d::PSetting* default_setting) {
  delete default_setting_;
  default_setting_ = default_setting;
  if (default_setting) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YSystem.default_setting)
}

// repeated .y3d.ProjectInfo projects = 4;
int YSystem::projects_size() const {
  return projects_.size();
}
void YSystem::clear_projects() {
  projects_.Clear();
}
const ::y3d::ProjectInfo& YSystem::projects(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YSystem.projects)
  return projects_.Get(index);
}
::y3d::ProjectInfo* YSystem::mutable_projects(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YSystem.projects)
  return projects_.Mutable(index);
}
::y3d::ProjectInfo* YSystem::add_projects() {
  // @@protoc_insertion_point(field_add:y3d.YSystem.projects)
  return projects_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::ProjectInfo >*
YSystem::mutable_projects() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YSystem.projects)
  return &projects_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::ProjectInfo >&
YSystem::projects() const {
  // @@protoc_insertion_point(field_list:y3d.YSystem.projects)
  return projects_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FRangeItem::kFStartFieldNumber;
const int FRangeItem::kFEndFieldNumber;
const int FRangeItem::kFrColorFieldNumber;
const int FRangeItem::kRatioFieldNumber;
const int FRangeItem::kHasXrefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FRangeItem::FRangeItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.FRangeItem)
}

void FRangeItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  fr_color_ = const_cast< ::y3d::YColor*>(&::y3d::YColor::default_instance());
}

FRangeItem::FRangeItem(const FRangeItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.FRangeItem)
}

void FRangeItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  f_start_ = 0;
  f_end_ = 0;
  fr_color_ = NULL;
  ratio_ = 0;
  has_xref_ = false;
}

FRangeItem::~FRangeItem() {
  // @@protoc_insertion_point(destructor:y3d.FRangeItem)
  SharedDtor();
}

void FRangeItem::SharedDtor() {
  if (this != default_instance_) {
    delete fr_color_;
  }
}

void FRangeItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FRangeItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FRangeItem_descriptor_;
}

const FRangeItem& FRangeItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

FRangeItem* FRangeItem::default_instance_ = NULL;

FRangeItem* FRangeItem::New(::google::protobuf::Arena* arena) const {
  FRangeItem* n = new FRangeItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FRangeItem::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.FRangeItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FRangeItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FRangeItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(f_start_, f_end_);
  ZR_(ratio_, has_xref_);
  if (GetArenaNoVirtual() == NULL && fr_color_ != NULL) delete fr_color_;
  fr_color_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool FRangeItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.FRangeItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 f_start = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f_start_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_f_end;
        break;
      }

      // optional int32 f_end = 2;
      case 2: {
        if (tag == 16) {
         parse_f_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f_end_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fr_color;
        break;
      }

      // optional .y3d.YColor fr_color = 3;
      case 3: {
        if (tag == 26) {
         parse_fr_color:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fr_color()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_ratio;
        break;
      }

      // optional float ratio = 4;
      case 4: {
        if (tag == 37) {
         parse_ratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ratio_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_has_xref;
        break;
      }

      // optional bool has_xref = 5;
      case 5: {
        if (tag == 40) {
         parse_has_xref:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_xref_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.FRangeItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.FRangeItem)
  return false;
#undef DO_
}

void FRangeItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.FRangeItem)
  // optional int32 f_start = 1;
  if (this->f_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->f_start(), output);
  }

  // optional int32 f_end = 2;
  if (this->f_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->f_end(), output);
  }

  // optional .y3d.YColor fr_color = 3;
  if (this->has_fr_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->fr_color_, output);
  }

  // optional float ratio = 4;
  if (this->ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->ratio(), output);
  }

  // optional bool has_xref = 5;
  if (this->has_xref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->has_xref(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.FRangeItem)
}

::google::protobuf::uint8* FRangeItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.FRangeItem)
  // optional int32 f_start = 1;
  if (this->f_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->f_start(), target);
  }

  // optional int32 f_end = 2;
  if (this->f_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->f_end(), target);
  }

  // optional .y3d.YColor fr_color = 3;
  if (this->has_fr_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->fr_color_, false, target);
  }

  // optional float ratio = 4;
  if (this->ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->ratio(), target);
  }

  // optional bool has_xref = 5;
  if (this->has_xref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->has_xref(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.FRangeItem)
  return target;
}

int FRangeItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.FRangeItem)
  int total_size = 0;

  // optional int32 f_start = 1;
  if (this->f_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f_start());
  }

  // optional int32 f_end = 2;
  if (this->f_end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f_end());
  }

  // optional .y3d.YColor fr_color = 3;
  if (this->has_fr_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fr_color_);
  }

  // optional float ratio = 4;
  if (this->ratio() != 0) {
    total_size += 1 + 4;
  }

  // optional bool has_xref = 5;
  if (this->has_xref() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FRangeItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.FRangeItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FRangeItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FRangeItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.FRangeItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.FRangeItem)
    MergeFrom(*source);
  }
}

void FRangeItem::MergeFrom(const FRangeItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.FRangeItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.f_start() != 0) {
    set_f_start(from.f_start());
  }
  if (from.f_end() != 0) {
    set_f_end(from.f_end());
  }
  if (from.has_fr_color()) {
    mutable_fr_color()->::y3d::YColor::MergeFrom(from.fr_color());
  }
  if (from.ratio() != 0) {
    set_ratio(from.ratio());
  }
  if (from.has_xref() != 0) {
    set_has_xref(from.has_xref());
  }
}

void FRangeItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.FRangeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FRangeItem::CopyFrom(const FRangeItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.FRangeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FRangeItem::IsInitialized() const {

  return true;
}

void FRangeItem::Swap(FRangeItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FRangeItem::InternalSwap(FRangeItem* other) {
  std::swap(f_start_, other->f_start_);
  std::swap(f_end_, other->f_end_);
  std::swap(fr_color_, other->fr_color_);
  std::swap(ratio_, other->ratio_);
  std::swap(has_xref_, other->has_xref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FRangeItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FRangeItem_descriptor_;
  metadata.reflection = FRangeItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FRangeItem

// optional int32 f_start = 1;
void FRangeItem::clear_f_start() {
  f_start_ = 0;
}
 ::google::protobuf::int32 FRangeItem::f_start() const {
  // @@protoc_insertion_point(field_get:y3d.FRangeItem.f_start)
  return f_start_;
}
 void FRangeItem::set_f_start(::google::protobuf::int32 value) {
  
  f_start_ = value;
  // @@protoc_insertion_point(field_set:y3d.FRangeItem.f_start)
}

// optional int32 f_end = 2;
void FRangeItem::clear_f_end() {
  f_end_ = 0;
}
 ::google::protobuf::int32 FRangeItem::f_end() const {
  // @@protoc_insertion_point(field_get:y3d.FRangeItem.f_end)
  return f_end_;
}
 void FRangeItem::set_f_end(::google::protobuf::int32 value) {
  
  f_end_ = value;
  // @@protoc_insertion_point(field_set:y3d.FRangeItem.f_end)
}

// optional .y3d.YColor fr_color = 3;
bool FRangeItem::has_fr_color() const {
  return !_is_default_instance_ && fr_color_ != NULL;
}
void FRangeItem::clear_fr_color() {
  if (GetArenaNoVirtual() == NULL && fr_color_ != NULL) delete fr_color_;
  fr_color_ = NULL;
}
const ::y3d::YColor& FRangeItem::fr_color() const {
  // @@protoc_insertion_point(field_get:y3d.FRangeItem.fr_color)
  return fr_color_ != NULL ? *fr_color_ : *default_instance_->fr_color_;
}
::y3d::YColor* FRangeItem::mutable_fr_color() {
  
  if (fr_color_ == NULL) {
    fr_color_ = new ::y3d::YColor;
  }
  // @@protoc_insertion_point(field_mutable:y3d.FRangeItem.fr_color)
  return fr_color_;
}
::y3d::YColor* FRangeItem::release_fr_color() {
  // @@protoc_insertion_point(field_release:y3d.FRangeItem.fr_color)
  
  ::y3d::YColor* temp = fr_color_;
  fr_color_ = NULL;
  return temp;
}
void FRangeItem::set_allocated_fr_color(::y3d::YColor* fr_color) {
  delete fr_color_;
  fr_color_ = fr_color;
  if (fr_color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.FRangeItem.fr_color)
}

// optional float ratio = 4;
void FRangeItem::clear_ratio() {
  ratio_ = 0;
}
 float FRangeItem::ratio() const {
  // @@protoc_insertion_point(field_get:y3d.FRangeItem.ratio)
  return ratio_;
}
 void FRangeItem::set_ratio(float value) {
  
  ratio_ = value;
  // @@protoc_insertion_point(field_set:y3d.FRangeItem.ratio)
}

// optional bool has_xref = 5;
void FRangeItem::clear_has_xref() {
  has_xref_ = false;
}
 bool FRangeItem::has_xref() const {
  // @@protoc_insertion_point(field_get:y3d.FRangeItem.has_xref)
  return has_xref_;
}
 void FRangeItem::set_has_xref(bool value) {
  
  has_xref_ = value;
  // @@protoc_insertion_point(field_set:y3d.FRangeItem.has_xref)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptimizeOptions::kUseRangeFieldNumber;
const int OptimizeOptions::kFrFieldNumber;
const int OptimizeOptions::kMinHpolyFieldNumber;
const int OptimizeOptions::kOutRangeCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptimizeOptions::OptimizeOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.OptimizeOptions)
}

void OptimizeOptions::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OptimizeOptions::OptimizeOptions(const OptimizeOptions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.OptimizeOptions)
}

void OptimizeOptions::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  use_range_ = false;
  min_hpoly_ = 0;
  out_range_count_ = 0;
}

OptimizeOptions::~OptimizeOptions() {
  // @@protoc_insertion_point(destructor:y3d.OptimizeOptions)
  SharedDtor();
}

void OptimizeOptions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OptimizeOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptimizeOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OptimizeOptions_descriptor_;
}

const OptimizeOptions& OptimizeOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

OptimizeOptions* OptimizeOptions::default_instance_ = NULL;

OptimizeOptions* OptimizeOptions::New(::google::protobuf::Arena* arena) const {
  OptimizeOptions* n = new OptimizeOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptimizeOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.OptimizeOptions)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OptimizeOptions, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OptimizeOptions*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(use_range_, out_range_count_);

#undef ZR_HELPER_
#undef ZR_

  fr_.Clear();
}

bool OptimizeOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.OptimizeOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool use_range = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_range_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_fr;
        break;
      }

      // repeated .y3d.FRangeItem fr = 2;
      case 2: {
        if (tag == 18) {
         parse_fr:
          DO_(input->IncrementRecursionDepth());
         parse_loop_fr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_fr;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_min_hpoly;
        break;
      }

      // optional int32 min_hpoly = 3;
      case 3: {
        if (tag == 24) {
         parse_min_hpoly:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_hpoly_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_out_range_count;
        break;
      }

      // optional int32 out_range_count = 4;
      case 4: {
        if (tag == 32) {
         parse_out_range_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &out_range_count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.OptimizeOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.OptimizeOptions)
  return false;
#undef DO_
}

void OptimizeOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.OptimizeOptions)
  // optional bool use_range = 1;
  if (this->use_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_range(), output);
  }

  // repeated .y3d.FRangeItem fr = 2;
  for (unsigned int i = 0, n = this->fr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fr(i), output);
  }

  // optional int32 min_hpoly = 3;
  if (this->min_hpoly() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->min_hpoly(), output);
  }

  // optional int32 out_range_count = 4;
  if (this->out_range_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->out_range_count(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.OptimizeOptions)
}

::google::protobuf::uint8* OptimizeOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.OptimizeOptions)
  // optional bool use_range = 1;
  if (this->use_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_range(), target);
  }

  // repeated .y3d.FRangeItem fr = 2;
  for (unsigned int i = 0, n = this->fr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->fr(i), false, target);
  }

  // optional int32 min_hpoly = 3;
  if (this->min_hpoly() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->min_hpoly(), target);
  }

  // optional int32 out_range_count = 4;
  if (this->out_range_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->out_range_count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.OptimizeOptions)
  return target;
}

int OptimizeOptions::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.OptimizeOptions)
  int total_size = 0;

  // optional bool use_range = 1;
  if (this->use_range() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 min_hpoly = 3;
  if (this->min_hpoly() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min_hpoly());
  }

  // optional int32 out_range_count = 4;
  if (this->out_range_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->out_range_count());
  }

  // repeated .y3d.FRangeItem fr = 2;
  total_size += 1 * this->fr_size();
  for (int i = 0; i < this->fr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fr(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptimizeOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.OptimizeOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OptimizeOptions* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OptimizeOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.OptimizeOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.OptimizeOptions)
    MergeFrom(*source);
  }
}

void OptimizeOptions::MergeFrom(const OptimizeOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.OptimizeOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  fr_.MergeFrom(from.fr_);
  if (from.use_range() != 0) {
    set_use_range(from.use_range());
  }
  if (from.min_hpoly() != 0) {
    set_min_hpoly(from.min_hpoly());
  }
  if (from.out_range_count() != 0) {
    set_out_range_count(from.out_range_count());
  }
}

void OptimizeOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.OptimizeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizeOptions::CopyFrom(const OptimizeOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.OptimizeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizeOptions::IsInitialized() const {

  return true;
}

void OptimizeOptions::Swap(OptimizeOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptimizeOptions::InternalSwap(OptimizeOptions* other) {
  std::swap(use_range_, other->use_range_);
  fr_.UnsafeArenaSwap(&other->fr_);
  std::swap(min_hpoly_, other->min_hpoly_);
  std::swap(out_range_count_, other->out_range_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptimizeOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OptimizeOptions_descriptor_;
  metadata.reflection = OptimizeOptions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OptimizeOptions

// optional bool use_range = 1;
void OptimizeOptions::clear_use_range() {
  use_range_ = false;
}
 bool OptimizeOptions::use_range() const {
  // @@protoc_insertion_point(field_get:y3d.OptimizeOptions.use_range)
  return use_range_;
}
 void OptimizeOptions::set_use_range(bool value) {
  
  use_range_ = value;
  // @@protoc_insertion_point(field_set:y3d.OptimizeOptions.use_range)
}

// repeated .y3d.FRangeItem fr = 2;
int OptimizeOptions::fr_size() const {
  return fr_.size();
}
void OptimizeOptions::clear_fr() {
  fr_.Clear();
}
const ::y3d::FRangeItem& OptimizeOptions::fr(int index) const {
  // @@protoc_insertion_point(field_get:y3d.OptimizeOptions.fr)
  return fr_.Get(index);
}
::y3d::FRangeItem* OptimizeOptions::mutable_fr(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.OptimizeOptions.fr)
  return fr_.Mutable(index);
}
::y3d::FRangeItem* OptimizeOptions::add_fr() {
  // @@protoc_insertion_point(field_add:y3d.OptimizeOptions.fr)
  return fr_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::FRangeItem >*
OptimizeOptions::mutable_fr() {
  // @@protoc_insertion_point(field_mutable_list:y3d.OptimizeOptions.fr)
  return &fr_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::FRangeItem >&
OptimizeOptions::fr() const {
  // @@protoc_insertion_point(field_list:y3d.OptimizeOptions.fr)
  return fr_;
}

// optional int32 min_hpoly = 3;
void OptimizeOptions::clear_min_hpoly() {
  min_hpoly_ = 0;
}
 ::google::protobuf::int32 OptimizeOptions::min_hpoly() const {
  // @@protoc_insertion_point(field_get:y3d.OptimizeOptions.min_hpoly)
  return min_hpoly_;
}
 void OptimizeOptions::set_min_hpoly(::google::protobuf::int32 value) {
  
  min_hpoly_ = value;
  // @@protoc_insertion_point(field_set:y3d.OptimizeOptions.min_hpoly)
}

// optional int32 out_range_count = 4;
void OptimizeOptions::clear_out_range_count() {
  out_range_count_ = 0;
}
 ::google::protobuf::int32 OptimizeOptions::out_range_count() const {
  // @@protoc_insertion_point(field_get:y3d.OptimizeOptions.out_range_count)
  return out_range_count_;
}
 void OptimizeOptions::set_out_range_count(::google::protobuf::int32 value) {
  
  out_range_count_ = value;
  // @@protoc_insertion_point(field_set:y3d.OptimizeOptions.out_range_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultReply::kErrorFieldNumber;
const int ResultReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultReply::ResultReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ResultReply)
}

void ResultReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ResultReply::ResultReply(const ResultReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.ResultReply)
}

void ResultReply::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  error_ = false;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResultReply::~ResultReply() {
  // @@protoc_insertion_point(destructor:y3d.ResultReply)
  SharedDtor();
}

void ResultReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ResultReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResultReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResultReply_descriptor_;
}

const ResultReply& ResultReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

ResultReply* ResultReply::default_instance_ = NULL;

ResultReply* ResultReply::New(::google::protobuf::Arena* arena) const {
  ResultReply* n = new ResultReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResultReply::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ResultReply)
  error_ = false;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ResultReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ResultReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool error = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &error_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (tag == 18) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ResultReply.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ResultReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ResultReply)
  return false;
#undef DO_
}

void ResultReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ResultReply)
  // optional bool error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->error(), output);
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResultReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ResultReply)
}

::google::protobuf::uint8* ResultReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ResultReply)
  // optional bool error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->error(), target);
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResultReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ResultReply)
  return target;
}

int ResultReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ResultReply)
  int total_size = 0;

  // optional bool error = 1;
  if (this->error() != 0) {
    total_size += 1 + 1;
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResultReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ResultReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResultReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ResultReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ResultReply)
    MergeFrom(*source);
  }
}

void ResultReply::MergeFrom(const ResultReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ResultReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void ResultReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ResultReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultReply::CopyFrom(const ResultReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ResultReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultReply::IsInitialized() const {

  return true;
}

void ResultReply::Swap(ResultReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultReply::InternalSwap(ResultReply* other) {
  std::swap(error_, other->error_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResultReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResultReply_descriptor_;
  metadata.reflection = ResultReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResultReply

// optional bool error = 1;
void ResultReply::clear_error() {
  error_ = false;
}
 bool ResultReply::error() const {
  // @@protoc_insertion_point(field_get:y3d.ResultReply.error)
  return error_;
}
 void ResultReply::set_error(bool value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:y3d.ResultReply.error)
}

// optional string message = 2;
void ResultReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ResultReply::message() const {
  // @@protoc_insertion_point(field_get:y3d.ResultReply.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResultReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ResultReply.message)
}
 void ResultReply::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ResultReply.message)
}
 void ResultReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ResultReply.message)
}
 ::std::string* ResultReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ResultReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ResultReply::release_message() {
  // @@protoc_insertion_point(field_release:y3d.ResultReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResultReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:y3d.ResultReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyParam::EmptyParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EmptyParam)
}

void EmptyParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EmptyParam::EmptyParam(const EmptyParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.EmptyParam)
}

void EmptyParam::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

EmptyParam::~EmptyParam() {
  // @@protoc_insertion_point(destructor:y3d.EmptyParam)
  SharedDtor();
}

void EmptyParam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EmptyParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmptyParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmptyParam_descriptor_;
}

const EmptyParam& EmptyParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

EmptyParam* EmptyParam::default_instance_ = NULL;

EmptyParam* EmptyParam::New(::google::protobuf::Arena* arena) const {
  EmptyParam* n = new EmptyParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EmptyParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EmptyParam)
}

bool EmptyParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EmptyParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EmptyParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EmptyParam)
  return false;
#undef DO_
}

void EmptyParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EmptyParam)
  // @@protoc_insertion_point(serialize_end:y3d.EmptyParam)
}

::google::protobuf::uint8* EmptyParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EmptyParam)
  // @@protoc_insertion_point(serialize_to_array_end:y3d.EmptyParam)
  return target;
}

int EmptyParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EmptyParam)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmptyParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EmptyParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EmptyParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EmptyParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EmptyParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EmptyParam)
    MergeFrom(*source);
  }
}

void EmptyParam::MergeFrom(const EmptyParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EmptyParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void EmptyParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EmptyParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyParam::CopyFrom(const EmptyParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EmptyParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyParam::IsInitialized() const {

  return true;
}

void EmptyParam::Swap(EmptyParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyParam::InternalSwap(EmptyParam* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmptyParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmptyParam_descriptor_;
  metadata.reflection = EmptyParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmptyParam

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenameParam::kUseSelectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenameParam::RenameParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.RenameParam)
}

void RenameParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RenameParam::RenameParam(const RenameParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.RenameParam)
}

void RenameParam::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  use_select_ = false;
}

RenameParam::~RenameParam() {
  // @@protoc_insertion_point(destructor:y3d.RenameParam)
  SharedDtor();
}

void RenameParam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RenameParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenameParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenameParam_descriptor_;
}

const RenameParam& RenameParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

RenameParam* RenameParam::default_instance_ = NULL;

RenameParam* RenameParam::New(::google::protobuf::Arena* arena) const {
  RenameParam* n = new RenameParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RenameParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.RenameParam)
  use_select_ = false;
}

bool RenameParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.RenameParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool use_select = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_select_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.RenameParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.RenameParam)
  return false;
#undef DO_
}

void RenameParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.RenameParam)
  // optional bool use_select = 1;
  if (this->use_select() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_select(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.RenameParam)
}

::google::protobuf::uint8* RenameParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.RenameParam)
  // optional bool use_select = 1;
  if (this->use_select() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_select(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.RenameParam)
  return target;
}

int RenameParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.RenameParam)
  int total_size = 0;

  // optional bool use_select = 1;
  if (this->use_select() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenameParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.RenameParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RenameParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RenameParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.RenameParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.RenameParam)
    MergeFrom(*source);
  }
}

void RenameParam::MergeFrom(const RenameParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.RenameParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.use_select() != 0) {
    set_use_select(from.use_select());
  }
}

void RenameParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.RenameParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameParam::CopyFrom(const RenameParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.RenameParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameParam::IsInitialized() const {

  return true;
}

void RenameParam::Swap(RenameParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenameParam::InternalSwap(RenameParam* other) {
  std::swap(use_select_, other->use_select_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RenameParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RenameParam_descriptor_;
  metadata.reflection = RenameParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RenameParam

// optional bool use_select = 1;
void RenameParam::clear_use_select() {
  use_select_ = false;
}
 bool RenameParam::use_select() const {
  // @@protoc_insertion_point(field_get:y3d.RenameParam.use_select)
  return use_select_;
}
 void RenameParam::set_use_select(bool value) {
  
  use_select_ = value;
  // @@protoc_insertion_point(field_set:y3d.RenameParam.use_select)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Make4TestParam::kOnameFieldNumber;
const int Make4TestParam::kLowpolyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Make4TestParam::Make4TestParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.Make4TestParam)
}

void Make4TestParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Make4TestParam::Make4TestParam(const Make4TestParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.Make4TestParam)
}

void Make4TestParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Make4TestParam::~Make4TestParam() {
  // @@protoc_insertion_point(destructor:y3d.Make4TestParam)
  SharedDtor();
}

void Make4TestParam::SharedDtor() {
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Make4TestParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Make4TestParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Make4TestParam_descriptor_;
}

const Make4TestParam& Make4TestParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

Make4TestParam* Make4TestParam::default_instance_ = NULL;

Make4TestParam* Make4TestParam::New(::google::protobuf::Arena* arena) const {
  Make4TestParam* n = new Make4TestParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Make4TestParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.Make4TestParam)
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lowpoly_.Clear();
}

bool Make4TestParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.Make4TestParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string oname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.Make4TestParam.oname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_lowpoly;
        break;
      }

      // repeated .y3d.ELowpoly lowpoly = 2;
      case 2: {
        if (tag == 18) {
         parse_lowpoly:
          DO_(input->IncrementRecursionDepth());
         parse_loop_lowpoly:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_lowpoly()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_lowpoly;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.Make4TestParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.Make4TestParam)
  return false;
#undef DO_
}

void Make4TestParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.Make4TestParam)
  // optional string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.Make4TestParam.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oname(), output);
  }

  // repeated .y3d.ELowpoly lowpoly = 2;
  for (unsigned int i = 0, n = this->lowpoly_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->lowpoly(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.Make4TestParam)
}

::google::protobuf::uint8* Make4TestParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.Make4TestParam)
  // optional string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.Make4TestParam.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oname(), target);
  }

  // repeated .y3d.ELowpoly lowpoly = 2;
  for (unsigned int i = 0, n = this->lowpoly_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->lowpoly(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.Make4TestParam)
  return target;
}

int Make4TestParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.Make4TestParam)
  int total_size = 0;

  // optional string oname = 1;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  // repeated .y3d.ELowpoly lowpoly = 2;
  total_size += 1 * this->lowpoly_size();
  for (int i = 0; i < this->lowpoly_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lowpoly(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Make4TestParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.Make4TestParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Make4TestParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Make4TestParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.Make4TestParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.Make4TestParam)
    MergeFrom(*source);
  }
}

void Make4TestParam::MergeFrom(const Make4TestParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.Make4TestParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  lowpoly_.MergeFrom(from.lowpoly_);
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
}

void Make4TestParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.Make4TestParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Make4TestParam::CopyFrom(const Make4TestParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.Make4TestParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Make4TestParam::IsInitialized() const {

  return true;
}

void Make4TestParam::Swap(Make4TestParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Make4TestParam::InternalSwap(Make4TestParam* other) {
  oname_.Swap(&other->oname_);
  lowpoly_.UnsafeArenaSwap(&other->lowpoly_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Make4TestParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Make4TestParam_descriptor_;
  metadata.reflection = Make4TestParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Make4TestParam

// optional string oname = 1;
void Make4TestParam::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Make4TestParam::oname() const {
  // @@protoc_insertion_point(field_get:y3d.Make4TestParam.oname)
  return oname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Make4TestParam::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.Make4TestParam.oname)
}
 void Make4TestParam::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.Make4TestParam.oname)
}
 void Make4TestParam::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.Make4TestParam.oname)
}
 ::std::string* Make4TestParam::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.Make4TestParam.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Make4TestParam::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.Make4TestParam.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Make4TestParam::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.Make4TestParam.oname)
}

// repeated .y3d.ELowpoly lowpoly = 2;
int Make4TestParam::lowpoly_size() const {
  return lowpoly_.size();
}
void Make4TestParam::clear_lowpoly() {
  lowpoly_.Clear();
}
const ::y3d::ELowpoly& Make4TestParam::lowpoly(int index) const {
  // @@protoc_insertion_point(field_get:y3d.Make4TestParam.lowpoly)
  return lowpoly_.Get(index);
}
::y3d::ELowpoly* Make4TestParam::mutable_lowpoly(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.Make4TestParam.lowpoly)
  return lowpoly_.Mutable(index);
}
::y3d::ELowpoly* Make4TestParam::add_lowpoly() {
  // @@protoc_insertion_point(field_add:y3d.Make4TestParam.lowpoly)
  return lowpoly_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::ELowpoly >*
Make4TestParam::mutable_lowpoly() {
  // @@protoc_insertion_point(field_mutable_list:y3d.Make4TestParam.lowpoly)
  return &lowpoly_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::ELowpoly >&
Make4TestParam::lowpoly() const {
  // @@protoc_insertion_point(field_list:y3d.Make4TestParam.lowpoly)
  return lowpoly_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptimizeParam::kRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptimizeParam::OptimizeParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.OptimizeParam)
}

void OptimizeParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OptimizeParam::OptimizeParam(const OptimizeParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.OptimizeParam)
}

void OptimizeParam::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  ratio_ = 0;
}

OptimizeParam::~OptimizeParam() {
  // @@protoc_insertion_point(destructor:y3d.OptimizeParam)
  SharedDtor();
}

void OptimizeParam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OptimizeParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptimizeParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OptimizeParam_descriptor_;
}

const OptimizeParam& OptimizeParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

OptimizeParam* OptimizeParam::default_instance_ = NULL;

OptimizeParam* OptimizeParam::New(::google::protobuf::Arena* arena) const {
  OptimizeParam* n = new OptimizeParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptimizeParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.OptimizeParam)
  ratio_ = 0;
}

bool OptimizeParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.OptimizeParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float ratio = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ratio_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.OptimizeParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.OptimizeParam)
  return false;
#undef DO_
}

void OptimizeParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.OptimizeParam)
  // optional float ratio = 1;
  if (this->ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->ratio(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.OptimizeParam)
}

::google::protobuf::uint8* OptimizeParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.OptimizeParam)
  // optional float ratio = 1;
  if (this->ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->ratio(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.OptimizeParam)
  return target;
}

int OptimizeParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.OptimizeParam)
  int total_size = 0;

  // optional float ratio = 1;
  if (this->ratio() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptimizeParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.OptimizeParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OptimizeParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OptimizeParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.OptimizeParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.OptimizeParam)
    MergeFrom(*source);
  }
}

void OptimizeParam::MergeFrom(const OptimizeParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.OptimizeParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.ratio() != 0) {
    set_ratio(from.ratio());
  }
}

void OptimizeParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.OptimizeParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizeParam::CopyFrom(const OptimizeParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.OptimizeParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizeParam::IsInitialized() const {

  return true;
}

void OptimizeParam::Swap(OptimizeParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptimizeParam::InternalSwap(OptimizeParam* other) {
  std::swap(ratio_, other->ratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptimizeParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OptimizeParam_descriptor_;
  metadata.reflection = OptimizeParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OptimizeParam

// optional float ratio = 1;
void OptimizeParam::clear_ratio() {
  ratio_ = 0;
}
 float OptimizeParam::ratio() const {
  // @@protoc_insertion_point(field_get:y3d.OptimizeParam.ratio)
  return ratio_;
}
 void OptimizeParam::set_ratio(float value) {
  
  ratio_ = value;
  // @@protoc_insertion_point(field_set:y3d.OptimizeParam.ratio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchOptimizeParam::kRatioFieldNumber;
const int BatchOptimizeParam::kFolderFieldNumber;
const int BatchOptimizeParam::kFilenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchOptimizeParam::BatchOptimizeParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.BatchOptimizeParam)
}

void BatchOptimizeParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BatchOptimizeParam::BatchOptimizeParam(const BatchOptimizeParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.BatchOptimizeParam)
}

void BatchOptimizeParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ratio_ = 0;
  folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BatchOptimizeParam::~BatchOptimizeParam() {
  // @@protoc_insertion_point(destructor:y3d.BatchOptimizeParam)
  SharedDtor();
}

void BatchOptimizeParam::SharedDtor() {
  folder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BatchOptimizeParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchOptimizeParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchOptimizeParam_descriptor_;
}

const BatchOptimizeParam& BatchOptimizeParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

BatchOptimizeParam* BatchOptimizeParam::default_instance_ = NULL;

BatchOptimizeParam* BatchOptimizeParam::New(::google::protobuf::Arena* arena) const {
  BatchOptimizeParam* n = new BatchOptimizeParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchOptimizeParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.BatchOptimizeParam)
  ratio_ = 0;
  folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BatchOptimizeParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.BatchOptimizeParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float ratio = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ratio_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_folder;
        break;
      }

      // optional string folder = 2;
      case 2: {
        if (tag == 18) {
         parse_folder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_folder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->folder().data(), this->folder().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.BatchOptimizeParam.folder"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_filename;
        break;
      }

      // optional string filename = 3;
      case 3: {
        if (tag == 26) {
         parse_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.BatchOptimizeParam.filename"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.BatchOptimizeParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.BatchOptimizeParam)
  return false;
#undef DO_
}

void BatchOptimizeParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.BatchOptimizeParam)
  // optional float ratio = 1;
  if (this->ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->ratio(), output);
  }

  // optional string folder = 2;
  if (this->folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder().data(), this->folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.BatchOptimizeParam.folder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->folder(), output);
  }

  // optional string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.BatchOptimizeParam.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.BatchOptimizeParam)
}

::google::protobuf::uint8* BatchOptimizeParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.BatchOptimizeParam)
  // optional float ratio = 1;
  if (this->ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->ratio(), target);
  }

  // optional string folder = 2;
  if (this->folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder().data(), this->folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.BatchOptimizeParam.folder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->folder(), target);
  }

  // optional string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.BatchOptimizeParam.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.BatchOptimizeParam)
  return target;
}

int BatchOptimizeParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.BatchOptimizeParam)
  int total_size = 0;

  // optional float ratio = 1;
  if (this->ratio() != 0) {
    total_size += 1 + 4;
  }

  // optional string folder = 2;
  if (this->folder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->folder());
  }

  // optional string filename = 3;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchOptimizeParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.BatchOptimizeParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BatchOptimizeParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchOptimizeParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.BatchOptimizeParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.BatchOptimizeParam)
    MergeFrom(*source);
  }
}

void BatchOptimizeParam::MergeFrom(const BatchOptimizeParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.BatchOptimizeParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.ratio() != 0) {
    set_ratio(from.ratio());
  }
  if (from.folder().size() > 0) {

    folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_);
  }
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
}

void BatchOptimizeParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.BatchOptimizeParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchOptimizeParam::CopyFrom(const BatchOptimizeParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.BatchOptimizeParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchOptimizeParam::IsInitialized() const {

  return true;
}

void BatchOptimizeParam::Swap(BatchOptimizeParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchOptimizeParam::InternalSwap(BatchOptimizeParam* other) {
  std::swap(ratio_, other->ratio_);
  folder_.Swap(&other->folder_);
  filename_.Swap(&other->filename_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchOptimizeParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchOptimizeParam_descriptor_;
  metadata.reflection = BatchOptimizeParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchOptimizeParam

// optional float ratio = 1;
void BatchOptimizeParam::clear_ratio() {
  ratio_ = 0;
}
 float BatchOptimizeParam::ratio() const {
  // @@protoc_insertion_point(field_get:y3d.BatchOptimizeParam.ratio)
  return ratio_;
}
 void BatchOptimizeParam::set_ratio(float value) {
  
  ratio_ = value;
  // @@protoc_insertion_point(field_set:y3d.BatchOptimizeParam.ratio)
}

// optional string folder = 2;
void BatchOptimizeParam::clear_folder() {
  folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BatchOptimizeParam::folder() const {
  // @@protoc_insertion_point(field_get:y3d.BatchOptimizeParam.folder)
  return folder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BatchOptimizeParam::set_folder(const ::std::string& value) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.BatchOptimizeParam.folder)
}
 void BatchOptimizeParam::set_folder(const char* value) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.BatchOptimizeParam.folder)
}
 void BatchOptimizeParam::set_folder(const char* value, size_t size) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.BatchOptimizeParam.folder)
}
 ::std::string* BatchOptimizeParam::mutable_folder() {
  
  // @@protoc_insertion_point(field_mutable:y3d.BatchOptimizeParam.folder)
  return folder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BatchOptimizeParam::release_folder() {
  // @@protoc_insertion_point(field_release:y3d.BatchOptimizeParam.folder)
  
  return folder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BatchOptimizeParam::set_allocated_folder(::std::string* folder) {
  if (folder != NULL) {
    
  } else {
    
  }
  folder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), folder);
  // @@protoc_insertion_point(field_set_allocated:y3d.BatchOptimizeParam.folder)
}

// optional string filename = 3;
void BatchOptimizeParam::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BatchOptimizeParam::filename() const {
  // @@protoc_insertion_point(field_get:y3d.BatchOptimizeParam.filename)
  return filename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BatchOptimizeParam::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.BatchOptimizeParam.filename)
}
 void BatchOptimizeParam::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.BatchOptimizeParam.filename)
}
 void BatchOptimizeParam::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.BatchOptimizeParam.filename)
}
 ::std::string* BatchOptimizeParam::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:y3d.BatchOptimizeParam.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BatchOptimizeParam::release_filename() {
  // @@protoc_insertion_point(field_release:y3d.BatchOptimizeParam.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BatchOptimizeParam::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:y3d.BatchOptimizeParam.filename)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringParam::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringParam::StringParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.StringParam)
}

void StringParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StringParam::StringParam(const StringParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.StringParam)
}

void StringParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StringParam::~StringParam() {
  // @@protoc_insertion_point(destructor:y3d.StringParam)
  SharedDtor();
}

void StringParam::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void StringParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StringParam_descriptor_;
}

const StringParam& StringParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

StringParam* StringParam::default_instance_ = NULL;

StringParam* StringParam::New(::google::protobuf::Arena* arena) const {
  StringParam* n = new StringParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.StringParam)
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StringParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.StringParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string str = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.StringParam.str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.StringParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.StringParam)
  return false;
#undef DO_
}

void StringParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.StringParam)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.StringParam.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.StringParam)
}

::google::protobuf::uint8* StringParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.StringParam)
  // optional string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.StringParam.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.StringParam)
  return target;
}

int StringParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.StringParam)
  int total_size = 0;

  // optional string str = 1;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.StringParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StringParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StringParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.StringParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.StringParam)
    MergeFrom(*source);
  }
}

void StringParam::MergeFrom(const StringParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.StringParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
}

void StringParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.StringParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringParam::CopyFrom(const StringParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.StringParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringParam::IsInitialized() const {

  return true;
}

void StringParam::Swap(StringParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringParam::InternalSwap(StringParam* other) {
  str_.Swap(&other->str_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StringParam_descriptor_;
  metadata.reflection = StringParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringParam

// optional string str = 1;
void StringParam::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StringParam::str() const {
  // @@protoc_insertion_point(field_get:y3d.StringParam.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StringParam::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.StringParam.str)
}
 void StringParam::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.StringParam.str)
}
 void StringParam::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.StringParam.str)
}
 ::std::string* StringParam::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:y3d.StringParam.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StringParam::release_str() {
  // @@protoc_insertion_point(field_release:y3d.StringParam.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StringParam::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:y3d.StringParam.str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParam::kTestNameFieldNumber;
const int TestParam::kAnythingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParam::TestParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.TestParam)
}

void TestParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  anything_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

TestParam::TestParam(const TestParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.TestParam)
}

void TestParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anything_ = NULL;
}

TestParam::~TestParam() {
  // @@protoc_insertion_point(destructor:y3d.TestParam)
  SharedDtor();
}

void TestParam::SharedDtor() {
  test_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete anything_;
  }
}

void TestParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestParam_descriptor_;
}

const TestParam& TestParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

TestParam* TestParam::default_instance_ = NULL;

TestParam* TestParam::New(::google::protobuf::Arena* arena) const {
  TestParam* n = new TestParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.TestParam)
  test_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && anything_ != NULL) delete anything_;
  anything_ = NULL;
}

bool TestParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.TestParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string test_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_name().data(), this->test_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.TestParam.test_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_anything;
        break;
      }

      // optional .google.protobuf.Any anything = 2;
      case 2: {
        if (tag == 18) {
         parse_anything:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_anything()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.TestParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.TestParam)
  return false;
#undef DO_
}

void TestParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.TestParam)
  // optional string test_name = 1;
  if (this->test_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_name().data(), this->test_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestParam.test_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->test_name(), output);
  }

  // optional .google.protobuf.Any anything = 2;
  if (this->has_anything()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->anything_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.TestParam)
}

::google::protobuf::uint8* TestParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.TestParam)
  // optional string test_name = 1;
  if (this->test_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_name().data(), this->test_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestParam.test_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->test_name(), target);
  }

  // optional .google.protobuf.Any anything = 2;
  if (this->has_anything()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->anything_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.TestParam)
  return target;
}

int TestParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.TestParam)
  int total_size = 0;

  // optional string test_name = 1;
  if (this->test_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_name());
  }

  // optional .google.protobuf.Any anything = 2;
  if (this->has_anything()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->anything_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.TestParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TestParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TestParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.TestParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.TestParam)
    MergeFrom(*source);
  }
}

void TestParam::MergeFrom(const TestParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.TestParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.test_name().size() > 0) {

    test_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_name_);
  }
  if (from.has_anything()) {
    mutable_anything()->::google::protobuf::Any::MergeFrom(from.anything());
  }
}

void TestParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.TestParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParam::CopyFrom(const TestParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.TestParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestParam::IsInitialized() const {

  return true;
}

void TestParam::Swap(TestParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestParam::InternalSwap(TestParam* other) {
  test_name_.Swap(&other->test_name_);
  std::swap(anything_, other->anything_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestParam_descriptor_;
  metadata.reflection = TestParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestParam

// optional string test_name = 1;
void TestParam::clear_test_name() {
  test_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TestParam::test_name() const {
  // @@protoc_insertion_point(field_get:y3d.TestParam.test_name)
  return test_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TestParam::set_test_name(const ::std::string& value) {
  
  test_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.TestParam.test_name)
}
 void TestParam::set_test_name(const char* value) {
  
  test_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.TestParam.test_name)
}
 void TestParam::set_test_name(const char* value, size_t size) {
  
  test_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.TestParam.test_name)
}
 ::std::string* TestParam::mutable_test_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.TestParam.test_name)
  return test_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TestParam::release_test_name() {
  // @@protoc_insertion_point(field_release:y3d.TestParam.test_name)
  
  return test_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TestParam::set_allocated_test_name(::std::string* test_name) {
  if (test_name != NULL) {
    
  } else {
    
  }
  test_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), test_name);
  // @@protoc_insertion_point(field_set_allocated:y3d.TestParam.test_name)
}

// optional .google.protobuf.Any anything = 2;
bool TestParam::has_anything() const {
  return !_is_default_instance_ && anything_ != NULL;
}
void TestParam::clear_anything() {
  if (GetArenaNoVirtual() == NULL && anything_ != NULL) delete anything_;
  anything_ = NULL;
}
const ::google::protobuf::Any& TestParam::anything() const {
  // @@protoc_insertion_point(field_get:y3d.TestParam.anything)
  return anything_ != NULL ? *anything_ : *default_instance_->anything_;
}
::google::protobuf::Any* TestParam::mutable_anything() {
  
  if (anything_ == NULL) {
    anything_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:y3d.TestParam.anything)
  return anything_;
}
::google::protobuf::Any* TestParam::release_anything() {
  // @@protoc_insertion_point(field_release:y3d.TestParam.anything)
  
  ::google::protobuf::Any* temp = anything_;
  anything_ = NULL;
  return temp;
}
void TestParam::set_allocated_anything(::google::protobuf::Any* anything) {
  delete anything_;
  anything_ = anything;
  if (anything) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.TestParam.anything)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewProjectParam::kFnameFieldNumber;
const int NewProjectParam::kFolderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewProjectParam::NewProjectParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.NewProjectParam)
}

void NewProjectParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NewProjectParam::NewProjectParam(const NewProjectParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.NewProjectParam)
}

void NewProjectParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NewProjectParam::~NewProjectParam() {
  // @@protoc_insertion_point(destructor:y3d.NewProjectParam)
  SharedDtor();
}

void NewProjectParam::SharedDtor() {
  fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NewProjectParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewProjectParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewProjectParam_descriptor_;
}

const NewProjectParam& NewProjectParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

NewProjectParam* NewProjectParam::default_instance_ = NULL;

NewProjectParam* NewProjectParam::New(::google::protobuf::Arena* arena) const {
  NewProjectParam* n = new NewProjectParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewProjectParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.NewProjectParam)
  fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NewProjectParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.NewProjectParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string fname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fname().data(), this->fname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.NewProjectParam.fname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_folder;
        break;
      }

      // optional string folder = 2;
      case 2: {
        if (tag == 18) {
         parse_folder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_folder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->folder().data(), this->folder().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.NewProjectParam.folder"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.NewProjectParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.NewProjectParam)
  return false;
#undef DO_
}

void NewProjectParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.NewProjectParam)
  // optional string fname = 1;
  if (this->fname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fname().data(), this->fname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.NewProjectParam.fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fname(), output);
  }

  // optional string folder = 2;
  if (this->folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder().data(), this->folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.NewProjectParam.folder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->folder(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.NewProjectParam)
}

::google::protobuf::uint8* NewProjectParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.NewProjectParam)
  // optional string fname = 1;
  if (this->fname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fname().data(), this->fname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.NewProjectParam.fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fname(), target);
  }

  // optional string folder = 2;
  if (this->folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder().data(), this->folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.NewProjectParam.folder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->folder(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.NewProjectParam)
  return target;
}

int NewProjectParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.NewProjectParam)
  int total_size = 0;

  // optional string fname = 1;
  if (this->fname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fname());
  }

  // optional string folder = 2;
  if (this->folder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->folder());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewProjectParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.NewProjectParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NewProjectParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NewProjectParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.NewProjectParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.NewProjectParam)
    MergeFrom(*source);
  }
}

void NewProjectParam::MergeFrom(const NewProjectParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.NewProjectParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.fname().size() > 0) {

    fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
  }
  if (from.folder().size() > 0) {

    folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_);
  }
}

void NewProjectParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.NewProjectParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewProjectParam::CopyFrom(const NewProjectParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.NewProjectParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewProjectParam::IsInitialized() const {

  return true;
}

void NewProjectParam::Swap(NewProjectParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewProjectParam::InternalSwap(NewProjectParam* other) {
  fname_.Swap(&other->fname_);
  folder_.Swap(&other->folder_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewProjectParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewProjectParam_descriptor_;
  metadata.reflection = NewProjectParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewProjectParam

// optional string fname = 1;
void NewProjectParam::clear_fname() {
  fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NewProjectParam::fname() const {
  // @@protoc_insertion_point(field_get:y3d.NewProjectParam.fname)
  return fname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewProjectParam::set_fname(const ::std::string& value) {
  
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.NewProjectParam.fname)
}
 void NewProjectParam::set_fname(const char* value) {
  
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.NewProjectParam.fname)
}
 void NewProjectParam::set_fname(const char* value, size_t size) {
  
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.NewProjectParam.fname)
}
 ::std::string* NewProjectParam::mutable_fname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.NewProjectParam.fname)
  return fname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewProjectParam::release_fname() {
  // @@protoc_insertion_point(field_release:y3d.NewProjectParam.fname)
  
  return fname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewProjectParam::set_allocated_fname(::std::string* fname) {
  if (fname != NULL) {
    
  } else {
    
  }
  fname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fname);
  // @@protoc_insertion_point(field_set_allocated:y3d.NewProjectParam.fname)
}

// optional string folder = 2;
void NewProjectParam::clear_folder() {
  folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NewProjectParam::folder() const {
  // @@protoc_insertion_point(field_get:y3d.NewProjectParam.folder)
  return folder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewProjectParam::set_folder(const ::std::string& value) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.NewProjectParam.folder)
}
 void NewProjectParam::set_folder(const char* value) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.NewProjectParam.folder)
}
 void NewProjectParam::set_folder(const char* value, size_t size) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.NewProjectParam.folder)
}
 ::std::string* NewProjectParam::mutable_folder() {
  
  // @@protoc_insertion_point(field_mutable:y3d.NewProjectParam.folder)
  return folder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewProjectParam::release_folder() {
  // @@protoc_insertion_point(field_release:y3d.NewProjectParam.folder)
  
  return folder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewProjectParam::set_allocated_folder(::std::string* folder) {
  if (folder != NULL) {
    
  } else {
    
  }
  folder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), folder);
  // @@protoc_insertion_point(field_set_allocated:y3d.NewProjectParam.folder)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseNProject::kPInfoFieldNumber;
const int ResponseNProject::kYalFieldNumber;
const int ResponseNProject::kSysFieldNumber;
const int ResponseNProject::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseNProject::ResponseNProject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ResponseNProject)
}

void ResponseNProject::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  pinfo_ = const_cast< ::y3d::ProjectInfo*>(&::y3d::ProjectInfo::default_instance());
  yal_ = const_cast< ::y3d::YAreaList*>(&::y3d::YAreaList::default_instance());
  sys_ = const_cast< ::y3d::YSystem*>(&::y3d::YSystem::default_instance());
}

ResponseNProject::ResponseNProject(const ResponseNProject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.ResponseNProject)
}

void ResponseNProject::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pinfo_ = NULL;
  yal_ = NULL;
  sys_ = NULL;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResponseNProject::~ResponseNProject() {
  // @@protoc_insertion_point(destructor:y3d.ResponseNProject)
  SharedDtor();
}

void ResponseNProject::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete pinfo_;
    delete yal_;
    delete sys_;
  }
}

void ResponseNProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseNProject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseNProject_descriptor_;
}

const ResponseNProject& ResponseNProject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

ResponseNProject* ResponseNProject::default_instance_ = NULL;

ResponseNProject* ResponseNProject::New(::google::protobuf::Arena* arena) const {
  ResponseNProject* n = new ResponseNProject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseNProject::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ResponseNProject)
  if (GetArenaNoVirtual() == NULL && pinfo_ != NULL) delete pinfo_;
  pinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && yal_ != NULL) delete yal_;
  yal_ = NULL;
  if (GetArenaNoVirtual() == NULL && sys_ != NULL) delete sys_;
  sys_ = NULL;
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ResponseNProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ResponseNProject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .y3d.ProjectInfo pInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_yal;
        break;
      }

      // optional .y3d.YAreaList yal = 2;
      case 2: {
        if (tag == 18) {
         parse_yal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yal()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sys;
        break;
      }

      // optional .y3d.YSystem sys = 3;
      case 3: {
        if (tag == 26) {
         parse_sys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_err;
        break;
      }

      // optional string err = 4;
      case 4: {
        if (tag == 34) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ResponseNProject.err"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ResponseNProject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ResponseNProject)
  return false;
#undef DO_
}

void ResponseNProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ResponseNProject)
  // optional .y3d.ProjectInfo pInfo = 1;
  if (this->has_pinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pinfo_, output);
  }

  // optional .y3d.YAreaList yal = 2;
  if (this->has_yal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->yal_, output);
  }

  // optional .y3d.YSystem sys = 3;
  if (this->has_sys()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->sys_, output);
  }

  // optional string err = 4;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResponseNProject.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ResponseNProject)
}

::google::protobuf::uint8* ResponseNProject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ResponseNProject)
  // optional .y3d.ProjectInfo pInfo = 1;
  if (this->has_pinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pinfo_, false, target);
  }

  // optional .y3d.YAreaList yal = 2;
  if (this->has_yal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->yal_, false, target);
  }

  // optional .y3d.YSystem sys = 3;
  if (this->has_sys()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->sys_, false, target);
  }

  // optional string err = 4;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResponseNProject.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ResponseNProject)
  return target;
}

int ResponseNProject::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ResponseNProject)
  int total_size = 0;

  // optional .y3d.ProjectInfo pInfo = 1;
  if (this->has_pinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pinfo_);
  }

  // optional .y3d.YAreaList yal = 2;
  if (this->has_yal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->yal_);
  }

  // optional .y3d.YSystem sys = 3;
  if (this->has_sys()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sys_);
  }

  // optional string err = 4;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseNProject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ResponseNProject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResponseNProject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseNProject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ResponseNProject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ResponseNProject)
    MergeFrom(*source);
  }
}

void ResponseNProject::MergeFrom(const ResponseNProject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ResponseNProject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_pinfo()) {
    mutable_pinfo()->::y3d::ProjectInfo::MergeFrom(from.pinfo());
  }
  if (from.has_yal()) {
    mutable_yal()->::y3d::YAreaList::MergeFrom(from.yal());
  }
  if (from.has_sys()) {
    mutable_sys()->::y3d::YSystem::MergeFrom(from.sys());
  }
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
}

void ResponseNProject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ResponseNProject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseNProject::CopyFrom(const ResponseNProject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ResponseNProject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseNProject::IsInitialized() const {

  return true;
}

void ResponseNProject::Swap(ResponseNProject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseNProject::InternalSwap(ResponseNProject* other) {
  std::swap(pinfo_, other->pinfo_);
  std::swap(yal_, other->yal_);
  std::swap(sys_, other->sys_);
  err_.Swap(&other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseNProject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseNProject_descriptor_;
  metadata.reflection = ResponseNProject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseNProject

// optional .y3d.ProjectInfo pInfo = 1;
bool ResponseNProject::has_pinfo() const {
  return !_is_default_instance_ && pinfo_ != NULL;
}
void ResponseNProject::clear_pinfo() {
  if (GetArenaNoVirtual() == NULL && pinfo_ != NULL) delete pinfo_;
  pinfo_ = NULL;
}
const ::y3d::ProjectInfo& ResponseNProject::pinfo() const {
  // @@protoc_insertion_point(field_get:y3d.ResponseNProject.pInfo)
  return pinfo_ != NULL ? *pinfo_ : *default_instance_->pinfo_;
}
::y3d::ProjectInfo* ResponseNProject::mutable_pinfo() {
  
  if (pinfo_ == NULL) {
    pinfo_ = new ::y3d::ProjectInfo;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ResponseNProject.pInfo)
  return pinfo_;
}
::y3d::ProjectInfo* ResponseNProject::release_pinfo() {
  // @@protoc_insertion_point(field_release:y3d.ResponseNProject.pInfo)
  
  ::y3d::ProjectInfo* temp = pinfo_;
  pinfo_ = NULL;
  return temp;
}
void ResponseNProject::set_allocated_pinfo(::y3d::ProjectInfo* pinfo) {
  delete pinfo_;
  pinfo_ = pinfo;
  if (pinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ResponseNProject.pInfo)
}

// optional .y3d.YAreaList yal = 2;
bool ResponseNProject::has_yal() const {
  return !_is_default_instance_ && yal_ != NULL;
}
void ResponseNProject::clear_yal() {
  if (GetArenaNoVirtual() == NULL && yal_ != NULL) delete yal_;
  yal_ = NULL;
}
const ::y3d::YAreaList& ResponseNProject::yal() const {
  // @@protoc_insertion_point(field_get:y3d.ResponseNProject.yal)
  return yal_ != NULL ? *yal_ : *default_instance_->yal_;
}
::y3d::YAreaList* ResponseNProject::mutable_yal() {
  
  if (yal_ == NULL) {
    yal_ = new ::y3d::YAreaList;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ResponseNProject.yal)
  return yal_;
}
::y3d::YAreaList* ResponseNProject::release_yal() {
  // @@protoc_insertion_point(field_release:y3d.ResponseNProject.yal)
  
  ::y3d::YAreaList* temp = yal_;
  yal_ = NULL;
  return temp;
}
void ResponseNProject::set_allocated_yal(::y3d::YAreaList* yal) {
  delete yal_;
  yal_ = yal;
  if (yal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ResponseNProject.yal)
}

// optional .y3d.YSystem sys = 3;
bool ResponseNProject::has_sys() const {
  return !_is_default_instance_ && sys_ != NULL;
}
void ResponseNProject::clear_sys() {
  if (GetArenaNoVirtual() == NULL && sys_ != NULL) delete sys_;
  sys_ = NULL;
}
const ::y3d::YSystem& ResponseNProject::sys() const {
  // @@protoc_insertion_point(field_get:y3d.ResponseNProject.sys)
  return sys_ != NULL ? *sys_ : *default_instance_->sys_;
}
::y3d::YSystem* ResponseNProject::mutable_sys() {
  
  if (sys_ == NULL) {
    sys_ = new ::y3d::YSystem;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ResponseNProject.sys)
  return sys_;
}
::y3d::YSystem* ResponseNProject::release_sys() {
  // @@protoc_insertion_point(field_release:y3d.ResponseNProject.sys)
  
  ::y3d::YSystem* temp = sys_;
  sys_ = NULL;
  return temp;
}
void ResponseNProject::set_allocated_sys(::y3d::YSystem* sys) {
  delete sys_;
  sys_ = sys;
  if (sys) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ResponseNProject.sys)
}

// optional string err = 4;
void ResponseNProject::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ResponseNProject::err() const {
  // @@protoc_insertion_point(field_get:y3d.ResponseNProject.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResponseNProject::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ResponseNProject.err)
}
 void ResponseNProject::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ResponseNProject.err)
}
 void ResponseNProject::set_err(const char* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ResponseNProject.err)
}
 ::std::string* ResponseNProject::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ResponseNProject.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ResponseNProject::release_err() {
  // @@protoc_insertion_point(field_release:y3d.ResponseNProject.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResponseNProject::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:y3d.ResponseNProject.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YEvent::kNoeventFieldNumber;
const int YEvent::kSelectFieldNumber;
const int YEvent::kMoveFieldNumber;
const int YEvent::kRotateFieldNumber;
const int YEvent::kDelFieldNumber;
const int YEvent::kSelectManyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YEvent::YEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YEvent)
}

void YEvent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  YEvent_default_oneof_instance_->noevent_ = const_cast< ::y3d::ENone*>(&::y3d::ENone::default_instance());
  YEvent_default_oneof_instance_->select_ = const_cast< ::y3d::ESelect*>(&::y3d::ESelect::default_instance());
  YEvent_default_oneof_instance_->move_ = const_cast< ::y3d::EMove*>(&::y3d::EMove::default_instance());
  YEvent_default_oneof_instance_->rotate_ = const_cast< ::y3d::ERotate*>(&::y3d::ERotate::default_instance());
  YEvent_default_oneof_instance_->del_ = const_cast< ::y3d::EDelete*>(&::y3d::EDelete::default_instance());
  YEvent_default_oneof_instance_->select_many_ = const_cast< ::y3d::ESelectMany*>(&::y3d::ESelectMany::default_instance());
}

YEvent::YEvent(const YEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YEvent)
}

void YEvent::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_event();
}

YEvent::~YEvent() {
  // @@protoc_insertion_point(destructor:y3d.YEvent)
  SharedDtor();
}

void YEvent::SharedDtor() {
  if (has_event()) {
    clear_event();
  }
  if (this != default_instance_) {
  }
}

void YEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YEvent_descriptor_;
}

const YEvent& YEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

YEvent* YEvent::default_instance_ = NULL;

YEvent* YEvent::New(::google::protobuf::Arena* arena) const {
  YEvent* n = new YEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YEvent::clear_event() {
// @@protoc_insertion_point(one_of_clear_start:y3d.YEvent)
  switch(event_case()) {
    case kNoevent: {
      delete event_.noevent_;
      break;
    }
    case kSelect: {
      delete event_.select_;
      break;
    }
    case kMove: {
      delete event_.move_;
      break;
    }
    case kRotate: {
      delete event_.rotate_;
      break;
    }
    case kDel: {
      delete event_.del_;
      break;
    }
    case kSelectMany: {
      delete event_.select_many_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void YEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YEvent)
  clear_event();
}

bool YEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .y3d.ENone noevent = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_noevent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_select;
        break;
      }

      // optional .y3d.ESelect select = 2;
      case 2: {
        if (tag == 18) {
         parse_select:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_select()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_move;
        break;
      }

      // optional .y3d.EMove move = 3;
      case 3: {
        if (tag == 26) {
         parse_move:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_move()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_rotate;
        break;
      }

      // optional .y3d.ERotate rotate = 4;
      case 4: {
        if (tag == 34) {
         parse_rotate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rotate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_del;
        break;
      }

      // optional .y3d.EDelete del = 5;
      case 5: {
        if (tag == 42) {
         parse_del:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_select_many;
        break;
      }

      // optional .y3d.ESelectMany select_many = 6;
      case 6: {
        if (tag == 50) {
         parse_select_many:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_select_many()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YEvent)
  return false;
#undef DO_
}

void YEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YEvent)
  // optional .y3d.ENone noevent = 1;
  if (has_noevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *event_.noevent_, output);
  }

  // optional .y3d.ESelect select = 2;
  if (has_select()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *event_.select_, output);
  }

  // optional .y3d.EMove move = 3;
  if (has_move()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *event_.move_, output);
  }

  // optional .y3d.ERotate rotate = 4;
  if (has_rotate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *event_.rotate_, output);
  }

  // optional .y3d.EDelete del = 5;
  if (has_del()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *event_.del_, output);
  }

  // optional .y3d.ESelectMany select_many = 6;
  if (has_select_many()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *event_.select_many_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YEvent)
}

::google::protobuf::uint8* YEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YEvent)
  // optional .y3d.ENone noevent = 1;
  if (has_noevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *event_.noevent_, false, target);
  }

  // optional .y3d.ESelect select = 2;
  if (has_select()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *event_.select_, false, target);
  }

  // optional .y3d.EMove move = 3;
  if (has_move()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *event_.move_, false, target);
  }

  // optional .y3d.ERotate rotate = 4;
  if (has_rotate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *event_.rotate_, false, target);
  }

  // optional .y3d.EDelete del = 5;
  if (has_del()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *event_.del_, false, target);
  }

  // optional .y3d.ESelectMany select_many = 6;
  if (has_select_many()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *event_.select_many_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YEvent)
  return target;
}

int YEvent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YEvent)
  int total_size = 0;

  switch (event_case()) {
    // optional .y3d.ENone noevent = 1;
    case kNoevent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.noevent_);
      break;
    }
    // optional .y3d.ESelect select = 2;
    case kSelect: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.select_);
      break;
    }
    // optional .y3d.EMove move = 3;
    case kMove: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.move_);
      break;
    }
    // optional .y3d.ERotate rotate = 4;
    case kRotate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.rotate_);
      break;
    }
    // optional .y3d.EDelete del = 5;
    case kDel: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.del_);
      break;
    }
    // optional .y3d.ESelectMany select_many = 6;
    case kSelectMany: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.select_many_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YEvent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YEvent)
    MergeFrom(*source);
  }
}

void YEvent::MergeFrom(const YEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.event_case()) {
    case kNoevent: {
      mutable_noevent()->::y3d::ENone::MergeFrom(from.noevent());
      break;
    }
    case kSelect: {
      mutable_select()->::y3d::ESelect::MergeFrom(from.select());
      break;
    }
    case kMove: {
      mutable_move()->::y3d::EMove::MergeFrom(from.move());
      break;
    }
    case kRotate: {
      mutable_rotate()->::y3d::ERotate::MergeFrom(from.rotate());
      break;
    }
    case kDel: {
      mutable_del()->::y3d::EDelete::MergeFrom(from.del());
      break;
    }
    case kSelectMany: {
      mutable_select_many()->::y3d::ESelectMany::MergeFrom(from.select_many());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void YEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YEvent::CopyFrom(const YEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YEvent::IsInitialized() const {

  return true;
}

void YEvent::Swap(YEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YEvent::InternalSwap(YEvent* other) {
  std::swap(event_, other->event_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YEvent_descriptor_;
  metadata.reflection = YEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YEvent

// optional .y3d.ENone noevent = 1;
bool YEvent::has_noevent() const {
  return event_case() == kNoevent;
}
void YEvent::set_has_noevent() {
  _oneof_case_[0] = kNoevent;
}
void YEvent::clear_noevent() {
  if (has_noevent()) {
    delete event_.noevent_;
    clear_has_event();
  }
}
 const ::y3d::ENone& YEvent::noevent() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.noevent)
  return has_noevent()
      ? *event_.noevent_
      : ::y3d::ENone::default_instance();
}
::y3d::ENone* YEvent::mutable_noevent() {
  if (!has_noevent()) {
    clear_event();
    set_has_noevent();
    event_.noevent_ = new ::y3d::ENone;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.noevent)
  return event_.noevent_;
}
::y3d::ENone* YEvent::release_noevent() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.noevent)
  if (has_noevent()) {
    clear_has_event();
    ::y3d::ENone* temp = event_.noevent_;
    event_.noevent_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_noevent(::y3d::ENone* noevent) {
  clear_event();
  if (noevent) {
    set_has_noevent();
    event_.noevent_ = noevent;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.noevent)
}

// optional .y3d.ESelect select = 2;
bool YEvent::has_select() const {
  return event_case() == kSelect;
}
void YEvent::set_has_select() {
  _oneof_case_[0] = kSelect;
}
void YEvent::clear_select() {
  if (has_select()) {
    delete event_.select_;
    clear_has_event();
  }
}
 const ::y3d::ESelect& YEvent::select() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.select)
  return has_select()
      ? *event_.select_
      : ::y3d::ESelect::default_instance();
}
::y3d::ESelect* YEvent::mutable_select() {
  if (!has_select()) {
    clear_event();
    set_has_select();
    event_.select_ = new ::y3d::ESelect;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.select)
  return event_.select_;
}
::y3d::ESelect* YEvent::release_select() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.select)
  if (has_select()) {
    clear_has_event();
    ::y3d::ESelect* temp = event_.select_;
    event_.select_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_select(::y3d::ESelect* select) {
  clear_event();
  if (select) {
    set_has_select();
    event_.select_ = select;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.select)
}

// optional .y3d.EMove move = 3;
bool YEvent::has_move() const {
  return event_case() == kMove;
}
void YEvent::set_has_move() {
  _oneof_case_[0] = kMove;
}
void YEvent::clear_move() {
  if (has_move()) {
    delete event_.move_;
    clear_has_event();
  }
}
 const ::y3d::EMove& YEvent::move() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.move)
  return has_move()
      ? *event_.move_
      : ::y3d::EMove::default_instance();
}
::y3d::EMove* YEvent::mutable_move() {
  if (!has_move()) {
    clear_event();
    set_has_move();
    event_.move_ = new ::y3d::EMove;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.move)
  return event_.move_;
}
::y3d::EMove* YEvent::release_move() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.move)
  if (has_move()) {
    clear_has_event();
    ::y3d::EMove* temp = event_.move_;
    event_.move_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_move(::y3d::EMove* move) {
  clear_event();
  if (move) {
    set_has_move();
    event_.move_ = move;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.move)
}

// optional .y3d.ERotate rotate = 4;
bool YEvent::has_rotate() const {
  return event_case() == kRotate;
}
void YEvent::set_has_rotate() {
  _oneof_case_[0] = kRotate;
}
void YEvent::clear_rotate() {
  if (has_rotate()) {
    delete event_.rotate_;
    clear_has_event();
  }
}
 const ::y3d::ERotate& YEvent::rotate() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.rotate)
  return has_rotate()
      ? *event_.rotate_
      : ::y3d::ERotate::default_instance();
}
::y3d::ERotate* YEvent::mutable_rotate() {
  if (!has_rotate()) {
    clear_event();
    set_has_rotate();
    event_.rotate_ = new ::y3d::ERotate;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.rotate)
  return event_.rotate_;
}
::y3d::ERotate* YEvent::release_rotate() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.rotate)
  if (has_rotate()) {
    clear_has_event();
    ::y3d::ERotate* temp = event_.rotate_;
    event_.rotate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_rotate(::y3d::ERotate* rotate) {
  clear_event();
  if (rotate) {
    set_has_rotate();
    event_.rotate_ = rotate;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.rotate)
}

// optional .y3d.EDelete del = 5;
bool YEvent::has_del() const {
  return event_case() == kDel;
}
void YEvent::set_has_del() {
  _oneof_case_[0] = kDel;
}
void YEvent::clear_del() {
  if (has_del()) {
    delete event_.del_;
    clear_has_event();
  }
}
 const ::y3d::EDelete& YEvent::del() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.del)
  return has_del()
      ? *event_.del_
      : ::y3d::EDelete::default_instance();
}
::y3d::EDelete* YEvent::mutable_del() {
  if (!has_del()) {
    clear_event();
    set_has_del();
    event_.del_ = new ::y3d::EDelete;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.del)
  return event_.del_;
}
::y3d::EDelete* YEvent::release_del() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.del)
  if (has_del()) {
    clear_has_event();
    ::y3d::EDelete* temp = event_.del_;
    event_.del_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_del(::y3d::EDelete* del) {
  clear_event();
  if (del) {
    set_has_del();
    event_.del_ = del;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.del)
}

// optional .y3d.ESelectMany select_many = 6;
bool YEvent::has_select_many() const {
  return event_case() == kSelectMany;
}
void YEvent::set_has_select_many() {
  _oneof_case_[0] = kSelectMany;
}
void YEvent::clear_select_many() {
  if (has_select_many()) {
    delete event_.select_many_;
    clear_has_event();
  }
}
 const ::y3d::ESelectMany& YEvent::select_many() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.select_many)
  return has_select_many()
      ? *event_.select_many_
      : ::y3d::ESelectMany::default_instance();
}
::y3d::ESelectMany* YEvent::mutable_select_many() {
  if (!has_select_many()) {
    clear_event();
    set_has_select_many();
    event_.select_many_ = new ::y3d::ESelectMany;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.select_many)
  return event_.select_many_;
}
::y3d::ESelectMany* YEvent::release_select_many() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.select_many)
  if (has_select_many()) {
    clear_has_event();
    ::y3d::ESelectMany* temp = event_.select_many_;
    event_.select_many_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_select_many(::y3d::ESelectMany* select_many) {
  clear_event();
  if (select_many) {
    set_has_select_many();
    event_.select_many_ = select_many;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.select_many)
}

bool YEvent::has_event() const {
  return event_case() != EVENT_NOT_SET;
}
void YEvent::clear_has_event() {
  _oneof_case_[0] = EVENT_NOT_SET;
}
YEvent::EventCase YEvent::event_case() const {
  return YEvent::EventCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENone::ENone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ENone)
}

void ENone::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ENone::ENone(const ENone& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.ENone)
}

void ENone::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ENone::~ENone() {
  // @@protoc_insertion_point(destructor:y3d.ENone)
  SharedDtor();
}

void ENone::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ENone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ENone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ENone_descriptor_;
}

const ENone& ENone::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

ENone* ENone::default_instance_ = NULL;

ENone* ENone::New(::google::protobuf::Arena* arena) const {
  ENone* n = new ENone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ENone::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ENone)
}

bool ENone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ENone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ENone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ENone)
  return false;
#undef DO_
}

void ENone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ENone)
  // @@protoc_insertion_point(serialize_end:y3d.ENone)
}

::google::protobuf::uint8* ENone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ENone)
  // @@protoc_insertion_point(serialize_to_array_end:y3d.ENone)
  return target;
}

int ENone::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ENone)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ENone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ENone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ENone* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ENone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ENone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ENone)
    MergeFrom(*source);
  }
}

void ENone::MergeFrom(const ENone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ENone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void ENone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ENone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENone::CopyFrom(const ENone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ENone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENone::IsInitialized() const {

  return true;
}

void ENone::Swap(ENone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENone::InternalSwap(ENone* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ENone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ENone_descriptor_;
  metadata.reflection = ENone_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ENone

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ESelect::kNameFieldNumber;
const int ESelect::kIsolateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ESelect::ESelect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ESelect)
}

void ESelect::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ESelect::ESelect(const ESelect& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.ESelect)
}

void ESelect::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isolate_ = false;
}

ESelect::~ESelect() {
  // @@protoc_insertion_point(destructor:y3d.ESelect)
  SharedDtor();
}

void ESelect::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ESelect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ESelect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ESelect_descriptor_;
}

const ESelect& ESelect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

ESelect* ESelect::default_instance_ = NULL;

ESelect* ESelect::New(::google::protobuf::Arena* arena) const {
  ESelect* n = new ESelect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ESelect::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ESelect)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isolate_ = false;
}

bool ESelect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ESelect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ESelect.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_isolate;
        break;
      }

      // optional bool isolate = 2;
      case 2: {
        if (tag == 16) {
         parse_isolate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isolate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ESelect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ESelect)
  return false;
#undef DO_
}

void ESelect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ESelect)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ESelect.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bool isolate = 2;
  if (this->isolate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isolate(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ESelect)
}

::google::protobuf::uint8* ESelect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ESelect)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ESelect.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bool isolate = 2;
  if (this->isolate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isolate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ESelect)
  return target;
}

int ESelect::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ESelect)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional bool isolate = 2;
  if (this->isolate() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ESelect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ESelect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ESelect* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ESelect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ESelect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ESelect)
    MergeFrom(*source);
  }
}

void ESelect::MergeFrom(const ESelect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ESelect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.isolate() != 0) {
    set_isolate(from.isolate());
  }
}

void ESelect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ESelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ESelect::CopyFrom(const ESelect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ESelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ESelect::IsInitialized() const {

  return true;
}

void ESelect::Swap(ESelect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ESelect::InternalSwap(ESelect* other) {
  name_.Swap(&other->name_);
  std::swap(isolate_, other->isolate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ESelect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ESelect_descriptor_;
  metadata.reflection = ESelect_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ESelect

// optional string name = 1;
void ESelect::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ESelect::name() const {
  // @@protoc_insertion_point(field_get:y3d.ESelect.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ESelect::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ESelect.name)
}
 void ESelect::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ESelect.name)
}
 void ESelect::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ESelect.name)
}
 ::std::string* ESelect::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ESelect.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ESelect::release_name() {
  // @@protoc_insertion_point(field_release:y3d.ESelect.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ESelect::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.ESelect.name)
}

// optional bool isolate = 2;
void ESelect::clear_isolate() {
  isolate_ = false;
}
 bool ESelect::isolate() const {
  // @@protoc_insertion_point(field_get:y3d.ESelect.isolate)
  return isolate_;
}
 void ESelect::set_isolate(bool value) {
  
  isolate_ = value;
  // @@protoc_insertion_point(field_set:y3d.ESelect.isolate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ESelectMany::kNameFieldNumber;
const int ESelectMany::kIsolateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ESelectMany::ESelectMany()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ESelectMany)
}

void ESelectMany::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ESelectMany::ESelectMany(const ESelectMany& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.ESelectMany)
}

void ESelectMany::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  isolate_ = false;
}

ESelectMany::~ESelectMany() {
  // @@protoc_insertion_point(destructor:y3d.ESelectMany)
  SharedDtor();
}

void ESelectMany::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ESelectMany::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ESelectMany::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ESelectMany_descriptor_;
}

const ESelectMany& ESelectMany::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

ESelectMany* ESelectMany::default_instance_ = NULL;

ESelectMany* ESelectMany::New(::google::protobuf::Arena* arena) const {
  ESelectMany* n = new ESelectMany;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ESelectMany::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ESelectMany)
  isolate_ = false;
  name_.Clear();
}

bool ESelectMany::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ESelectMany)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string name = 1;
      case 1: {
        if (tag == 10) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name(this->name_size() - 1).data(),
            this->name(this->name_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ESelectMany.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_name;
        if (input->ExpectTag(16)) goto parse_isolate;
        break;
      }

      // optional bool isolate = 2;
      case 2: {
        if (tag == 16) {
         parse_isolate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isolate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ESelectMany)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ESelectMany)
  return false;
#undef DO_
}

void ESelectMany::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ESelectMany)
  // repeated string name = 1;
  for (int i = 0; i < this->name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name(i).data(), this->name(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ESelectMany.name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(i), output);
  }

  // optional bool isolate = 2;
  if (this->isolate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isolate(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ESelectMany)
}

::google::protobuf::uint8* ESelectMany::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ESelectMany)
  // repeated string name = 1;
  for (int i = 0; i < this->name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name(i).data(), this->name(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ESelectMany.name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->name(i), target);
  }

  // optional bool isolate = 2;
  if (this->isolate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isolate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ESelectMany)
  return target;
}

int ESelectMany::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ESelectMany)
  int total_size = 0;

  // optional bool isolate = 2;
  if (this->isolate() != 0) {
    total_size += 1 + 1;
  }

  // repeated string name = 1;
  total_size += 1 * this->name_size();
  for (int i = 0; i < this->name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ESelectMany::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ESelectMany)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ESelectMany* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ESelectMany>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ESelectMany)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ESelectMany)
    MergeFrom(*source);
  }
}

void ESelectMany::MergeFrom(const ESelectMany& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ESelectMany)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  name_.MergeFrom(from.name_);
  if (from.isolate() != 0) {
    set_isolate(from.isolate());
  }
}

void ESelectMany::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ESelectMany)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ESelectMany::CopyFrom(const ESelectMany& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ESelectMany)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ESelectMany::IsInitialized() const {

  return true;
}

void ESelectMany::Swap(ESelectMany* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ESelectMany::InternalSwap(ESelectMany* other) {
  name_.UnsafeArenaSwap(&other->name_);
  std::swap(isolate_, other->isolate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ESelectMany::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ESelectMany_descriptor_;
  metadata.reflection = ESelectMany_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ESelectMany

// repeated string name = 1;
int ESelectMany::name_size() const {
  return name_.size();
}
void ESelectMany::clear_name() {
  name_.Clear();
}
 const ::std::string& ESelectMany::name(int index) const {
  // @@protoc_insertion_point(field_get:y3d.ESelectMany.name)
  return name_.Get(index);
}
 ::std::string* ESelectMany::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.ESelectMany.name)
  return name_.Mutable(index);
}
 void ESelectMany::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.ESelectMany.name)
  name_.Mutable(index)->assign(value);
}
 void ESelectMany::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.ESelectMany.name)
}
 void ESelectMany::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.ESelectMany.name)
}
 ::std::string* ESelectMany::add_name() {
  // @@protoc_insertion_point(field_add_mutable:y3d.ESelectMany.name)
  return name_.Add();
}
 void ESelectMany::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.ESelectMany.name)
}
 void ESelectMany::add_name(const char* value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.ESelectMany.name)
}
 void ESelectMany::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.ESelectMany.name)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
ESelectMany::name() const {
  // @@protoc_insertion_point(field_list:y3d.ESelectMany.name)
  return name_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
ESelectMany::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:y3d.ESelectMany.name)
  return &name_;
}

// optional bool isolate = 2;
void ESelectMany::clear_isolate() {
  isolate_ = false;
}
 bool ESelectMany::isolate() const {
  // @@protoc_insertion_point(field_get:y3d.ESelectMany.isolate)
  return isolate_;
}
 void ESelectMany::set_isolate(bool value) {
  
  isolate_ = value;
  // @@protoc_insertion_point(field_set:y3d.ESelectMany.isolate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EMove::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EMove::EMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EMove)
}

void EMove::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EMove::EMove(const EMove& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.EMove)
}

void EMove::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

EMove::~EMove() {
  // @@protoc_insertion_point(destructor:y3d.EMove)
  SharedDtor();
}

void EMove::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EMove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EMove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EMove_descriptor_;
}

const EMove& EMove::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

EMove* EMove::default_instance_ = NULL;

EMove* EMove::New(::google::protobuf::Arena* arena) const {
  EMove* n = new EMove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EMove::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EMove)
  point_.Clear();
}

bool EMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EMove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float point = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_point())));
        } else if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10, input, this->mutable_point())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EMove)
  return false;
#undef DO_
}

void EMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EMove)
  // repeated float point = 1;
  if (this->point_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_point_cached_byte_size_);
  }
  for (int i = 0; i < this->point_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->point(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.EMove)
}

::google::protobuf::uint8* EMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EMove)
  // repeated float point = 1;
  if (this->point_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _point_cached_byte_size_, target);
  }
  for (int i = 0; i < this->point_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->point(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.EMove)
  return target;
}

int EMove::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EMove)
  int total_size = 0;

  // repeated float point = 1;
  {
    int data_size = 0;
    data_size = 4 * this->point_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _point_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EMove)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EMove* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EMove)
    MergeFrom(*source);
  }
}

void EMove::MergeFrom(const EMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EMove)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  point_.MergeFrom(from.point_);
}

void EMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EMove::CopyFrom(const EMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EMove::IsInitialized() const {

  return true;
}

void EMove::Swap(EMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EMove::InternalSwap(EMove* other) {
  point_.UnsafeArenaSwap(&other->point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EMove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EMove_descriptor_;
  metadata.reflection = EMove_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EMove

// repeated float point = 1;
int EMove::point_size() const {
  return point_.size();
}
void EMove::clear_point() {
  point_.Clear();
}
 float EMove::point(int index) const {
  // @@protoc_insertion_point(field_get:y3d.EMove.point)
  return point_.Get(index);
}
 void EMove::set_point(int index, float value) {
  point_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.EMove.point)
}
 void EMove::add_point(float value) {
  point_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.EMove.point)
}
 const ::google::protobuf::RepeatedField< float >&
EMove::point() const {
  // @@protoc_insertion_point(field_list:y3d.EMove.point)
  return point_;
}
 ::google::protobuf::RepeatedField< float >*
EMove::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:y3d.EMove.point)
  return &point_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ERotate::kRotateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ERotate::ERotate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ERotate)
}

void ERotate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ERotate::ERotate(const ERotate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.ERotate)
}

void ERotate::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ERotate::~ERotate() {
  // @@protoc_insertion_point(destructor:y3d.ERotate)
  SharedDtor();
}

void ERotate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ERotate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ERotate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ERotate_descriptor_;
}

const ERotate& ERotate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

ERotate* ERotate::default_instance_ = NULL;

ERotate* ERotate::New(::google::protobuf::Arena* arena) const {
  ERotate* n = new ERotate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ERotate::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ERotate)
  rotate_.Clear();
}

bool ERotate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ERotate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float rotate = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rotate())));
        } else if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10, input, this->mutable_rotate())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ERotate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ERotate)
  return false;
#undef DO_
}

void ERotate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ERotate)
  // repeated float rotate = 1;
  if (this->rotate_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_rotate_cached_byte_size_);
  }
  for (int i = 0; i < this->rotate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->rotate(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ERotate)
}

::google::protobuf::uint8* ERotate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ERotate)
  // repeated float rotate = 1;
  if (this->rotate_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _rotate_cached_byte_size_, target);
  }
  for (int i = 0; i < this->rotate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->rotate(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ERotate)
  return target;
}

int ERotate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ERotate)
  int total_size = 0;

  // repeated float rotate = 1;
  {
    int data_size = 0;
    data_size = 4 * this->rotate_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rotate_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ERotate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ERotate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ERotate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ERotate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ERotate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ERotate)
    MergeFrom(*source);
  }
}

void ERotate::MergeFrom(const ERotate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ERotate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rotate_.MergeFrom(from.rotate_);
}

void ERotate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ERotate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ERotate::CopyFrom(const ERotate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ERotate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ERotate::IsInitialized() const {

  return true;
}

void ERotate::Swap(ERotate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ERotate::InternalSwap(ERotate* other) {
  rotate_.UnsafeArenaSwap(&other->rotate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ERotate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ERotate_descriptor_;
  metadata.reflection = ERotate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ERotate

// repeated float rotate = 1;
int ERotate::rotate_size() const {
  return rotate_.size();
}
void ERotate::clear_rotate() {
  rotate_.Clear();
}
 float ERotate::rotate(int index) const {
  // @@protoc_insertion_point(field_get:y3d.ERotate.rotate)
  return rotate_.Get(index);
}
 void ERotate::set_rotate(int index, float value) {
  rotate_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.ERotate.rotate)
}
 void ERotate::add_rotate(float value) {
  rotate_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.ERotate.rotate)
}
 const ::google::protobuf::RepeatedField< float >&
ERotate::rotate() const {
  // @@protoc_insertion_point(field_list:y3d.ERotate.rotate)
  return rotate_;
}
 ::google::protobuf::RepeatedField< float >*
ERotate::mutable_rotate() {
  // @@protoc_insertion_point(field_mutable_list:y3d.ERotate.rotate)
  return &rotate_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EDelete::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EDelete::EDelete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EDelete)
}

void EDelete::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EDelete::EDelete(const EDelete& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.EDelete)
}

void EDelete::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EDelete::~EDelete() {
  // @@protoc_insertion_point(destructor:y3d.EDelete)
  SharedDtor();
}

void EDelete::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EDelete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EDelete::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EDelete_descriptor_;
}

const EDelete& EDelete::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

EDelete* EDelete::default_instance_ = NULL;

EDelete* EDelete::New(::google::protobuf::Arena* arena) const {
  EDelete* n = new EDelete;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EDelete::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EDelete)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EDelete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EDelete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.EDelete.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EDelete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EDelete)
  return false;
#undef DO_
}

void EDelete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EDelete)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EDelete.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.EDelete)
}

::google::protobuf::uint8* EDelete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EDelete)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EDelete.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.EDelete)
  return target;
}

int EDelete::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EDelete)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EDelete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EDelete)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EDelete* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EDelete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EDelete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EDelete)
    MergeFrom(*source);
  }
}

void EDelete::MergeFrom(const EDelete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EDelete)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void EDelete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EDelete::CopyFrom(const EDelete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EDelete::IsInitialized() const {

  return true;
}

void EDelete::Swap(EDelete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EDelete::InternalSwap(EDelete* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EDelete::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EDelete_descriptor_;
  metadata.reflection = EDelete_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EDelete

// optional string name = 1;
void EDelete::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EDelete::name() const {
  // @@protoc_insertion_point(field_get:y3d.EDelete.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EDelete::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.EDelete.name)
}
 void EDelete::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.EDelete.name)
}
 void EDelete::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.EDelete.name)
}
 ::std::string* EDelete::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.EDelete.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EDelete::release_name() {
  // @@protoc_insertion_point(field_release:y3d.EDelete.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EDelete::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.EDelete.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EIsolate::kNameFieldNumber;
const int EIsolate::kEndIsolateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EIsolate::EIsolate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EIsolate)
}

void EIsolate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EIsolate::EIsolate(const EIsolate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.EIsolate)
}

void EIsolate::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endisolate_ = false;
}

EIsolate::~EIsolate() {
  // @@protoc_insertion_point(destructor:y3d.EIsolate)
  SharedDtor();
}

void EIsolate::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EIsolate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EIsolate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EIsolate_descriptor_;
}

const EIsolate& EIsolate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

EIsolate* EIsolate::default_instance_ = NULL;

EIsolate* EIsolate::New(::google::protobuf::Arena* arena) const {
  EIsolate* n = new EIsolate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EIsolate::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EIsolate)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endisolate_ = false;
}

bool EIsolate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EIsolate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.EIsolate.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_endIsolate;
        break;
      }

      // optional bool endIsolate = 2;
      case 2: {
        if (tag == 16) {
         parse_endIsolate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &endisolate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EIsolate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EIsolate)
  return false;
#undef DO_
}

void EIsolate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EIsolate)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EIsolate.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bool endIsolate = 2;
  if (this->endisolate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->endisolate(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.EIsolate)
}

::google::protobuf::uint8* EIsolate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EIsolate)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EIsolate.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bool endIsolate = 2;
  if (this->endisolate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->endisolate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.EIsolate)
  return target;
}

int EIsolate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EIsolate)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional bool endIsolate = 2;
  if (this->endisolate() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EIsolate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EIsolate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EIsolate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EIsolate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EIsolate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EIsolate)
    MergeFrom(*source);
  }
}

void EIsolate::MergeFrom(const EIsolate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EIsolate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.endisolate() != 0) {
    set_endisolate(from.endisolate());
  }
}

void EIsolate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EIsolate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EIsolate::CopyFrom(const EIsolate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EIsolate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EIsolate::IsInitialized() const {

  return true;
}

void EIsolate::Swap(EIsolate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EIsolate::InternalSwap(EIsolate* other) {
  name_.Swap(&other->name_);
  std::swap(endisolate_, other->endisolate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EIsolate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EIsolate_descriptor_;
  metadata.reflection = EIsolate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EIsolate

// optional string name = 1;
void EIsolate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EIsolate::name() const {
  // @@protoc_insertion_point(field_get:y3d.EIsolate.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EIsolate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.EIsolate.name)
}
 void EIsolate::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.EIsolate.name)
}
 void EIsolate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.EIsolate.name)
}
 ::std::string* EIsolate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.EIsolate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EIsolate::release_name() {
  // @@protoc_insertion_point(field_release:y3d.EIsolate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EIsolate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.EIsolate.name)
}

// optional bool endIsolate = 2;
void EIsolate::clear_endisolate() {
  endisolate_ = false;
}
 bool EIsolate::endisolate() const {
  // @@protoc_insertion_point(field_get:y3d.EIsolate.endIsolate)
  return endisolate_;
}
 void EIsolate::set_endisolate(bool value) {
  
  endisolate_ = value;
  // @@protoc_insertion_point(field_set:y3d.EIsolate.endIsolate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EUnwrap::kOnameFieldNumber;
const int EUnwrap::kChannelFieldNumber;
const int EUnwrap::kMax3DFieldNumber;
const int EUnwrap::kBlenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EUnwrap::EUnwrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EUnwrap)
}

void EUnwrap::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  EUnwrap_default_oneof_instance_->max3d_ = const_cast< ::y3d::MaxUnwrap*>(&::y3d::MaxUnwrap::default_instance());
  EUnwrap_default_oneof_instance_->blender_ = const_cast< ::y3d::BlenderUnwrap*>(&::y3d::BlenderUnwrap::default_instance());
}

EUnwrap::EUnwrap(const EUnwrap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.EUnwrap)
}

void EUnwrap::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  clear_has_setting();
}

EUnwrap::~EUnwrap() {
  // @@protoc_insertion_point(destructor:y3d.EUnwrap)
  SharedDtor();
}

void EUnwrap::SharedDtor() {
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_setting()) {
    clear_setting();
  }
  if (this != default_instance_) {
  }
}

void EUnwrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EUnwrap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EUnwrap_descriptor_;
}

const EUnwrap& EUnwrap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

EUnwrap* EUnwrap::default_instance_ = NULL;

EUnwrap* EUnwrap::New(::google::protobuf::Arena* arena) const {
  EUnwrap* n = new EUnwrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EUnwrap::clear_setting() {
// @@protoc_insertion_point(one_of_clear_start:y3d.EUnwrap)
  switch(setting_case()) {
    case kMax3D: {
      delete setting_.max3d_;
      break;
    }
    case kBlender: {
      delete setting_.blender_;
      break;
    }
    case SETTING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SETTING_NOT_SET;
}


void EUnwrap::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EUnwrap)
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  clear_setting();
}

bool EUnwrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EUnwrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string oname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.EUnwrap.oname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_channel;
        break;
      }

      // optional int32 channel = 2;
      case 2: {
        if (tag == 16) {
         parse_channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_max3d;
        break;
      }

      // optional .y3d.MaxUnwrap max3d = 3;
      case 3: {
        if (tag == 26) {
         parse_max3d:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_max3d()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_blender;
        break;
      }

      // optional .y3d.BlenderUnwrap blender = 4;
      case 4: {
        if (tag == 34) {
         parse_blender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blender()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EUnwrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EUnwrap)
  return false;
#undef DO_
}

void EUnwrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EUnwrap)
  // optional string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EUnwrap.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oname(), output);
  }

  // optional int32 channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  // optional .y3d.MaxUnwrap max3d = 3;
  if (has_max3d()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *setting_.max3d_, output);
  }

  // optional .y3d.BlenderUnwrap blender = 4;
  if (has_blender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *setting_.blender_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.EUnwrap)
}

::google::protobuf::uint8* EUnwrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EUnwrap)
  // optional string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EUnwrap.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oname(), target);
  }

  // optional int32 channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  // optional .y3d.MaxUnwrap max3d = 3;
  if (has_max3d()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *setting_.max3d_, false, target);
  }

  // optional .y3d.BlenderUnwrap blender = 4;
  if (has_blender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *setting_.blender_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.EUnwrap)
  return target;
}

int EUnwrap::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EUnwrap)
  int total_size = 0;

  // optional string oname = 1;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  // optional int32 channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  switch (setting_case()) {
    // optional .y3d.MaxUnwrap max3d = 3;
    case kMax3D: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *setting_.max3d_);
      break;
    }
    // optional .y3d.BlenderUnwrap blender = 4;
    case kBlender: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *setting_.blender_);
      break;
    }
    case SETTING_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EUnwrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EUnwrap)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EUnwrap* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EUnwrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EUnwrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EUnwrap)
    MergeFrom(*source);
  }
}

void EUnwrap::MergeFrom(const EUnwrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EUnwrap)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.setting_case()) {
    case kMax3D: {
      mutable_max3d()->::y3d::MaxUnwrap::MergeFrom(from.max3d());
      break;
    }
    case kBlender: {
      mutable_blender()->::y3d::BlenderUnwrap::MergeFrom(from.blender());
      break;
    }
    case SETTING_NOT_SET: {
      break;
    }
  }
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void EUnwrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EUnwrap::CopyFrom(const EUnwrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EUnwrap::IsInitialized() const {

  return true;
}

void EUnwrap::Swap(EUnwrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EUnwrap::InternalSwap(EUnwrap* other) {
  oname_.Swap(&other->oname_);
  std::swap(channel_, other->channel_);
  std::swap(setting_, other->setting_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EUnwrap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EUnwrap_descriptor_;
  metadata.reflection = EUnwrap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EUnwrap

// optional string oname = 1;
void EUnwrap::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EUnwrap::oname() const {
  // @@protoc_insertion_point(field_get:y3d.EUnwrap.oname)
  return oname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EUnwrap::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.EUnwrap.oname)
}
 void EUnwrap::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.EUnwrap.oname)
}
 void EUnwrap::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.EUnwrap.oname)
}
 ::std::string* EUnwrap::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.EUnwrap.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EUnwrap::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.EUnwrap.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EUnwrap::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.EUnwrap.oname)
}

// optional int32 channel = 2;
void EUnwrap::clear_channel() {
  channel_ = 0;
}
 ::google::protobuf::int32 EUnwrap::channel() const {
  // @@protoc_insertion_point(field_get:y3d.EUnwrap.channel)
  return channel_;
}
 void EUnwrap::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:y3d.EUnwrap.channel)
}

// optional .y3d.MaxUnwrap max3d = 3;
bool EUnwrap::has_max3d() const {
  return setting_case() == kMax3D;
}
void EUnwrap::set_has_max3d() {
  _oneof_case_[0] = kMax3D;
}
void EUnwrap::clear_max3d() {
  if (has_max3d()) {
    delete setting_.max3d_;
    clear_has_setting();
  }
}
 const ::y3d::MaxUnwrap& EUnwrap::max3d() const {
  // @@protoc_insertion_point(field_get:y3d.EUnwrap.max3d)
  return has_max3d()
      ? *setting_.max3d_
      : ::y3d::MaxUnwrap::default_instance();
}
::y3d::MaxUnwrap* EUnwrap::mutable_max3d() {
  if (!has_max3d()) {
    clear_setting();
    set_has_max3d();
    setting_.max3d_ = new ::y3d::MaxUnwrap;
  }
  // @@protoc_insertion_point(field_mutable:y3d.EUnwrap.max3d)
  return setting_.max3d_;
}
::y3d::MaxUnwrap* EUnwrap::release_max3d() {
  // @@protoc_insertion_point(field_release:y3d.EUnwrap.max3d)
  if (has_max3d()) {
    clear_has_setting();
    ::y3d::MaxUnwrap* temp = setting_.max3d_;
    setting_.max3d_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void EUnwrap::set_allocated_max3d(::y3d::MaxUnwrap* max3d) {
  clear_setting();
  if (max3d) {
    set_has_max3d();
    setting_.max3d_ = max3d;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.EUnwrap.max3d)
}

// optional .y3d.BlenderUnwrap blender = 4;
bool EUnwrap::has_blender() const {
  return setting_case() == kBlender;
}
void EUnwrap::set_has_blender() {
  _oneof_case_[0] = kBlender;
}
void EUnwrap::clear_blender() {
  if (has_blender()) {
    delete setting_.blender_;
    clear_has_setting();
  }
}
 const ::y3d::BlenderUnwrap& EUnwrap::blender() const {
  // @@protoc_insertion_point(field_get:y3d.EUnwrap.blender)
  return has_blender()
      ? *setting_.blender_
      : ::y3d::BlenderUnwrap::default_instance();
}
::y3d::BlenderUnwrap* EUnwrap::mutable_blender() {
  if (!has_blender()) {
    clear_setting();
    set_has_blender();
    setting_.blender_ = new ::y3d::BlenderUnwrap;
  }
  // @@protoc_insertion_point(field_mutable:y3d.EUnwrap.blender)
  return setting_.blender_;
}
::y3d::BlenderUnwrap* EUnwrap::release_blender() {
  // @@protoc_insertion_point(field_release:y3d.EUnwrap.blender)
  if (has_blender()) {
    clear_has_setting();
    ::y3d::BlenderUnwrap* temp = setting_.blender_;
    setting_.blender_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void EUnwrap::set_allocated_blender(::y3d::BlenderUnwrap* blender) {
  clear_setting();
  if (blender) {
    set_has_blender();
    setting_.blender_ = blender;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.EUnwrap.blender)
}

bool EUnwrap::has_setting() const {
  return setting_case() != SETTING_NOT_SET;
}
void EUnwrap::clear_has_setting() {
  _oneof_case_[0] = SETTING_NOT_SET;
}
EUnwrap::SettingCase EUnwrap::setting_case() const {
  return EUnwrap::SettingCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlenderUnwrap::BlenderUnwrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.BlenderUnwrap)
}

void BlenderUnwrap::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BlenderUnwrap::BlenderUnwrap(const BlenderUnwrap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.BlenderUnwrap)
}

void BlenderUnwrap::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

BlenderUnwrap::~BlenderUnwrap() {
  // @@protoc_insertion_point(destructor:y3d.BlenderUnwrap)
  SharedDtor();
}

void BlenderUnwrap::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BlenderUnwrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlenderUnwrap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlenderUnwrap_descriptor_;
}

const BlenderUnwrap& BlenderUnwrap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

BlenderUnwrap* BlenderUnwrap::default_instance_ = NULL;

BlenderUnwrap* BlenderUnwrap::New(::google::protobuf::Arena* arena) const {
  BlenderUnwrap* n = new BlenderUnwrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlenderUnwrap::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.BlenderUnwrap)
}

bool BlenderUnwrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.BlenderUnwrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.BlenderUnwrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.BlenderUnwrap)
  return false;
#undef DO_
}

void BlenderUnwrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.BlenderUnwrap)
  // @@protoc_insertion_point(serialize_end:y3d.BlenderUnwrap)
}

::google::protobuf::uint8* BlenderUnwrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.BlenderUnwrap)
  // @@protoc_insertion_point(serialize_to_array_end:y3d.BlenderUnwrap)
  return target;
}

int BlenderUnwrap::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.BlenderUnwrap)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlenderUnwrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.BlenderUnwrap)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BlenderUnwrap* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BlenderUnwrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.BlenderUnwrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.BlenderUnwrap)
    MergeFrom(*source);
  }
}

void BlenderUnwrap::MergeFrom(const BlenderUnwrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.BlenderUnwrap)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void BlenderUnwrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.BlenderUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlenderUnwrap::CopyFrom(const BlenderUnwrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.BlenderUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlenderUnwrap::IsInitialized() const {

  return true;
}

void BlenderUnwrap::Swap(BlenderUnwrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlenderUnwrap::InternalSwap(BlenderUnwrap* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlenderUnwrap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlenderUnwrap_descriptor_;
  metadata.reflection = BlenderUnwrap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlenderUnwrap

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaxUnwrap::kAngleFieldNumber;
const int MaxUnwrap::kSpacingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaxUnwrap::MaxUnwrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.MaxUnwrap)
}

void MaxUnwrap::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MaxUnwrap::MaxUnwrap(const MaxUnwrap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.MaxUnwrap)
}

void MaxUnwrap::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  angle_ = 0;
  spacing_ = 0;
}

MaxUnwrap::~MaxUnwrap() {
  // @@protoc_insertion_point(destructor:y3d.MaxUnwrap)
  SharedDtor();
}

void MaxUnwrap::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MaxUnwrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaxUnwrap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MaxUnwrap_descriptor_;
}

const MaxUnwrap& MaxUnwrap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

MaxUnwrap* MaxUnwrap::default_instance_ = NULL;

MaxUnwrap* MaxUnwrap::New(::google::protobuf::Arena* arena) const {
  MaxUnwrap* n = new MaxUnwrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MaxUnwrap::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.MaxUnwrap)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MaxUnwrap, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MaxUnwrap*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(angle_, spacing_);

#undef ZR_HELPER_
#undef ZR_

}

bool MaxUnwrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.MaxUnwrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float angle = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_spacing;
        break;
      }

      // optional float spacing = 2;
      case 2: {
        if (tag == 21) {
         parse_spacing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &spacing_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.MaxUnwrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.MaxUnwrap)
  return false;
#undef DO_
}

void MaxUnwrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.MaxUnwrap)
  // optional float angle = 1;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->angle(), output);
  }

  // optional float spacing = 2;
  if (this->spacing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->spacing(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.MaxUnwrap)
}

::google::protobuf::uint8* MaxUnwrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.MaxUnwrap)
  // optional float angle = 1;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->angle(), target);
  }

  // optional float spacing = 2;
  if (this->spacing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->spacing(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.MaxUnwrap)
  return target;
}

int MaxUnwrap::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.MaxUnwrap)
  int total_size = 0;

  // optional float angle = 1;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // optional float spacing = 2;
  if (this->spacing() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaxUnwrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.MaxUnwrap)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MaxUnwrap* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MaxUnwrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.MaxUnwrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.MaxUnwrap)
    MergeFrom(*source);
  }
}

void MaxUnwrap::MergeFrom(const MaxUnwrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.MaxUnwrap)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.spacing() != 0) {
    set_spacing(from.spacing());
  }
}

void MaxUnwrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.MaxUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaxUnwrap::CopyFrom(const MaxUnwrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.MaxUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaxUnwrap::IsInitialized() const {

  return true;
}

void MaxUnwrap::Swap(MaxUnwrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaxUnwrap::InternalSwap(MaxUnwrap* other) {
  std::swap(angle_, other->angle_);
  std::swap(spacing_, other->spacing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MaxUnwrap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MaxUnwrap_descriptor_;
  metadata.reflection = MaxUnwrap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MaxUnwrap

// optional float angle = 1;
void MaxUnwrap::clear_angle() {
  angle_ = 0;
}
 float MaxUnwrap::angle() const {
  // @@protoc_insertion_point(field_get:y3d.MaxUnwrap.angle)
  return angle_;
}
 void MaxUnwrap::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:y3d.MaxUnwrap.angle)
}

// optional float spacing = 2;
void MaxUnwrap::clear_spacing() {
  spacing_ = 0;
}
 float MaxUnwrap::spacing() const {
  // @@protoc_insertion_point(field_get:y3d.MaxUnwrap.spacing)
  return spacing_;
}
 void MaxUnwrap::set_spacing(float value) {
  
  spacing_ = value;
  // @@protoc_insertion_point(field_set:y3d.MaxUnwrap.spacing)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EPacking::kOnameFieldNumber;
const int EPacking::kUvnameFieldNumber;
const int EPacking::kTileSizeFieldNumber;
const int EPacking::kPackmaxFieldNumber;
const int EPacking::kPackrectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EPacking::EPacking()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EPacking)
}

void EPacking::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  EPacking_default_oneof_instance_->packmax_ = const_cast< ::y3d::Pack3DMax*>(&::y3d::Pack3DMax::default_instance());
  EPacking_default_oneof_instance_->packrect_ = const_cast< ::y3d::PackRect*>(&::y3d::PackRect::default_instance());
}

EPacking::EPacking(const EPacking& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.EPacking)
}

void EPacking::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uvname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tile_size_ = 0;
  clear_has_pack();
}

EPacking::~EPacking() {
  // @@protoc_insertion_point(destructor:y3d.EPacking)
  SharedDtor();
}

void EPacking::SharedDtor() {
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uvname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_pack()) {
    clear_pack();
  }
  if (this != default_instance_) {
  }
}

void EPacking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EPacking::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EPacking_descriptor_;
}

const EPacking& EPacking::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

EPacking* EPacking::default_instance_ = NULL;

EPacking* EPacking::New(::google::protobuf::Arena* arena) const {
  EPacking* n = new EPacking;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EPacking::clear_pack() {
// @@protoc_insertion_point(one_of_clear_start:y3d.EPacking)
  switch(pack_case()) {
    case kPackmax: {
      delete pack_.packmax_;
      break;
    }
    case kPackrect: {
      delete pack_.packrect_;
      break;
    }
    case PACK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PACK_NOT_SET;
}


void EPacking::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EPacking)
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uvname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tile_size_ = 0;
  clear_pack();
}

bool EPacking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EPacking)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string oname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.EPacking.oname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_uvname;
        break;
      }

      // optional string uvname = 2;
      case 2: {
        if (tag == 18) {
         parse_uvname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uvname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uvname().data(), this->uvname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.EPacking.uvname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tile_Size;
        break;
      }

      // optional int32 tile_Size = 3;
      case 3: {
        if (tag == 24) {
         parse_tile_Size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tile_size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_packmax;
        break;
      }

      // optional .y3d.Pack3DMax packmax = 4;
      case 4: {
        if (tag == 34) {
         parse_packmax:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_packmax()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_packrect;
        break;
      }

      // optional .y3d.PackRect packrect = 5;
      case 5: {
        if (tag == 42) {
         parse_packrect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_packrect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EPacking)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EPacking)
  return false;
#undef DO_
}

void EPacking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EPacking)
  // optional string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EPacking.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oname(), output);
  }

  // optional string uvname = 2;
  if (this->uvname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uvname().data(), this->uvname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EPacking.uvname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uvname(), output);
  }

  // optional int32 tile_Size = 3;
  if (this->tile_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tile_size(), output);
  }

  // optional .y3d.Pack3DMax packmax = 4;
  if (has_packmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *pack_.packmax_, output);
  }

  // optional .y3d.PackRect packrect = 5;
  if (has_packrect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *pack_.packrect_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.EPacking)
}

::google::protobuf::uint8* EPacking::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EPacking)
  // optional string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EPacking.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oname(), target);
  }

  // optional string uvname = 2;
  if (this->uvname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uvname().data(), this->uvname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EPacking.uvname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uvname(), target);
  }

  // optional int32 tile_Size = 3;
  if (this->tile_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tile_size(), target);
  }

  // optional .y3d.Pack3DMax packmax = 4;
  if (has_packmax()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *pack_.packmax_, false, target);
  }

  // optional .y3d.PackRect packrect = 5;
  if (has_packrect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *pack_.packrect_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.EPacking)
  return target;
}

int EPacking::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EPacking)
  int total_size = 0;

  // optional string oname = 1;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  // optional string uvname = 2;
  if (this->uvname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uvname());
  }

  // optional int32 tile_Size = 3;
  if (this->tile_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tile_size());
  }

  switch (pack_case()) {
    // optional .y3d.Pack3DMax packmax = 4;
    case kPackmax: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *pack_.packmax_);
      break;
    }
    // optional .y3d.PackRect packrect = 5;
    case kPackrect: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *pack_.packrect_);
      break;
    }
    case PACK_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EPacking::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EPacking)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EPacking* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EPacking>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EPacking)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EPacking)
    MergeFrom(*source);
  }
}

void EPacking::MergeFrom(const EPacking& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EPacking)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.pack_case()) {
    case kPackmax: {
      mutable_packmax()->::y3d::Pack3DMax::MergeFrom(from.packmax());
      break;
    }
    case kPackrect: {
      mutable_packrect()->::y3d::PackRect::MergeFrom(from.packrect());
      break;
    }
    case PACK_NOT_SET: {
      break;
    }
  }
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  if (from.uvname().size() > 0) {

    uvname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uvname_);
  }
  if (from.tile_size() != 0) {
    set_tile_size(from.tile_size());
  }
}

void EPacking::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EPacking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EPacking::CopyFrom(const EPacking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EPacking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EPacking::IsInitialized() const {

  return true;
}

void EPacking::Swap(EPacking* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EPacking::InternalSwap(EPacking* other) {
  oname_.Swap(&other->oname_);
  uvname_.Swap(&other->uvname_);
  std::swap(tile_size_, other->tile_size_);
  std::swap(pack_, other->pack_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EPacking::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EPacking_descriptor_;
  metadata.reflection = EPacking_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EPacking

// optional string oname = 1;
void EPacking::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EPacking::oname() const {
  // @@protoc_insertion_point(field_get:y3d.EPacking.oname)
  return oname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EPacking::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.EPacking.oname)
}
 void EPacking::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.EPacking.oname)
}
 void EPacking::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.EPacking.oname)
}
 ::std::string* EPacking::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.EPacking.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EPacking::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.EPacking.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EPacking::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.EPacking.oname)
}

// optional string uvname = 2;
void EPacking::clear_uvname() {
  uvname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EPacking::uvname() const {
  // @@protoc_insertion_point(field_get:y3d.EPacking.uvname)
  return uvname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EPacking::set_uvname(const ::std::string& value) {
  
  uvname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.EPacking.uvname)
}
 void EPacking::set_uvname(const char* value) {
  
  uvname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.EPacking.uvname)
}
 void EPacking::set_uvname(const char* value, size_t size) {
  
  uvname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.EPacking.uvname)
}
 ::std::string* EPacking::mutable_uvname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.EPacking.uvname)
  return uvname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EPacking::release_uvname() {
  // @@protoc_insertion_point(field_release:y3d.EPacking.uvname)
  
  return uvname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EPacking::set_allocated_uvname(::std::string* uvname) {
  if (uvname != NULL) {
    
  } else {
    
  }
  uvname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uvname);
  // @@protoc_insertion_point(field_set_allocated:y3d.EPacking.uvname)
}

// optional int32 tile_Size = 3;
void EPacking::clear_tile_size() {
  tile_size_ = 0;
}
 ::google::protobuf::int32 EPacking::tile_size() const {
  // @@protoc_insertion_point(field_get:y3d.EPacking.tile_Size)
  return tile_size_;
}
 void EPacking::set_tile_size(::google::protobuf::int32 value) {
  
  tile_size_ = value;
  // @@protoc_insertion_point(field_set:y3d.EPacking.tile_Size)
}

// optional .y3d.Pack3DMax packmax = 4;
bool EPacking::has_packmax() const {
  return pack_case() == kPackmax;
}
void EPacking::set_has_packmax() {
  _oneof_case_[0] = kPackmax;
}
void EPacking::clear_packmax() {
  if (has_packmax()) {
    delete pack_.packmax_;
    clear_has_pack();
  }
}
 const ::y3d::Pack3DMax& EPacking::packmax() const {
  // @@protoc_insertion_point(field_get:y3d.EPacking.packmax)
  return has_packmax()
      ? *pack_.packmax_
      : ::y3d::Pack3DMax::default_instance();
}
::y3d::Pack3DMax* EPacking::mutable_packmax() {
  if (!has_packmax()) {
    clear_pack();
    set_has_packmax();
    pack_.packmax_ = new ::y3d::Pack3DMax;
  }
  // @@protoc_insertion_point(field_mutable:y3d.EPacking.packmax)
  return pack_.packmax_;
}
::y3d::Pack3DMax* EPacking::release_packmax() {
  // @@protoc_insertion_point(field_release:y3d.EPacking.packmax)
  if (has_packmax()) {
    clear_has_pack();
    ::y3d::Pack3DMax* temp = pack_.packmax_;
    pack_.packmax_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void EPacking::set_allocated_packmax(::y3d::Pack3DMax* packmax) {
  clear_pack();
  if (packmax) {
    set_has_packmax();
    pack_.packmax_ = packmax;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.EPacking.packmax)
}

// optional .y3d.PackRect packrect = 5;
bool EPacking::has_packrect() const {
  return pack_case() == kPackrect;
}
void EPacking::set_has_packrect() {
  _oneof_case_[0] = kPackrect;
}
void EPacking::clear_packrect() {
  if (has_packrect()) {
    delete pack_.packrect_;
    clear_has_pack();
  }
}
 const ::y3d::PackRect& EPacking::packrect() const {
  // @@protoc_insertion_point(field_get:y3d.EPacking.packrect)
  return has_packrect()
      ? *pack_.packrect_
      : ::y3d::PackRect::default_instance();
}
::y3d::PackRect* EPacking::mutable_packrect() {
  if (!has_packrect()) {
    clear_pack();
    set_has_packrect();
    pack_.packrect_ = new ::y3d::PackRect;
  }
  // @@protoc_insertion_point(field_mutable:y3d.EPacking.packrect)
  return pack_.packrect_;
}
::y3d::PackRect* EPacking::release_packrect() {
  // @@protoc_insertion_point(field_release:y3d.EPacking.packrect)
  if (has_packrect()) {
    clear_has_pack();
    ::y3d::PackRect* temp = pack_.packrect_;
    pack_.packrect_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void EPacking::set_allocated_packrect(::y3d::PackRect* packrect) {
  clear_pack();
  if (packrect) {
    set_has_packrect();
    pack_.packrect_ = packrect;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.EPacking.packrect)
}

bool EPacking::has_pack() const {
  return pack_case() != PACK_NOT_SET;
}
void EPacking::clear_has_pack() {
  _oneof_case_[0] = PACK_NOT_SET;
}
EPacking::PackCase EPacking::pack_case() const {
  return EPacking::PackCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackRect::kDensityFieldNumber;
const int PackRect::kPaddingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackRect::PackRect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.PackRect)
}

void PackRect::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackRect::PackRect(const PackRect& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.PackRect)
}

void PackRect::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  density_ = 0;
  padding_ = 0;
}

PackRect::~PackRect() {
  // @@protoc_insertion_point(destructor:y3d.PackRect)
  SharedDtor();
}

void PackRect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackRect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackRect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackRect_descriptor_;
}

const PackRect& PackRect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

PackRect* PackRect::default_instance_ = NULL;

PackRect* PackRect::New(::google::protobuf::Arena* arena) const {
  PackRect* n = new PackRect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackRect::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.PackRect)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PackRect, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PackRect*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(density_, padding_);

#undef ZR_HELPER_
#undef ZR_

}

bool PackRect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.PackRect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 density = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &density_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_padding;
        break;
      }

      // optional float padding = 2;
      case 2: {
        if (tag == 21) {
         parse_padding:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &padding_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.PackRect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.PackRect)
  return false;
#undef DO_
}

void PackRect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.PackRect)
  // optional int32 density = 1;
  if (this->density() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->density(), output);
  }

  // optional float padding = 2;
  if (this->padding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->padding(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.PackRect)
}

::google::protobuf::uint8* PackRect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.PackRect)
  // optional int32 density = 1;
  if (this->density() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->density(), target);
  }

  // optional float padding = 2;
  if (this->padding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->padding(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.PackRect)
  return target;
}

int PackRect::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.PackRect)
  int total_size = 0;

  // optional int32 density = 1;
  if (this->density() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->density());
  }

  // optional float padding = 2;
  if (this->padding() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackRect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.PackRect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PackRect* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackRect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.PackRect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.PackRect)
    MergeFrom(*source);
  }
}

void PackRect::MergeFrom(const PackRect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.PackRect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.density() != 0) {
    set_density(from.density());
  }
  if (from.padding() != 0) {
    set_padding(from.padding());
  }
}

void PackRect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.PackRect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackRect::CopyFrom(const PackRect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.PackRect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackRect::IsInitialized() const {

  return true;
}

void PackRect::Swap(PackRect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackRect::InternalSwap(PackRect* other) {
  std::swap(density_, other->density_);
  std::swap(padding_, other->padding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackRect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackRect_descriptor_;
  metadata.reflection = PackRect_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackRect

// optional int32 density = 1;
void PackRect::clear_density() {
  density_ = 0;
}
 ::google::protobuf::int32 PackRect::density() const {
  // @@protoc_insertion_point(field_get:y3d.PackRect.density)
  return density_;
}
 void PackRect::set_density(::google::protobuf::int32 value) {
  
  density_ = value;
  // @@protoc_insertion_point(field_set:y3d.PackRect.density)
}

// optional float padding = 2;
void PackRect::clear_padding() {
  padding_ = 0;
}
 float PackRect::padding() const {
  // @@protoc_insertion_point(field_get:y3d.PackRect.padding)
  return padding_;
}
 void PackRect::set_padding(float value) {
  
  padding_ = value;
  // @@protoc_insertion_point(field_set:y3d.PackRect.padding)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pack3DMax::kNumTileFieldNumber;
const int Pack3DMax::kNormalizeFieldNumber;
const int Pack3DMax::kRotateClustersFieldNumber;
const int Pack3DMax::kFillHolesFieldNumber;
const int Pack3DMax::kPaddingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pack3DMax::Pack3DMax()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.Pack3DMax)
}

void Pack3DMax::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Pack3DMax::Pack3DMax(const Pack3DMax& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.Pack3DMax)
}

void Pack3DMax::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  numtile_ = 0;
  normalize_ = false;
  rotate_clusters_ = false;
  fill_holes_ = false;
  padding_ = false;
}

Pack3DMax::~Pack3DMax() {
  // @@protoc_insertion_point(destructor:y3d.Pack3DMax)
  SharedDtor();
}

void Pack3DMax::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Pack3DMax::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pack3DMax::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Pack3DMax_descriptor_;
}

const Pack3DMax& Pack3DMax::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

Pack3DMax* Pack3DMax::default_instance_ = NULL;

Pack3DMax* Pack3DMax::New(::google::protobuf::Arena* arena) const {
  Pack3DMax* n = new Pack3DMax;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pack3DMax::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.Pack3DMax)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Pack3DMax, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Pack3DMax*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(numtile_, padding_);

#undef ZR_HELPER_
#undef ZR_

}

bool Pack3DMax::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.Pack3DMax)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 numTile = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numtile_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_normalize;
        break;
      }

      // optional bool normalize = 2;
      case 2: {
        if (tag == 16) {
         parse_normalize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &normalize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rotate_clusters;
        break;
      }

      // optional bool rotate_clusters = 3;
      case 3: {
        if (tag == 24) {
         parse_rotate_clusters:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rotate_clusters_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_fill_holes;
        break;
      }

      // optional bool fill_holes = 4;
      case 4: {
        if (tag == 32) {
         parse_fill_holes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fill_holes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_padding;
        break;
      }

      // optional bool padding = 5;
      case 5: {
        if (tag == 40) {
         parse_padding:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &padding_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.Pack3DMax)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.Pack3DMax)
  return false;
#undef DO_
}

void Pack3DMax::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.Pack3DMax)
  // optional int32 numTile = 1;
  if (this->numtile() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->numtile(), output);
  }

  // optional bool normalize = 2;
  if (this->normalize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->normalize(), output);
  }

  // optional bool rotate_clusters = 3;
  if (this->rotate_clusters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->rotate_clusters(), output);
  }

  // optional bool fill_holes = 4;
  if (this->fill_holes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->fill_holes(), output);
  }

  // optional bool padding = 5;
  if (this->padding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->padding(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.Pack3DMax)
}

::google::protobuf::uint8* Pack3DMax::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.Pack3DMax)
  // optional int32 numTile = 1;
  if (this->numtile() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->numtile(), target);
  }

  // optional bool normalize = 2;
  if (this->normalize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->normalize(), target);
  }

  // optional bool rotate_clusters = 3;
  if (this->rotate_clusters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->rotate_clusters(), target);
  }

  // optional bool fill_holes = 4;
  if (this->fill_holes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->fill_holes(), target);
  }

  // optional bool padding = 5;
  if (this->padding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->padding(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.Pack3DMax)
  return target;
}

int Pack3DMax::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.Pack3DMax)
  int total_size = 0;

  // optional int32 numTile = 1;
  if (this->numtile() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numtile());
  }

  // optional bool normalize = 2;
  if (this->normalize() != 0) {
    total_size += 1 + 1;
  }

  // optional bool rotate_clusters = 3;
  if (this->rotate_clusters() != 0) {
    total_size += 1 + 1;
  }

  // optional bool fill_holes = 4;
  if (this->fill_holes() != 0) {
    total_size += 1 + 1;
  }

  // optional bool padding = 5;
  if (this->padding() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pack3DMax::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.Pack3DMax)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Pack3DMax* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Pack3DMax>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.Pack3DMax)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.Pack3DMax)
    MergeFrom(*source);
  }
}

void Pack3DMax::MergeFrom(const Pack3DMax& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.Pack3DMax)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.numtile() != 0) {
    set_numtile(from.numtile());
  }
  if (from.normalize() != 0) {
    set_normalize(from.normalize());
  }
  if (from.rotate_clusters() != 0) {
    set_rotate_clusters(from.rotate_clusters());
  }
  if (from.fill_holes() != 0) {
    set_fill_holes(from.fill_holes());
  }
  if (from.padding() != 0) {
    set_padding(from.padding());
  }
}

void Pack3DMax::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.Pack3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pack3DMax::CopyFrom(const Pack3DMax& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.Pack3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pack3DMax::IsInitialized() const {

  return true;
}

void Pack3DMax::Swap(Pack3DMax* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pack3DMax::InternalSwap(Pack3DMax* other) {
  std::swap(numtile_, other->numtile_);
  std::swap(normalize_, other->normalize_);
  std::swap(rotate_clusters_, other->rotate_clusters_);
  std::swap(fill_holes_, other->fill_holes_);
  std::swap(padding_, other->padding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pack3DMax::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Pack3DMax_descriptor_;
  metadata.reflection = Pack3DMax_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pack3DMax

// optional int32 numTile = 1;
void Pack3DMax::clear_numtile() {
  numtile_ = 0;
}
 ::google::protobuf::int32 Pack3DMax::numtile() const {
  // @@protoc_insertion_point(field_get:y3d.Pack3DMax.numTile)
  return numtile_;
}
 void Pack3DMax::set_numtile(::google::protobuf::int32 value) {
  
  numtile_ = value;
  // @@protoc_insertion_point(field_set:y3d.Pack3DMax.numTile)
}

// optional bool normalize = 2;
void Pack3DMax::clear_normalize() {
  normalize_ = false;
}
 bool Pack3DMax::normalize() const {
  // @@protoc_insertion_point(field_get:y3d.Pack3DMax.normalize)
  return normalize_;
}
 void Pack3DMax::set_normalize(bool value) {
  
  normalize_ = value;
  // @@protoc_insertion_point(field_set:y3d.Pack3DMax.normalize)
}

// optional bool rotate_clusters = 3;
void Pack3DMax::clear_rotate_clusters() {
  rotate_clusters_ = false;
}
 bool Pack3DMax::rotate_clusters() const {
  // @@protoc_insertion_point(field_get:y3d.Pack3DMax.rotate_clusters)
  return rotate_clusters_;
}
 void Pack3DMax::set_rotate_clusters(bool value) {
  
  rotate_clusters_ = value;
  // @@protoc_insertion_point(field_set:y3d.Pack3DMax.rotate_clusters)
}

// optional bool fill_holes = 4;
void Pack3DMax::clear_fill_holes() {
  fill_holes_ = false;
}
 bool Pack3DMax::fill_holes() const {
  // @@protoc_insertion_point(field_get:y3d.Pack3DMax.fill_holes)
  return fill_holes_;
}
 void Pack3DMax::set_fill_holes(bool value) {
  
  fill_holes_ = value;
  // @@protoc_insertion_point(field_set:y3d.Pack3DMax.fill_holes)
}

// optional bool padding = 5;
void Pack3DMax::clear_padding() {
  padding_ = false;
}
 bool Pack3DMax::padding() const {
  // @@protoc_insertion_point(field_get:y3d.Pack3DMax.padding)
  return padding_;
}
 void Pack3DMax::set_padding(bool value) {
  
  padding_ = value;
  // @@protoc_insertion_point(field_set:y3d.Pack3DMax.padding)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ELowpoly::kOnameFieldNumber;
const int ELowpoly::kLp3DmaxFieldNumber;
const int ELowpoly::kLpBlenderFieldNumber;
const int ELowpoly::kLpMeshlabFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ELowpoly::ELowpoly()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ELowpoly)
}

void ELowpoly::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  ELowpoly_default_oneof_instance_->lp_3dmax_ = const_cast< ::y3d::LPoly3DMax*>(&::y3d::LPoly3DMax::default_instance());
  ELowpoly_default_oneof_instance_->lp_blender_ = const_cast< ::y3d::LPolyBlender*>(&::y3d::LPolyBlender::default_instance());
  ELowpoly_default_oneof_instance_->lp_meshlab_ = const_cast< ::y3d::LPolyMeshlab*>(&::y3d::LPolyMeshlab::default_instance());
}

ELowpoly::ELowpoly(const ELowpoly& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.ELowpoly)
}

void ELowpoly::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lowtype();
}

ELowpoly::~ELowpoly() {
  // @@protoc_insertion_point(destructor:y3d.ELowpoly)
  SharedDtor();
}

void ELowpoly::SharedDtor() {
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_lowtype()) {
    clear_lowtype();
  }
  if (this != default_instance_) {
  }
}

void ELowpoly::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ELowpoly::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ELowpoly_descriptor_;
}

const ELowpoly& ELowpoly::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

ELowpoly* ELowpoly::default_instance_ = NULL;

ELowpoly* ELowpoly::New(::google::protobuf::Arena* arena) const {
  ELowpoly* n = new ELowpoly;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ELowpoly::clear_lowtype() {
// @@protoc_insertion_point(one_of_clear_start:y3d.ELowpoly)
  switch(lowtype_case()) {
    case kLp3Dmax: {
      delete lowtype_.lp_3dmax_;
      break;
    }
    case kLpBlender: {
      delete lowtype_.lp_blender_;
      break;
    }
    case kLpMeshlab: {
      delete lowtype_.lp_meshlab_;
      break;
    }
    case LOWTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = LOWTYPE_NOT_SET;
}


void ELowpoly::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ELowpoly)
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_lowtype();
}

bool ELowpoly::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ELowpoly)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string oname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ELowpoly.oname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_lp_3dmax;
        break;
      }

      // optional .y3d.LPoly3DMax lp_3dmax = 2;
      case 2: {
        if (tag == 18) {
         parse_lp_3dmax:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lp_3dmax()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_lp_blender;
        break;
      }

      // optional .y3d.LPolyBlender lp_blender = 3;
      case 3: {
        if (tag == 26) {
         parse_lp_blender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lp_blender()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_lp_meshlab;
        break;
      }

      // optional .y3d.LPolyMeshlab lp_meshlab = 4;
      case 4: {
        if (tag == 34) {
         parse_lp_meshlab:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lp_meshlab()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ELowpoly)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ELowpoly)
  return false;
#undef DO_
}

void ELowpoly::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ELowpoly)
  // optional string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ELowpoly.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oname(), output);
  }

  // optional .y3d.LPoly3DMax lp_3dmax = 2;
  if (has_lp_3dmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *lowtype_.lp_3dmax_, output);
  }

  // optional .y3d.LPolyBlender lp_blender = 3;
  if (has_lp_blender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *lowtype_.lp_blender_, output);
  }

  // optional .y3d.LPolyMeshlab lp_meshlab = 4;
  if (has_lp_meshlab()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *lowtype_.lp_meshlab_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ELowpoly)
}

::google::protobuf::uint8* ELowpoly::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ELowpoly)
  // optional string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ELowpoly.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oname(), target);
  }

  // optional .y3d.LPoly3DMax lp_3dmax = 2;
  if (has_lp_3dmax()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *lowtype_.lp_3dmax_, false, target);
  }

  // optional .y3d.LPolyBlender lp_blender = 3;
  if (has_lp_blender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *lowtype_.lp_blender_, false, target);
  }

  // optional .y3d.LPolyMeshlab lp_meshlab = 4;
  if (has_lp_meshlab()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *lowtype_.lp_meshlab_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ELowpoly)
  return target;
}

int ELowpoly::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ELowpoly)
  int total_size = 0;

  // optional string oname = 1;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  switch (lowtype_case()) {
    // optional .y3d.LPoly3DMax lp_3dmax = 2;
    case kLp3Dmax: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *lowtype_.lp_3dmax_);
      break;
    }
    // optional .y3d.LPolyBlender lp_blender = 3;
    case kLpBlender: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *lowtype_.lp_blender_);
      break;
    }
    // optional .y3d.LPolyMeshlab lp_meshlab = 4;
    case kLpMeshlab: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *lowtype_.lp_meshlab_);
      break;
    }
    case LOWTYPE_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ELowpoly::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ELowpoly)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ELowpoly* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ELowpoly>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ELowpoly)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ELowpoly)
    MergeFrom(*source);
  }
}

void ELowpoly::MergeFrom(const ELowpoly& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ELowpoly)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.lowtype_case()) {
    case kLp3Dmax: {
      mutable_lp_3dmax()->::y3d::LPoly3DMax::MergeFrom(from.lp_3dmax());
      break;
    }
    case kLpBlender: {
      mutable_lp_blender()->::y3d::LPolyBlender::MergeFrom(from.lp_blender());
      break;
    }
    case kLpMeshlab: {
      mutable_lp_meshlab()->::y3d::LPolyMeshlab::MergeFrom(from.lp_meshlab());
      break;
    }
    case LOWTYPE_NOT_SET: {
      break;
    }
  }
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
}

void ELowpoly::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ELowpoly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ELowpoly::CopyFrom(const ELowpoly& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ELowpoly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ELowpoly::IsInitialized() const {

  return true;
}

void ELowpoly::Swap(ELowpoly* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ELowpoly::InternalSwap(ELowpoly* other) {
  oname_.Swap(&other->oname_);
  std::swap(lowtype_, other->lowtype_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ELowpoly::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ELowpoly_descriptor_;
  metadata.reflection = ELowpoly_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ELowpoly

// optional string oname = 1;
void ELowpoly::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ELowpoly::oname() const {
  // @@protoc_insertion_point(field_get:y3d.ELowpoly.oname)
  return oname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ELowpoly::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ELowpoly.oname)
}
 void ELowpoly::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ELowpoly.oname)
}
 void ELowpoly::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ELowpoly.oname)
}
 ::std::string* ELowpoly::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ELowpoly.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ELowpoly::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.ELowpoly.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ELowpoly::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.ELowpoly.oname)
}

// optional .y3d.LPoly3DMax lp_3dmax = 2;
bool ELowpoly::has_lp_3dmax() const {
  return lowtype_case() == kLp3Dmax;
}
void ELowpoly::set_has_lp_3dmax() {
  _oneof_case_[0] = kLp3Dmax;
}
void ELowpoly::clear_lp_3dmax() {
  if (has_lp_3dmax()) {
    delete lowtype_.lp_3dmax_;
    clear_has_lowtype();
  }
}
 const ::y3d::LPoly3DMax& ELowpoly::lp_3dmax() const {
  // @@protoc_insertion_point(field_get:y3d.ELowpoly.lp_3dmax)
  return has_lp_3dmax()
      ? *lowtype_.lp_3dmax_
      : ::y3d::LPoly3DMax::default_instance();
}
::y3d::LPoly3DMax* ELowpoly::mutable_lp_3dmax() {
  if (!has_lp_3dmax()) {
    clear_lowtype();
    set_has_lp_3dmax();
    lowtype_.lp_3dmax_ = new ::y3d::LPoly3DMax;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ELowpoly.lp_3dmax)
  return lowtype_.lp_3dmax_;
}
::y3d::LPoly3DMax* ELowpoly::release_lp_3dmax() {
  // @@protoc_insertion_point(field_release:y3d.ELowpoly.lp_3dmax)
  if (has_lp_3dmax()) {
    clear_has_lowtype();
    ::y3d::LPoly3DMax* temp = lowtype_.lp_3dmax_;
    lowtype_.lp_3dmax_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ELowpoly::set_allocated_lp_3dmax(::y3d::LPoly3DMax* lp_3dmax) {
  clear_lowtype();
  if (lp_3dmax) {
    set_has_lp_3dmax();
    lowtype_.lp_3dmax_ = lp_3dmax;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ELowpoly.lp_3dmax)
}

// optional .y3d.LPolyBlender lp_blender = 3;
bool ELowpoly::has_lp_blender() const {
  return lowtype_case() == kLpBlender;
}
void ELowpoly::set_has_lp_blender() {
  _oneof_case_[0] = kLpBlender;
}
void ELowpoly::clear_lp_blender() {
  if (has_lp_blender()) {
    delete lowtype_.lp_blender_;
    clear_has_lowtype();
  }
}
 const ::y3d::LPolyBlender& ELowpoly::lp_blender() const {
  // @@protoc_insertion_point(field_get:y3d.ELowpoly.lp_blender)
  return has_lp_blender()
      ? *lowtype_.lp_blender_
      : ::y3d::LPolyBlender::default_instance();
}
::y3d::LPolyBlender* ELowpoly::mutable_lp_blender() {
  if (!has_lp_blender()) {
    clear_lowtype();
    set_has_lp_blender();
    lowtype_.lp_blender_ = new ::y3d::LPolyBlender;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ELowpoly.lp_blender)
  return lowtype_.lp_blender_;
}
::y3d::LPolyBlender* ELowpoly::release_lp_blender() {
  // @@protoc_insertion_point(field_release:y3d.ELowpoly.lp_blender)
  if (has_lp_blender()) {
    clear_has_lowtype();
    ::y3d::LPolyBlender* temp = lowtype_.lp_blender_;
    lowtype_.lp_blender_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ELowpoly::set_allocated_lp_blender(::y3d::LPolyBlender* lp_blender) {
  clear_lowtype();
  if (lp_blender) {
    set_has_lp_blender();
    lowtype_.lp_blender_ = lp_blender;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ELowpoly.lp_blender)
}

// optional .y3d.LPolyMeshlab lp_meshlab = 4;
bool ELowpoly::has_lp_meshlab() const {
  return lowtype_case() == kLpMeshlab;
}
void ELowpoly::set_has_lp_meshlab() {
  _oneof_case_[0] = kLpMeshlab;
}
void ELowpoly::clear_lp_meshlab() {
  if (has_lp_meshlab()) {
    delete lowtype_.lp_meshlab_;
    clear_has_lowtype();
  }
}
 const ::y3d::LPolyMeshlab& ELowpoly::lp_meshlab() const {
  // @@protoc_insertion_point(field_get:y3d.ELowpoly.lp_meshlab)
  return has_lp_meshlab()
      ? *lowtype_.lp_meshlab_
      : ::y3d::LPolyMeshlab::default_instance();
}
::y3d::LPolyMeshlab* ELowpoly::mutable_lp_meshlab() {
  if (!has_lp_meshlab()) {
    clear_lowtype();
    set_has_lp_meshlab();
    lowtype_.lp_meshlab_ = new ::y3d::LPolyMeshlab;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ELowpoly.lp_meshlab)
  return lowtype_.lp_meshlab_;
}
::y3d::LPolyMeshlab* ELowpoly::release_lp_meshlab() {
  // @@protoc_insertion_point(field_release:y3d.ELowpoly.lp_meshlab)
  if (has_lp_meshlab()) {
    clear_has_lowtype();
    ::y3d::LPolyMeshlab* temp = lowtype_.lp_meshlab_;
    lowtype_.lp_meshlab_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ELowpoly::set_allocated_lp_meshlab(::y3d::LPolyMeshlab* lp_meshlab) {
  clear_lowtype();
  if (lp_meshlab) {
    set_has_lp_meshlab();
    lowtype_.lp_meshlab_ = lp_meshlab;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ELowpoly.lp_meshlab)
}

bool ELowpoly::has_lowtype() const {
  return lowtype_case() != LOWTYPE_NOT_SET;
}
void ELowpoly::clear_has_lowtype() {
  _oneof_case_[0] = LOWTYPE_NOT_SET;
}
ELowpoly::LowtypeCase ELowpoly::lowtype_case() const {
  return ELowpoly::LowtypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* LPoly3DMax_OpMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LPoly3DMax_OpMode_descriptor_;
}
bool LPoly3DMax_OpMode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LPoly3DMax_OpMode LPoly3DMax::CRUNCH_BORDERS;
const LPoly3DMax_OpMode LPoly3DMax::PROTECT_BORDERS;
const LPoly3DMax_OpMode LPoly3DMax::EXCLUDE_BORDERS;
const LPoly3DMax_OpMode LPoly3DMax::OpMode_MIN;
const LPoly3DMax_OpMode LPoly3DMax::OpMode_MAX;
const int LPoly3DMax::OpMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LPoly3DMax_NormalMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LPoly3DMax_NormalMode_descriptor_;
}
bool LPoly3DMax_NormalMode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LPoly3DMax_NormalMode LPoly3DMax::CRUNCH_NORMALS;
const LPoly3DMax_NormalMode LPoly3DMax::PROTECT_NORMALS;
const LPoly3DMax_NormalMode LPoly3DMax::EXCLUDE_NORMALS;
const LPoly3DMax_NormalMode LPoly3DMax::NormalMode_MIN;
const LPoly3DMax_NormalMode LPoly3DMax::NormalMode_MAX;
const int LPoly3DMax::NormalMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LPoly3DMax::kVertexPercentFieldNumber;
const int LPoly3DMax::kVertexCountFieldNumber;
const int LPoly3DMax::kOptimizationModeFieldNumber;
const int LPoly3DMax::kNormalsFieldNumber;
const int LPoly3DMax::kFavorCompactFacesFieldNumber;
const int LPoly3DMax::kPreventFlippedNormalsFieldNumber;
const int LPoly3DMax::kLockVertexPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LPoly3DMax::LPoly3DMax()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.LPoly3DMax)
}

void LPoly3DMax::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LPoly3DMax::LPoly3DMax(const LPoly3DMax& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.LPoly3DMax)
}

void LPoly3DMax::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vertex_percent_ = 0;
  vertex_count_ = 0;
  optimization_mode_ = 0;
  normals_ = 0;
  favor_compact_faces_ = false;
  prevent_flipped_normals_ = false;
  lock_vertex_position_ = false;
}

LPoly3DMax::~LPoly3DMax() {
  // @@protoc_insertion_point(destructor:y3d.LPoly3DMax)
  SharedDtor();
}

void LPoly3DMax::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LPoly3DMax::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LPoly3DMax::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LPoly3DMax_descriptor_;
}

const LPoly3DMax& LPoly3DMax::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

LPoly3DMax* LPoly3DMax::default_instance_ = NULL;

LPoly3DMax* LPoly3DMax::New(::google::protobuf::Arena* arena) const {
  LPoly3DMax* n = new LPoly3DMax;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LPoly3DMax::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.LPoly3DMax)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LPoly3DMax, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LPoly3DMax*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vertex_percent_, lock_vertex_position_);

#undef ZR_HELPER_
#undef ZR_

}

bool LPoly3DMax::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.LPoly3DMax)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float vertex_percent = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vertex_percent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vertex_count;
        break;
      }

      // optional int32 vertex_count = 2;
      case 2: {
        if (tag == 16) {
         parse_vertex_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vertex_count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_optimization_mode;
        break;
      }

      // optional .y3d.LPoly3DMax.OpMode optimization_mode = 3;
      case 3: {
        if (tag == 24) {
         parse_optimization_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_optimization_mode(static_cast< ::y3d::LPoly3DMax_OpMode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_normals;
        break;
      }

      // optional .y3d.LPoly3DMax.NormalMode normals = 4;
      case 4: {
        if (tag == 32) {
         parse_normals:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_normals(static_cast< ::y3d::LPoly3DMax_NormalMode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_favor_compact_faces;
        break;
      }

      // optional bool favor_compact_faces = 5;
      case 5: {
        if (tag == 40) {
         parse_favor_compact_faces:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &favor_compact_faces_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_prevent_flipped_normals;
        break;
      }

      // optional bool prevent_flipped_normals = 6;
      case 6: {
        if (tag == 48) {
         parse_prevent_flipped_normals:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prevent_flipped_normals_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_lock_vertex_position;
        break;
      }

      // optional bool lock_vertex_position = 7;
      case 7: {
        if (tag == 56) {
         parse_lock_vertex_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lock_vertex_position_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.LPoly3DMax)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.LPoly3DMax)
  return false;
#undef DO_
}

void LPoly3DMax::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.LPoly3DMax)
  // optional float vertex_percent = 1;
  if (this->vertex_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->vertex_percent(), output);
  }

  // optional int32 vertex_count = 2;
  if (this->vertex_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vertex_count(), output);
  }

  // optional .y3d.LPoly3DMax.OpMode optimization_mode = 3;
  if (this->optimization_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->optimization_mode(), output);
  }

  // optional .y3d.LPoly3DMax.NormalMode normals = 4;
  if (this->normals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->normals(), output);
  }

  // optional bool favor_compact_faces = 5;
  if (this->favor_compact_faces() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->favor_compact_faces(), output);
  }

  // optional bool prevent_flipped_normals = 6;
  if (this->prevent_flipped_normals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->prevent_flipped_normals(), output);
  }

  // optional bool lock_vertex_position = 7;
  if (this->lock_vertex_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->lock_vertex_position(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.LPoly3DMax)
}

::google::protobuf::uint8* LPoly3DMax::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.LPoly3DMax)
  // optional float vertex_percent = 1;
  if (this->vertex_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->vertex_percent(), target);
  }

  // optional int32 vertex_count = 2;
  if (this->vertex_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vertex_count(), target);
  }

  // optional .y3d.LPoly3DMax.OpMode optimization_mode = 3;
  if (this->optimization_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->optimization_mode(), target);
  }

  // optional .y3d.LPoly3DMax.NormalMode normals = 4;
  if (this->normals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->normals(), target);
  }

  // optional bool favor_compact_faces = 5;
  if (this->favor_compact_faces() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->favor_compact_faces(), target);
  }

  // optional bool prevent_flipped_normals = 6;
  if (this->prevent_flipped_normals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->prevent_flipped_normals(), target);
  }

  // optional bool lock_vertex_position = 7;
  if (this->lock_vertex_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->lock_vertex_position(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.LPoly3DMax)
  return target;
}

int LPoly3DMax::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.LPoly3DMax)
  int total_size = 0;

  // optional float vertex_percent = 1;
  if (this->vertex_percent() != 0) {
    total_size += 1 + 4;
  }

  // optional int32 vertex_count = 2;
  if (this->vertex_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vertex_count());
  }

  // optional .y3d.LPoly3DMax.OpMode optimization_mode = 3;
  if (this->optimization_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->optimization_mode());
  }

  // optional .y3d.LPoly3DMax.NormalMode normals = 4;
  if (this->normals() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->normals());
  }

  // optional bool favor_compact_faces = 5;
  if (this->favor_compact_faces() != 0) {
    total_size += 1 + 1;
  }

  // optional bool prevent_flipped_normals = 6;
  if (this->prevent_flipped_normals() != 0) {
    total_size += 1 + 1;
  }

  // optional bool lock_vertex_position = 7;
  if (this->lock_vertex_position() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LPoly3DMax::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.LPoly3DMax)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LPoly3DMax* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LPoly3DMax>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.LPoly3DMax)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.LPoly3DMax)
    MergeFrom(*source);
  }
}

void LPoly3DMax::MergeFrom(const LPoly3DMax& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.LPoly3DMax)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vertex_percent() != 0) {
    set_vertex_percent(from.vertex_percent());
  }
  if (from.vertex_count() != 0) {
    set_vertex_count(from.vertex_count());
  }
  if (from.optimization_mode() != 0) {
    set_optimization_mode(from.optimization_mode());
  }
  if (from.normals() != 0) {
    set_normals(from.normals());
  }
  if (from.favor_compact_faces() != 0) {
    set_favor_compact_faces(from.favor_compact_faces());
  }
  if (from.prevent_flipped_normals() != 0) {
    set_prevent_flipped_normals(from.prevent_flipped_normals());
  }
  if (from.lock_vertex_position() != 0) {
    set_lock_vertex_position(from.lock_vertex_position());
  }
}

void LPoly3DMax::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.LPoly3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LPoly3DMax::CopyFrom(const LPoly3DMax& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.LPoly3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LPoly3DMax::IsInitialized() const {

  return true;
}

void LPoly3DMax::Swap(LPoly3DMax* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LPoly3DMax::InternalSwap(LPoly3DMax* other) {
  std::swap(vertex_percent_, other->vertex_percent_);
  std::swap(vertex_count_, other->vertex_count_);
  std::swap(optimization_mode_, other->optimization_mode_);
  std::swap(normals_, other->normals_);
  std::swap(favor_compact_faces_, other->favor_compact_faces_);
  std::swap(prevent_flipped_normals_, other->prevent_flipped_normals_);
  std::swap(lock_vertex_position_, other->lock_vertex_position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LPoly3DMax::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LPoly3DMax_descriptor_;
  metadata.reflection = LPoly3DMax_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LPoly3DMax

// optional float vertex_percent = 1;
void LPoly3DMax::clear_vertex_percent() {
  vertex_percent_ = 0;
}
 float LPoly3DMax::vertex_percent() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.vertex_percent)
  return vertex_percent_;
}
 void LPoly3DMax::set_vertex_percent(float value) {
  
  vertex_percent_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.vertex_percent)
}

// optional int32 vertex_count = 2;
void LPoly3DMax::clear_vertex_count() {
  vertex_count_ = 0;
}
 ::google::protobuf::int32 LPoly3DMax::vertex_count() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.vertex_count)
  return vertex_count_;
}
 void LPoly3DMax::set_vertex_count(::google::protobuf::int32 value) {
  
  vertex_count_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.vertex_count)
}

// optional .y3d.LPoly3DMax.OpMode optimization_mode = 3;
void LPoly3DMax::clear_optimization_mode() {
  optimization_mode_ = 0;
}
 ::y3d::LPoly3DMax_OpMode LPoly3DMax::optimization_mode() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.optimization_mode)
  return static_cast< ::y3d::LPoly3DMax_OpMode >(optimization_mode_);
}
 void LPoly3DMax::set_optimization_mode(::y3d::LPoly3DMax_OpMode value) {
  
  optimization_mode_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.optimization_mode)
}

// optional .y3d.LPoly3DMax.NormalMode normals = 4;
void LPoly3DMax::clear_normals() {
  normals_ = 0;
}
 ::y3d::LPoly3DMax_NormalMode LPoly3DMax::normals() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.normals)
  return static_cast< ::y3d::LPoly3DMax_NormalMode >(normals_);
}
 void LPoly3DMax::set_normals(::y3d::LPoly3DMax_NormalMode value) {
  
  normals_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.normals)
}

// optional bool favor_compact_faces = 5;
void LPoly3DMax::clear_favor_compact_faces() {
  favor_compact_faces_ = false;
}
 bool LPoly3DMax::favor_compact_faces() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.favor_compact_faces)
  return favor_compact_faces_;
}
 void LPoly3DMax::set_favor_compact_faces(bool value) {
  
  favor_compact_faces_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.favor_compact_faces)
}

// optional bool prevent_flipped_normals = 6;
void LPoly3DMax::clear_prevent_flipped_normals() {
  prevent_flipped_normals_ = false;
}
 bool LPoly3DMax::prevent_flipped_normals() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.prevent_flipped_normals)
  return prevent_flipped_normals_;
}
 void LPoly3DMax::set_prevent_flipped_normals(bool value) {
  
  prevent_flipped_normals_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.prevent_flipped_normals)
}

// optional bool lock_vertex_position = 7;
void LPoly3DMax::clear_lock_vertex_position() {
  lock_vertex_position_ = false;
}
 bool LPoly3DMax::lock_vertex_position() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.lock_vertex_position)
  return lock_vertex_position_;
}
 void LPoly3DMax::set_lock_vertex_position(bool value) {
  
  lock_vertex_position_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.lock_vertex_position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LPolyBlender::kRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LPolyBlender::LPolyBlender()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.LPolyBlender)
}

void LPolyBlender::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LPolyBlender::LPolyBlender(const LPolyBlender& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.LPolyBlender)
}

void LPolyBlender::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  ratio_ = 0;
}

LPolyBlender::~LPolyBlender() {
  // @@protoc_insertion_point(destructor:y3d.LPolyBlender)
  SharedDtor();
}

void LPolyBlender::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LPolyBlender::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LPolyBlender::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LPolyBlender_descriptor_;
}

const LPolyBlender& LPolyBlender::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

LPolyBlender* LPolyBlender::default_instance_ = NULL;

LPolyBlender* LPolyBlender::New(::google::protobuf::Arena* arena) const {
  LPolyBlender* n = new LPolyBlender;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LPolyBlender::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.LPolyBlender)
  ratio_ = 0;
}

bool LPolyBlender::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.LPolyBlender)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float ratio = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ratio_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.LPolyBlender)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.LPolyBlender)
  return false;
#undef DO_
}

void LPolyBlender::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.LPolyBlender)
  // optional float ratio = 1;
  if (this->ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->ratio(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.LPolyBlender)
}

::google::protobuf::uint8* LPolyBlender::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.LPolyBlender)
  // optional float ratio = 1;
  if (this->ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->ratio(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.LPolyBlender)
  return target;
}

int LPolyBlender::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.LPolyBlender)
  int total_size = 0;

  // optional float ratio = 1;
  if (this->ratio() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LPolyBlender::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.LPolyBlender)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LPolyBlender* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LPolyBlender>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.LPolyBlender)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.LPolyBlender)
    MergeFrom(*source);
  }
}

void LPolyBlender::MergeFrom(const LPolyBlender& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.LPolyBlender)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.ratio() != 0) {
    set_ratio(from.ratio());
  }
}

void LPolyBlender::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.LPolyBlender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LPolyBlender::CopyFrom(const LPolyBlender& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.LPolyBlender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LPolyBlender::IsInitialized() const {

  return true;
}

void LPolyBlender::Swap(LPolyBlender* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LPolyBlender::InternalSwap(LPolyBlender* other) {
  std::swap(ratio_, other->ratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LPolyBlender::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LPolyBlender_descriptor_;
  metadata.reflection = LPolyBlender_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LPolyBlender

// optional float ratio = 1;
void LPolyBlender::clear_ratio() {
  ratio_ = 0;
}
 float LPolyBlender::ratio() const {
  // @@protoc_insertion_point(field_get:y3d.LPolyBlender.ratio)
  return ratio_;
}
 void LPolyBlender::set_ratio(float value) {
  
  ratio_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPolyBlender.ratio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LPolyMeshlab::LPolyMeshlab()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.LPolyMeshlab)
}

void LPolyMeshlab::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LPolyMeshlab::LPolyMeshlab(const LPolyMeshlab& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.LPolyMeshlab)
}

void LPolyMeshlab::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

LPolyMeshlab::~LPolyMeshlab() {
  // @@protoc_insertion_point(destructor:y3d.LPolyMeshlab)
  SharedDtor();
}

void LPolyMeshlab::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LPolyMeshlab::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LPolyMeshlab::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LPolyMeshlab_descriptor_;
}

const LPolyMeshlab& LPolyMeshlab::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

LPolyMeshlab* LPolyMeshlab::default_instance_ = NULL;

LPolyMeshlab* LPolyMeshlab::New(::google::protobuf::Arena* arena) const {
  LPolyMeshlab* n = new LPolyMeshlab;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LPolyMeshlab::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.LPolyMeshlab)
}

bool LPolyMeshlab::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.LPolyMeshlab)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.LPolyMeshlab)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.LPolyMeshlab)
  return false;
#undef DO_
}

void LPolyMeshlab::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.LPolyMeshlab)
  // @@protoc_insertion_point(serialize_end:y3d.LPolyMeshlab)
}

::google::protobuf::uint8* LPolyMeshlab::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.LPolyMeshlab)
  // @@protoc_insertion_point(serialize_to_array_end:y3d.LPolyMeshlab)
  return target;
}

int LPolyMeshlab::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.LPolyMeshlab)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LPolyMeshlab::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.LPolyMeshlab)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LPolyMeshlab* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LPolyMeshlab>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.LPolyMeshlab)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.LPolyMeshlab)
    MergeFrom(*source);
  }
}

void LPolyMeshlab::MergeFrom(const LPolyMeshlab& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.LPolyMeshlab)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void LPolyMeshlab::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.LPolyMeshlab)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LPolyMeshlab::CopyFrom(const LPolyMeshlab& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.LPolyMeshlab)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LPolyMeshlab::IsInitialized() const {

  return true;
}

void LPolyMeshlab::Swap(LPolyMeshlab* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LPolyMeshlab::InternalSwap(LPolyMeshlab* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LPolyMeshlab::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LPolyMeshlab_descriptor_;
  metadata.reflection = LPolyMeshlab_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LPolyMeshlab

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENormal::kOnameFieldNumber;
const int ENormal::kLowpolyFieldNumber;
const int ENormal::kHighpolyFieldNumber;
const int ENormal::kTexSizeFieldNumber;
const int ENormal::kOutTexFieldNumber;
const int ENormal::kNormal3DmaxFieldNumber;
const int ENormal::kNormalXnormalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENormal::ENormal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ENormal)
}

void ENormal::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  ENormal_default_oneof_instance_->normal_3dmax_ = const_cast< ::y3d::Normal3DMax*>(&::y3d::Normal3DMax::default_instance());
  ENormal_default_oneof_instance_->normal_xnormal_ = const_cast< ::xnormal::Settings*>(&::xnormal::Settings::default_instance());
}

ENormal::ENormal(const ENormal& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.ENormal)
}

void ENormal::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lowpoly_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  highpoly_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tex_size_ = 0u;
  out_tex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ntype();
}

ENormal::~ENormal() {
  // @@protoc_insertion_point(destructor:y3d.ENormal)
  SharedDtor();
}

void ENormal::SharedDtor() {
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lowpoly_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  highpoly_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_tex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_ntype()) {
    clear_ntype();
  }
  if (this != default_instance_) {
  }
}

void ENormal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ENormal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ENormal_descriptor_;
}

const ENormal& ENormal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

ENormal* ENormal::default_instance_ = NULL;

ENormal* ENormal::New(::google::protobuf::Arena* arena) const {
  ENormal* n = new ENormal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ENormal::clear_ntype() {
// @@protoc_insertion_point(one_of_clear_start:y3d.ENormal)
  switch(ntype_case()) {
    case kNormal3Dmax: {
      delete ntype_.normal_3dmax_;
      break;
    }
    case kNormalXnormal: {
      delete ntype_.normal_xnormal_;
      break;
    }
    case NTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NTYPE_NOT_SET;
}


void ENormal::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ENormal)
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lowpoly_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  highpoly_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tex_size_ = 0u;
  out_tex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_ntype();
}

bool ENormal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ENormal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string oname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ENormal.oname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_lowpoly;
        break;
      }

      // optional string lowpoly = 2;
      case 2: {
        if (tag == 18) {
         parse_lowpoly:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lowpoly()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lowpoly().data(), this->lowpoly().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ENormal.lowpoly"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_highpoly;
        break;
      }

      // optional string highpoly = 3;
      case 3: {
        if (tag == 26) {
         parse_highpoly:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_highpoly()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->highpoly().data(), this->highpoly().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ENormal.highpoly"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_tex_size;
        break;
      }

      // optional uint32 tex_size = 4;
      case 4: {
        if (tag == 32) {
         parse_tex_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tex_size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_out_tex;
        break;
      }

      // optional string out_tex = 5;
      case 5: {
        if (tag == 42) {
         parse_out_tex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_out_tex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->out_tex().data(), this->out_tex().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ENormal.out_tex"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_normal_3dmax;
        break;
      }

      // optional .y3d.Normal3DMax normal_3dmax = 6;
      case 6: {
        if (tag == 50) {
         parse_normal_3dmax:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_normal_3dmax()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_normal_xnormal;
        break;
      }

      // optional .xnormal.Settings normal_xnormal = 7;
      case 7: {
        if (tag == 58) {
         parse_normal_xnormal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_normal_xnormal()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ENormal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ENormal)
  return false;
#undef DO_
}

void ENormal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ENormal)
  // optional string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oname(), output);
  }

  // optional string lowpoly = 2;
  if (this->lowpoly().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lowpoly().data(), this->lowpoly().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.lowpoly");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->lowpoly(), output);
  }

  // optional string highpoly = 3;
  if (this->highpoly().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->highpoly().data(), this->highpoly().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.highpoly");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->highpoly(), output);
  }

  // optional uint32 tex_size = 4;
  if (this->tex_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->tex_size(), output);
  }

  // optional string out_tex = 5;
  if (this->out_tex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->out_tex().data(), this->out_tex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.out_tex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->out_tex(), output);
  }

  // optional .y3d.Normal3DMax normal_3dmax = 6;
  if (has_normal_3dmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *ntype_.normal_3dmax_, output);
  }

  // optional .xnormal.Settings normal_xnormal = 7;
  if (has_normal_xnormal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *ntype_.normal_xnormal_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ENormal)
}

::google::protobuf::uint8* ENormal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ENormal)
  // optional string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oname(), target);
  }

  // optional string lowpoly = 2;
  if (this->lowpoly().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lowpoly().data(), this->lowpoly().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.lowpoly");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->lowpoly(), target);
  }

  // optional string highpoly = 3;
  if (this->highpoly().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->highpoly().data(), this->highpoly().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.highpoly");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->highpoly(), target);
  }

  // optional uint32 tex_size = 4;
  if (this->tex_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->tex_size(), target);
  }

  // optional string out_tex = 5;
  if (this->out_tex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->out_tex().data(), this->out_tex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.out_tex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->out_tex(), target);
  }

  // optional .y3d.Normal3DMax normal_3dmax = 6;
  if (has_normal_3dmax()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *ntype_.normal_3dmax_, false, target);
  }

  // optional .xnormal.Settings normal_xnormal = 7;
  if (has_normal_xnormal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *ntype_.normal_xnormal_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ENormal)
  return target;
}

int ENormal::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ENormal)
  int total_size = 0;

  // optional string oname = 1;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  // optional string lowpoly = 2;
  if (this->lowpoly().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lowpoly());
  }

  // optional string highpoly = 3;
  if (this->highpoly().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->highpoly());
  }

  // optional uint32 tex_size = 4;
  if (this->tex_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tex_size());
  }

  // optional string out_tex = 5;
  if (this->out_tex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->out_tex());
  }

  switch (ntype_case()) {
    // optional .y3d.Normal3DMax normal_3dmax = 6;
    case kNormal3Dmax: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *ntype_.normal_3dmax_);
      break;
    }
    // optional .xnormal.Settings normal_xnormal = 7;
    case kNormalXnormal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *ntype_.normal_xnormal_);
      break;
    }
    case NTYPE_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ENormal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ENormal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ENormal* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ENormal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ENormal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ENormal)
    MergeFrom(*source);
  }
}

void ENormal::MergeFrom(const ENormal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ENormal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.ntype_case()) {
    case kNormal3Dmax: {
      mutable_normal_3dmax()->::y3d::Normal3DMax::MergeFrom(from.normal_3dmax());
      break;
    }
    case kNormalXnormal: {
      mutable_normal_xnormal()->::xnormal::Settings::MergeFrom(from.normal_xnormal());
      break;
    }
    case NTYPE_NOT_SET: {
      break;
    }
  }
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  if (from.lowpoly().size() > 0) {

    lowpoly_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lowpoly_);
  }
  if (from.highpoly().size() > 0) {

    highpoly_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.highpoly_);
  }
  if (from.tex_size() != 0) {
    set_tex_size(from.tex_size());
  }
  if (from.out_tex().size() > 0) {

    out_tex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_tex_);
  }
}

void ENormal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ENormal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENormal::CopyFrom(const ENormal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ENormal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENormal::IsInitialized() const {

  return true;
}

void ENormal::Swap(ENormal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENormal::InternalSwap(ENormal* other) {
  oname_.Swap(&other->oname_);
  lowpoly_.Swap(&other->lowpoly_);
  highpoly_.Swap(&other->highpoly_);
  std::swap(tex_size_, other->tex_size_);
  out_tex_.Swap(&other->out_tex_);
  std::swap(ntype_, other->ntype_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ENormal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ENormal_descriptor_;
  metadata.reflection = ENormal_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ENormal

// optional string oname = 1;
void ENormal::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ENormal::oname() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.oname)
  return oname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ENormal::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ENormal.oname)
}
 void ENormal::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ENormal.oname)
}
 void ENormal::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ENormal.oname)
}
 ::std::string* ENormal::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ENormal::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ENormal::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.oname)
}

// optional string lowpoly = 2;
void ENormal::clear_lowpoly() {
  lowpoly_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ENormal::lowpoly() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.lowpoly)
  return lowpoly_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ENormal::set_lowpoly(const ::std::string& value) {
  
  lowpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ENormal.lowpoly)
}
 void ENormal::set_lowpoly(const char* value) {
  
  lowpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ENormal.lowpoly)
}
 void ENormal::set_lowpoly(const char* value, size_t size) {
  
  lowpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ENormal.lowpoly)
}
 ::std::string* ENormal::mutable_lowpoly() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.lowpoly)
  return lowpoly_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ENormal::release_lowpoly() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.lowpoly)
  
  return lowpoly_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ENormal::set_allocated_lowpoly(::std::string* lowpoly) {
  if (lowpoly != NULL) {
    
  } else {
    
  }
  lowpoly_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lowpoly);
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.lowpoly)
}

// optional string highpoly = 3;
void ENormal::clear_highpoly() {
  highpoly_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ENormal::highpoly() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.highpoly)
  return highpoly_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ENormal::set_highpoly(const ::std::string& value) {
  
  highpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ENormal.highpoly)
}
 void ENormal::set_highpoly(const char* value) {
  
  highpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ENormal.highpoly)
}
 void ENormal::set_highpoly(const char* value, size_t size) {
  
  highpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ENormal.highpoly)
}
 ::std::string* ENormal::mutable_highpoly() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.highpoly)
  return highpoly_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ENormal::release_highpoly() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.highpoly)
  
  return highpoly_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ENormal::set_allocated_highpoly(::std::string* highpoly) {
  if (highpoly != NULL) {
    
  } else {
    
  }
  highpoly_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), highpoly);
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.highpoly)
}

// optional uint32 tex_size = 4;
void ENormal::clear_tex_size() {
  tex_size_ = 0u;
}
 ::google::protobuf::uint32 ENormal::tex_size() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.tex_size)
  return tex_size_;
}
 void ENormal::set_tex_size(::google::protobuf::uint32 value) {
  
  tex_size_ = value;
  // @@protoc_insertion_point(field_set:y3d.ENormal.tex_size)
}

// optional string out_tex = 5;
void ENormal::clear_out_tex() {
  out_tex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ENormal::out_tex() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.out_tex)
  return out_tex_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ENormal::set_out_tex(const ::std::string& value) {
  
  out_tex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ENormal.out_tex)
}
 void ENormal::set_out_tex(const char* value) {
  
  out_tex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ENormal.out_tex)
}
 void ENormal::set_out_tex(const char* value, size_t size) {
  
  out_tex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ENormal.out_tex)
}
 ::std::string* ENormal::mutable_out_tex() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.out_tex)
  return out_tex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ENormal::release_out_tex() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.out_tex)
  
  return out_tex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ENormal::set_allocated_out_tex(::std::string* out_tex) {
  if (out_tex != NULL) {
    
  } else {
    
  }
  out_tex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), out_tex);
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.out_tex)
}

// optional .y3d.Normal3DMax normal_3dmax = 6;
bool ENormal::has_normal_3dmax() const {
  return ntype_case() == kNormal3Dmax;
}
void ENormal::set_has_normal_3dmax() {
  _oneof_case_[0] = kNormal3Dmax;
}
void ENormal::clear_normal_3dmax() {
  if (has_normal_3dmax()) {
    delete ntype_.normal_3dmax_;
    clear_has_ntype();
  }
}
 const ::y3d::Normal3DMax& ENormal::normal_3dmax() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.normal_3dmax)
  return has_normal_3dmax()
      ? *ntype_.normal_3dmax_
      : ::y3d::Normal3DMax::default_instance();
}
::y3d::Normal3DMax* ENormal::mutable_normal_3dmax() {
  if (!has_normal_3dmax()) {
    clear_ntype();
    set_has_normal_3dmax();
    ntype_.normal_3dmax_ = new ::y3d::Normal3DMax;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.normal_3dmax)
  return ntype_.normal_3dmax_;
}
::y3d::Normal3DMax* ENormal::release_normal_3dmax() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.normal_3dmax)
  if (has_normal_3dmax()) {
    clear_has_ntype();
    ::y3d::Normal3DMax* temp = ntype_.normal_3dmax_;
    ntype_.normal_3dmax_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ENormal::set_allocated_normal_3dmax(::y3d::Normal3DMax* normal_3dmax) {
  clear_ntype();
  if (normal_3dmax) {
    set_has_normal_3dmax();
    ntype_.normal_3dmax_ = normal_3dmax;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.normal_3dmax)
}

// optional .xnormal.Settings normal_xnormal = 7;
bool ENormal::has_normal_xnormal() const {
  return ntype_case() == kNormalXnormal;
}
void ENormal::set_has_normal_xnormal() {
  _oneof_case_[0] = kNormalXnormal;
}
void ENormal::clear_normal_xnormal() {
  if (has_normal_xnormal()) {
    delete ntype_.normal_xnormal_;
    clear_has_ntype();
  }
}
 const ::xnormal::Settings& ENormal::normal_xnormal() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.normal_xnormal)
  return has_normal_xnormal()
      ? *ntype_.normal_xnormal_
      : ::xnormal::Settings::default_instance();
}
::xnormal::Settings* ENormal::mutable_normal_xnormal() {
  if (!has_normal_xnormal()) {
    clear_ntype();
    set_has_normal_xnormal();
    ntype_.normal_xnormal_ = new ::xnormal::Settings;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.normal_xnormal)
  return ntype_.normal_xnormal_;
}
::xnormal::Settings* ENormal::release_normal_xnormal() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.normal_xnormal)
  if (has_normal_xnormal()) {
    clear_has_ntype();
    ::xnormal::Settings* temp = ntype_.normal_xnormal_;
    ntype_.normal_xnormal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ENormal::set_allocated_normal_xnormal(::xnormal::Settings* normal_xnormal) {
  clear_ntype();
  if (normal_xnormal) {
    set_has_normal_xnormal();
    ntype_.normal_xnormal_ = normal_xnormal;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.normal_xnormal)
}

bool ENormal::has_ntype() const {
  return ntype_case() != NTYPE_NOT_SET;
}
void ENormal::clear_has_ntype() {
  _oneof_case_[0] = NTYPE_NOT_SET;
}
ENormal::NtypeCase ENormal::ntype_case() const {
  return ENormal::NtypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Normal3DMax::Normal3DMax()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.Normal3DMax)
}

void Normal3DMax::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Normal3DMax::Normal3DMax(const Normal3DMax& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.Normal3DMax)
}

void Normal3DMax::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Normal3DMax::~Normal3DMax() {
  // @@protoc_insertion_point(destructor:y3d.Normal3DMax)
  SharedDtor();
}

void Normal3DMax::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Normal3DMax::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Normal3DMax::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Normal3DMax_descriptor_;
}

const Normal3DMax& Normal3DMax::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

Normal3DMax* Normal3DMax::default_instance_ = NULL;

Normal3DMax* Normal3DMax::New(::google::protobuf::Arena* arena) const {
  Normal3DMax* n = new Normal3DMax;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Normal3DMax::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.Normal3DMax)
}

bool Normal3DMax::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.Normal3DMax)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.Normal3DMax)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.Normal3DMax)
  return false;
#undef DO_
}

void Normal3DMax::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.Normal3DMax)
  // @@protoc_insertion_point(serialize_end:y3d.Normal3DMax)
}

::google::protobuf::uint8* Normal3DMax::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.Normal3DMax)
  // @@protoc_insertion_point(serialize_to_array_end:y3d.Normal3DMax)
  return target;
}

int Normal3DMax::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.Normal3DMax)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Normal3DMax::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.Normal3DMax)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Normal3DMax* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Normal3DMax>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.Normal3DMax)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.Normal3DMax)
    MergeFrom(*source);
  }
}

void Normal3DMax::MergeFrom(const Normal3DMax& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.Normal3DMax)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Normal3DMax::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.Normal3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Normal3DMax::CopyFrom(const Normal3DMax& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.Normal3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Normal3DMax::IsInitialized() const {

  return true;
}

void Normal3DMax::Swap(Normal3DMax* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Normal3DMax::InternalSwap(Normal3DMax* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Normal3DMax::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Normal3DMax_descriptor_;
  metadata.reflection = Normal3DMax_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Normal3DMax

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseEvent::kErrorFieldNumber;
const int ResponseEvent::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseEvent::ResponseEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ResponseEvent)
}

void ResponseEvent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ResponseEvent::ResponseEvent(const ResponseEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.ResponseEvent)
}

void ResponseEvent::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  error_ = false;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResponseEvent::~ResponseEvent() {
  // @@protoc_insertion_point(destructor:y3d.ResponseEvent)
  SharedDtor();
}

void ResponseEvent::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ResponseEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseEvent_descriptor_;
}

const ResponseEvent& ResponseEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_y3d_2eproto();
  return *default_instance_;
}

ResponseEvent* ResponseEvent::default_instance_ = NULL;

ResponseEvent* ResponseEvent::New(::google::protobuf::Arena* arena) const {
  ResponseEvent* n = new ResponseEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ResponseEvent)
  error_ = false;
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ResponseEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ResponseEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool error = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &error_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ResponseEvent.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ResponseEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ResponseEvent)
  return false;
#undef DO_
}

void ResponseEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ResponseEvent)
  // optional bool error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->error(), output);
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResponseEvent.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ResponseEvent)
}

::google::protobuf::uint8* ResponseEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ResponseEvent)
  // optional bool error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->error(), target);
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResponseEvent.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ResponseEvent)
  return target;
}

int ResponseEvent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ResponseEvent)
  int total_size = 0;

  // optional bool error = 1;
  if (this->error() != 0) {
    total_size += 1 + 1;
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ResponseEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResponseEvent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ResponseEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ResponseEvent)
    MergeFrom(*source);
  }
}

void ResponseEvent::MergeFrom(const ResponseEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ResponseEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void ResponseEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ResponseEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseEvent::CopyFrom(const ResponseEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ResponseEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseEvent::IsInitialized() const {

  return true;
}

void ResponseEvent::Swap(ResponseEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseEvent::InternalSwap(ResponseEvent* other) {
  std::swap(error_, other->error_);
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseEvent_descriptor_;
  metadata.reflection = ResponseEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseEvent

// optional bool error = 1;
void ResponseEvent::clear_error() {
  error_ = false;
}
 bool ResponseEvent::error() const {
  // @@protoc_insertion_point(field_get:y3d.ResponseEvent.error)
  return error_;
}
 void ResponseEvent::set_error(bool value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:y3d.ResponseEvent.error)
}

// optional string msg = 2;
void ResponseEvent::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ResponseEvent::msg() const {
  // @@protoc_insertion_point(field_get:y3d.ResponseEvent.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResponseEvent::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ResponseEvent.msg)
}
 void ResponseEvent::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ResponseEvent.msg)
}
 void ResponseEvent::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ResponseEvent.msg)
}
 ::std::string* ResponseEvent::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ResponseEvent.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ResponseEvent::release_msg() {
  // @@protoc_insertion_point(field_release:y3d.ResponseEvent.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResponseEvent::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:y3d.ResponseEvent.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace y3d

// @@protoc_insertion_point(global_scope)

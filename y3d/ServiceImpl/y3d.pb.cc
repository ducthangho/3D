// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: y3d.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "y3d.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace y3d {
class YPoint3DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YPoint3> {
} _YPoint3_default_instance_;
class YBox3DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YBox3> {
} _YBox3_default_instance_;
class YResourceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YResource> {
} _YResource_default_instance_;
class YLightDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YLight> {
} _YLight_default_instance_;
class YCameraDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YCamera> {
} _YCamera_default_instance_;
class YMeshDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YMesh> {
} _YMesh_default_instance_;
class YObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YObject> {
  public:
  const ::y3d::YLight* light_;
  const ::y3d::YCamera* camera_;
  const ::y3d::YMesh* mesh_;
} _YObject_default_instance_;
class YAreaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YArea> {
} _YArea_default_instance_;
class YAreaListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YAreaList> {
} _YAreaList_default_instance_;
class YLayerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YLayer> {
} _YLayer_default_instance_;
class YGroupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YGroup> {
} _YGroup_default_instance_;
class YGroupVerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YGroupVer> {
} _YGroupVer_default_instance_;
class FilterViewDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FilterView> {
} _FilterView_default_instance_;
class FRangeItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FRangeItem> {
} _FRangeItem_default_instance_;
class OptimizeOptionsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OptimizeOptions> {
} _OptimizeOptions_default_instance_;
class ResultReplyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResultReply> {
} _ResultReply_default_instance_;
class EmptyParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EmptyParam> {
} _EmptyParam_default_instance_;
class RenameParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RenameParam> {
} _RenameParam_default_instance_;
class Make4TestParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Make4TestParam> {
} _Make4TestParam_default_instance_;
class TestOParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestOParam> {
} _TestOParam_default_instance_;
class OptimizeParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OptimizeParam> {
} _OptimizeParam_default_instance_;
class BatchOptimizeParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BatchOptimizeParam> {
} _BatchOptimizeParam_default_instance_;
class StringParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StringParam> {
} _StringParam_default_instance_;
class TestParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestParam> {
} _TestParam_default_instance_;
class YEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YEvent> {
  public:
  const ::y3d::ENone* noevent_;
  const ::y3d::ESelect* select_;
  const ::y3d::EMove* move_;
  const ::y3d::ERotate* rotate_;
  const ::y3d::EDelete* del_;
  const ::y3d::ESelectMany* select_many_;
  const ::y3d::EIsolate* isolate_;
} _YEvent_default_instance_;
class ENoneDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ENone> {
} _ENone_default_instance_;
class ESelectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ESelect> {
} _ESelect_default_instance_;
class ESelectManyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ESelectMany> {
} _ESelectMany_default_instance_;
class EMoveDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EMove> {
} _EMove_default_instance_;
class ERotateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ERotate> {
} _ERotate_default_instance_;
class EDeleteDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EDelete> {
} _EDelete_default_instance_;
class EIsolateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EIsolate> {
} _EIsolate_default_instance_;
class ResponseEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResponseEvent> {
} _ResponseEvent_default_instance_;
class EUnwrapDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EUnwrap> {
  public:
  const ::y3d::MaxUnwrap* max3d_;
  const ::y3d::BlenderUnwrap* blender_;
} _EUnwrap_default_instance_;
class BlenderUnwrapDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BlenderUnwrap> {
} _BlenderUnwrap_default_instance_;
class MaxUnwrapDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MaxUnwrap> {
} _MaxUnwrap_default_instance_;
class EPackingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EPacking> {
  public:
  const ::y3d::Pack3DMax* packmax_;
  const ::y3d::PackRect* packrect_;
} _EPacking_default_instance_;
class PackRectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackRect> {
} _PackRect_default_instance_;
class Pack3DMaxDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pack3DMax> {
} _Pack3DMax_default_instance_;
class ELowpolyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ELowpoly> {
  public:
  const ::y3d::LPoly3DMax* lp_3dmax_;
  const ::y3d::LPolyBlender* lp_blender_;
  const ::y3d::LPolyMeshlab* lp_meshlab_;
} _ELowpoly_default_instance_;
class LPoly3DMaxDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LPoly3DMax> {
} _LPoly3DMax_default_instance_;
class LPolyBlenderDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LPolyBlender> {
} _LPolyBlender_default_instance_;
class LPolyMeshlabDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LPolyMeshlab> {
} _LPolyMeshlab_default_instance_;
class ENormalDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ENormal> {
  public:
  const ::y3d::Normal3DMax* normal_3dmax_;
  const ::xnormal::Settings* normal_xnormal_;
} _ENormal_default_instance_;
class Normal3DMaxDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Normal3DMax> {
} _Normal3DMax_default_instance_;
class ProjectInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProjectInfo> {
} _ProjectInfo_default_instance_;
class SettingDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SettingData> {
} _SettingData_default_instance_;
class PSettingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PSetting> {
} _PSetting_default_instance_;
class YSystemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YSystem> {
} _YSystem_default_instance_;
class NewProjectParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewProjectParam> {
} _NewProjectParam_default_instance_;
class ResponseNProjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResponseNProject> {
} _ResponseNProject_default_instance_;
class YJobActionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YJobAction> {
  public:
  const ::y3d::EUnwrap* unwrap_;
  const ::y3d::EPacking* pack_;
  const ::y3d::ELowpoly* lowpoly_;
  const ::y3d::ENormal* bake_normal_;
} _YJobAction_default_instance_;
class YItemMeshDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YItemMesh> {
} _YItemMesh_default_instance_;
class TestObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestObject> {
} _TestObject_default_instance_;
class YJobDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YJob> {
} _YJob_default_instance_;
class YWorkerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YWorker> {
} _YWorker_default_instance_;
class YWorkerListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YWorkerList> {
} _YWorkerList_default_instance_;
class YWorkerRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YWorkerRequest> {
} _YWorkerRequest_default_instance_;
class WorkerAppDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WorkerApp> {
} _WorkerApp_default_instance_;
class YWorkerResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YWorkerResponse> {
} _YWorkerResponse_default_instance_;
class YMasterServerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YMasterServer> {
} _YMasterServer_default_instance_;

namespace protobuf_y3d_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[65];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[8];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YBox3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YBox3, pmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YBox3, pmax_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, rtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, link_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, diffuse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, specular_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, intensity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, exponent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, excludedmeshesids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, includedonlymeshesids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, fov_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, num_faces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, bbox_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, xstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, mtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, vername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, extra_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, otype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, cate_id_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YObject_default_instance_), light_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YObject_default_instance_), camera_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YObject_default_instance_), mesh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, ver_obj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, objs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, gvers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YAreaList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YAreaList, areas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLayer, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLayer, groups_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, objs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, children_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, gv_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, xref_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, vname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, groupdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, step_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, otype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, face_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, search_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, aid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, f_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, f_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, fr_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FRangeItem, has_xref_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeOptions, use_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeOptions, fr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeOptions, min_hpoly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeOptions, out_range_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultReply, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameParam, use_select_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Make4TestParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Make4TestParam, oname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Make4TestParam, lowpoly_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOParam, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOParam, oname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestOParam, low_ratio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptimizeParam, ratio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchOptimizeParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchOptimizeParam, ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchOptimizeParam, folder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchOptimizeParam, filename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringParam, str_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParam, test_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestParam, anything_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YEvent, _oneof_case_[0]),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YEvent_default_instance_), noevent_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YEvent_default_instance_), select_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YEvent_default_instance_), move_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YEvent_default_instance_), rotate_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YEvent_default_instance_), del_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YEvent_default_instance_), select_many_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YEvent_default_instance_), isolate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YEvent, event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelect, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelect, isolate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelectMany, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelectMany, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ESelectMany, isolate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EMove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EMove, point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ERotate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ERotate, rotate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EDelete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EDelete, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EIsolate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EIsolate, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EIsolate, endisolate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEvent, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEvent, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EUnwrap, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EUnwrap, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EUnwrap, oname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EUnwrap, channel_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_EUnwrap_default_instance_), max3d_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_EUnwrap_default_instance_), blender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EUnwrap, setting_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlenderUnwrap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaxUnwrap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaxUnwrap, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaxUnwrap, spacing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, oname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, uvname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, tile_size_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_EPacking_default_instance_), packmax_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_EPacking_default_instance_), packrect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EPacking, pack_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackRect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackRect, density_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackRect, padding_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, numtile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, normalize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, rotate_clusters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, fill_holes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pack3DMax, padding_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ELowpoly, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ELowpoly, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ELowpoly, oname_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_ELowpoly_default_instance_), lp_3dmax_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_ELowpoly_default_instance_), lp_blender_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_ELowpoly_default_instance_), lp_meshlab_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ELowpoly, lowtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, vertex_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, vertex_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, optimization_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, normals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, favor_compact_faces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, prevent_flipped_normals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPoly3DMax, lock_vertex_position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPolyBlender, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPolyBlender, ratio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LPolyMeshlab, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, oname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, lowpoly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, highpoly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, tex_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, out_tex_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_ENormal_default_instance_), normal_3dmax_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_ENormal_default_instance_), normal_xnormal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ENormal, ntype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Normal3DMax, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, pname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, project_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, optimize_ops_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, fview_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, optimize_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, original_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, workers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingData, aset_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSetting, extra_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSetting, max_recent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, working_folder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, default_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, default_setting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, projects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, apps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, master_server_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewProjectParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewProjectParam, fname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewProjectParam, folder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewProjectParam, project_path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNProject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNProject, pinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNProject, yal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseNProject, err_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YJobAction, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YJobAction, _oneof_case_[0]),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YJobAction_default_instance_), unwrap_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YJobAction_default_instance_), pack_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YJobAction_default_instance_), lowpoly_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_YJobAction_default_instance_), bake_normal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YJobAction, action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YItemMesh, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YItemMesh, bake_mat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YItemMesh, map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YItemMesh, mesh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YItemMesh, meshes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestObject, active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestObject, original_mat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestObject, tname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestObject, oname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestObject, save_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestObject, out_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YJob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YJob, jname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YJob, act_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YJob, obj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YJob, objs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YJob, out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YJob, tests_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorker, wid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorker, wname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorker, ip_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorker, asset_folder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorker, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorkerList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorkerList, master_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorkerList, workers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorkerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorkerRequest, call_in_app_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorkerRequest, slient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorkerRequest, app_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerApp, wname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerApp, path_run_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerApp, extra_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorkerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorkerResponse, wlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorkerResponse, new_worker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YWorkerResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMasterServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMasterServer, mname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMasterServer, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMasterServer, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMasterServer, shared_folder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMasterServer, main_workers_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(YPoint3)},
  { 7, -1, sizeof(YBox3)},
  { 13, -1, sizeof(YResource)},
  { 20, -1, sizeof(YLight)},
  { 32, -1, sizeof(YCamera)},
  { 39, -1, sizeof(YMesh)},
  { 49, -1, sizeof(YObject)},
  { 64, -1, sizeof(YArea)},
  { 72, -1, sizeof(YAreaList)},
  { 77, -1, sizeof(YLayer)},
  { 83, -1, sizeof(YGroup)},
  { 92, -1, sizeof(YGroupVer)},
  { 99, -1, sizeof(FilterView)},
  { 107, -1, sizeof(FRangeItem)},
  { 116, -1, sizeof(OptimizeOptions)},
  { 124, -1, sizeof(ResultReply)},
  { 130, -1, sizeof(EmptyParam)},
  { 134, -1, sizeof(RenameParam)},
  { 139, -1, sizeof(Make4TestParam)},
  { 145, -1, sizeof(TestOParam)},
  { 152, -1, sizeof(OptimizeParam)},
  { 157, -1, sizeof(BatchOptimizeParam)},
  { 164, -1, sizeof(StringParam)},
  { 169, -1, sizeof(TestParam)},
  { 175, -1, sizeof(YEvent)},
  { 187, -1, sizeof(ENone)},
  { 191, -1, sizeof(ESelect)},
  { 197, -1, sizeof(ESelectMany)},
  { 203, -1, sizeof(EMove)},
  { 208, -1, sizeof(ERotate)},
  { 213, -1, sizeof(EDelete)},
  { 218, -1, sizeof(EIsolate)},
  { 224, -1, sizeof(ResponseEvent)},
  { 230, -1, sizeof(EUnwrap)},
  { 239, -1, sizeof(BlenderUnwrap)},
  { 243, -1, sizeof(MaxUnwrap)},
  { 249, -1, sizeof(EPacking)},
  { 259, -1, sizeof(PackRect)},
  { 265, -1, sizeof(Pack3DMax)},
  { 274, -1, sizeof(ELowpoly)},
  { 283, -1, sizeof(LPoly3DMax)},
  { 294, -1, sizeof(LPolyBlender)},
  { 299, -1, sizeof(LPolyMeshlab)},
  { 303, -1, sizeof(ENormal)},
  { 315, -1, sizeof(Normal3DMax)},
  { 319, -1, sizeof(ProjectInfo)},
  { 331, -1, sizeof(SettingData)},
  { 337, -1, sizeof(PSetting)},
  { 343, -1, sizeof(YSystem)},
  { 353, -1, sizeof(NewProjectParam)},
  { 360, -1, sizeof(ResponseNProject)},
  { 367, -1, sizeof(YJobAction)},
  { 376, -1, sizeof(YItemMesh)},
  { 384, -1, sizeof(TestObject)},
  { 394, -1, sizeof(YJob)},
  { 404, -1, sizeof(YWorker)},
  { 413, -1, sizeof(YWorkerList)},
  { 419, -1, sizeof(YWorkerRequest)},
  { 426, -1, sizeof(WorkerApp)},
  { 433, -1, sizeof(YWorkerResponse)},
  { 440, -1, sizeof(YMasterServer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_YPoint3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YBox3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YResource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YLight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YCamera_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YMesh_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YArea_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YAreaList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YLayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YGroupVer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FilterView_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FRangeItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OptimizeOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResultReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EmptyParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RenameParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Make4TestParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestOParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OptimizeParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BatchOptimizeParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StringParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ENone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ESelect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ESelectMany_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EMove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ERotate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EDelete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EIsolate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EUnwrap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlenderUnwrap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MaxUnwrap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EPacking_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PackRect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pack3DMax_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ELowpoly_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LPoly3DMax_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LPolyBlender_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LPolyMeshlab_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ENormal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Normal3DMax_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProjectInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SettingData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PSetting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YSystem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewProjectParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseNProject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YJobAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YItemMesh_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YJob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YWorker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YWorkerList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YWorkerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorkerApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YWorkerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YMasterServer_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "y3d.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 65);
  const ::google::protobuf::Descriptor* YObject_ExtraEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[6].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        YObject_ExtraEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::protobuf::Any,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                YObject_ExtraEntry_descriptor));
  const ::google::protobuf::Descriptor* YArea_GversEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[8].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        YArea_GversEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::y3d::YGroupVer,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                YArea_GversEntry_descriptor));
  const ::google::protobuf::Descriptor* SettingData_DataEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[48].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        SettingData_DataEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::protobuf::Any,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                SettingData_DataEntry_descriptor));
  const ::google::protobuf::Descriptor* YSystem_AppsEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[51].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        YSystem_AppsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::y3d::WorkerApp,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                YSystem_AppsEntry_descriptor));
}

}  // namespace

void TableStruct::Shutdown() {
  _YPoint3_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _YBox3_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _YResource_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _YLight_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _YCamera_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _YMesh_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _YObject_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _YArea_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _YAreaList_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _YLayer_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _YGroup_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _YGroupVer_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _FilterView_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _FRangeItem_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _OptimizeOptions_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _ResultReply_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _EmptyParam_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _RenameParam_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _Make4TestParam_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _TestOParam_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _OptimizeParam_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _BatchOptimizeParam_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _StringParam_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _TestParam_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _YEvent_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _ENone_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _ESelect_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _ESelectMany_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _EMove_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _ERotate_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _EDelete_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _EIsolate_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _ResponseEvent_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _EUnwrap_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _BlenderUnwrap_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _MaxUnwrap_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _EPacking_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _PackRect_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _Pack3DMax_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _ELowpoly_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _LPoly3DMax_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _LPolyBlender_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _LPolyMeshlab_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _ENormal_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _Normal3DMax_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _ProjectInfo_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _SettingData_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _PSetting_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
  _YSystem_default_instance_.Shutdown();
  delete file_level_metadata[52].reflection;
  _NewProjectParam_default_instance_.Shutdown();
  delete file_level_metadata[53].reflection;
  _ResponseNProject_default_instance_.Shutdown();
  delete file_level_metadata[54].reflection;
  _YJobAction_default_instance_.Shutdown();
  delete file_level_metadata[55].reflection;
  _YItemMesh_default_instance_.Shutdown();
  delete file_level_metadata[56].reflection;
  _TestObject_default_instance_.Shutdown();
  delete file_level_metadata[57].reflection;
  _YJob_default_instance_.Shutdown();
  delete file_level_metadata[58].reflection;
  _YWorker_default_instance_.Shutdown();
  delete file_level_metadata[59].reflection;
  _YWorkerList_default_instance_.Shutdown();
  delete file_level_metadata[60].reflection;
  _YWorkerRequest_default_instance_.Shutdown();
  delete file_level_metadata[61].reflection;
  _WorkerApp_default_instance_.Shutdown();
  delete file_level_metadata[62].reflection;
  _YWorkerResponse_default_instance_.Shutdown();
  delete file_level_metadata[63].reflection;
  _YMasterServer_default_instance_.Shutdown();
  delete file_level_metadata[64].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  ::xnormal::protobuf_xnormal_2eproto::InitDefaults();
  ::y3d::protobuf_ymat_2eproto::InitDefaults();
  _YPoint3_default_instance_.DefaultConstruct();
  _YBox3_default_instance_.DefaultConstruct();
  _YResource_default_instance_.DefaultConstruct();
  _YLight_default_instance_.DefaultConstruct();
  _YCamera_default_instance_.DefaultConstruct();
  _YMesh_default_instance_.DefaultConstruct();
  _YObject_default_instance_.DefaultConstruct();
  _YArea_default_instance_.DefaultConstruct();
  _YAreaList_default_instance_.DefaultConstruct();
  _YLayer_default_instance_.DefaultConstruct();
  _YGroup_default_instance_.DefaultConstruct();
  _YGroupVer_default_instance_.DefaultConstruct();
  _FilterView_default_instance_.DefaultConstruct();
  _FRangeItem_default_instance_.DefaultConstruct();
  _OptimizeOptions_default_instance_.DefaultConstruct();
  _ResultReply_default_instance_.DefaultConstruct();
  _EmptyParam_default_instance_.DefaultConstruct();
  _RenameParam_default_instance_.DefaultConstruct();
  _Make4TestParam_default_instance_.DefaultConstruct();
  _TestOParam_default_instance_.DefaultConstruct();
  _OptimizeParam_default_instance_.DefaultConstruct();
  _BatchOptimizeParam_default_instance_.DefaultConstruct();
  _StringParam_default_instance_.DefaultConstruct();
  _TestParam_default_instance_.DefaultConstruct();
  _YEvent_default_instance_.DefaultConstruct();
  _ENone_default_instance_.DefaultConstruct();
  _ESelect_default_instance_.DefaultConstruct();
  _ESelectMany_default_instance_.DefaultConstruct();
  _EMove_default_instance_.DefaultConstruct();
  _ERotate_default_instance_.DefaultConstruct();
  _EDelete_default_instance_.DefaultConstruct();
  _EIsolate_default_instance_.DefaultConstruct();
  _ResponseEvent_default_instance_.DefaultConstruct();
  _EUnwrap_default_instance_.DefaultConstruct();
  _BlenderUnwrap_default_instance_.DefaultConstruct();
  _MaxUnwrap_default_instance_.DefaultConstruct();
  _EPacking_default_instance_.DefaultConstruct();
  _PackRect_default_instance_.DefaultConstruct();
  _Pack3DMax_default_instance_.DefaultConstruct();
  _ELowpoly_default_instance_.DefaultConstruct();
  _LPoly3DMax_default_instance_.DefaultConstruct();
  _LPolyBlender_default_instance_.DefaultConstruct();
  _LPolyMeshlab_default_instance_.DefaultConstruct();
  _ENormal_default_instance_.DefaultConstruct();
  _Normal3DMax_default_instance_.DefaultConstruct();
  _ProjectInfo_default_instance_.DefaultConstruct();
  _SettingData_default_instance_.DefaultConstruct();
  _PSetting_default_instance_.DefaultConstruct();
  _YSystem_default_instance_.DefaultConstruct();
  _NewProjectParam_default_instance_.DefaultConstruct();
  _ResponseNProject_default_instance_.DefaultConstruct();
  _YJobAction_default_instance_.DefaultConstruct();
  _YItemMesh_default_instance_.DefaultConstruct();
  _TestObject_default_instance_.DefaultConstruct();
  _YJob_default_instance_.DefaultConstruct();
  _YWorker_default_instance_.DefaultConstruct();
  _YWorkerList_default_instance_.DefaultConstruct();
  _YWorkerRequest_default_instance_.DefaultConstruct();
  _WorkerApp_default_instance_.DefaultConstruct();
  _YWorkerResponse_default_instance_.DefaultConstruct();
  _YMasterServer_default_instance_.DefaultConstruct();
  _YBox3_default_instance_.get_mutable()->pmin_ = const_cast< ::y3d::YPoint3*>(
      ::y3d::YPoint3::internal_default_instance());
  _YBox3_default_instance_.get_mutable()->pmax_ = const_cast< ::y3d::YPoint3*>(
      ::y3d::YPoint3::internal_default_instance());
  _YMesh_default_instance_.get_mutable()->bbox_ = const_cast< ::y3d::YBox3*>(
      ::y3d::YBox3::internal_default_instance());
  _YMesh_default_instance_.get_mutable()->res_ = const_cast< ::y3d::YResource*>(
      ::y3d::YResource::internal_default_instance());
  _YObject_default_instance_.get_mutable()->pos_ = const_cast< ::y3d::YPoint3*>(
      ::y3d::YPoint3::internal_default_instance());
  _YObject_default_instance_.light_ = const_cast< ::y3d::YLight*>(
      ::y3d::YLight::internal_default_instance());
  _YObject_default_instance_.camera_ = const_cast< ::y3d::YCamera*>(
      ::y3d::YCamera::internal_default_instance());
  _YObject_default_instance_.mesh_ = const_cast< ::y3d::YMesh*>(
      ::y3d::YMesh::internal_default_instance());
  _YObject_default_instance_.get_mutable()->ver_obj_ = const_cast< ::y3d::TestObject*>(
      ::y3d::TestObject::internal_default_instance());
  _YGroupVer_default_instance_.get_mutable()->groupdata_ = const_cast< ::y3d::YGroup*>(
      ::y3d::YGroup::internal_default_instance());
  _FRangeItem_default_instance_.get_mutable()->fr_color_ = const_cast< ::y3d::YColor*>(
      ::y3d::YColor::internal_default_instance());
  _TestParam_default_instance_.get_mutable()->anything_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  _YEvent_default_instance_.noevent_ = const_cast< ::y3d::ENone*>(
      ::y3d::ENone::internal_default_instance());
  _YEvent_default_instance_.select_ = const_cast< ::y3d::ESelect*>(
      ::y3d::ESelect::internal_default_instance());
  _YEvent_default_instance_.move_ = const_cast< ::y3d::EMove*>(
      ::y3d::EMove::internal_default_instance());
  _YEvent_default_instance_.rotate_ = const_cast< ::y3d::ERotate*>(
      ::y3d::ERotate::internal_default_instance());
  _YEvent_default_instance_.del_ = const_cast< ::y3d::EDelete*>(
      ::y3d::EDelete::internal_default_instance());
  _YEvent_default_instance_.select_many_ = const_cast< ::y3d::ESelectMany*>(
      ::y3d::ESelectMany::internal_default_instance());
  _YEvent_default_instance_.isolate_ = const_cast< ::y3d::EIsolate*>(
      ::y3d::EIsolate::internal_default_instance());
  _EUnwrap_default_instance_.max3d_ = const_cast< ::y3d::MaxUnwrap*>(
      ::y3d::MaxUnwrap::internal_default_instance());
  _EUnwrap_default_instance_.blender_ = const_cast< ::y3d::BlenderUnwrap*>(
      ::y3d::BlenderUnwrap::internal_default_instance());
  _EPacking_default_instance_.packmax_ = const_cast< ::y3d::Pack3DMax*>(
      ::y3d::Pack3DMax::internal_default_instance());
  _EPacking_default_instance_.packrect_ = const_cast< ::y3d::PackRect*>(
      ::y3d::PackRect::internal_default_instance());
  _ELowpoly_default_instance_.lp_3dmax_ = const_cast< ::y3d::LPoly3DMax*>(
      ::y3d::LPoly3DMax::internal_default_instance());
  _ELowpoly_default_instance_.lp_blender_ = const_cast< ::y3d::LPolyBlender*>(
      ::y3d::LPolyBlender::internal_default_instance());
  _ELowpoly_default_instance_.lp_meshlab_ = const_cast< ::y3d::LPolyMeshlab*>(
      ::y3d::LPolyMeshlab::internal_default_instance());
  _ENormal_default_instance_.normal_3dmax_ = const_cast< ::y3d::Normal3DMax*>(
      ::y3d::Normal3DMax::internal_default_instance());
  _ENormal_default_instance_.normal_xnormal_ = const_cast< ::xnormal::Settings*>(
      ::xnormal::Settings::internal_default_instance());
  _ProjectInfo_default_instance_.get_mutable()->ts_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _ProjectInfo_default_instance_.get_mutable()->optimize_ops_ = const_cast< ::y3d::OptimizeOptions*>(
      ::y3d::OptimizeOptions::internal_default_instance());
  _PSetting_default_instance_.get_mutable()->extra_ = const_cast< ::y3d::SettingData*>(
      ::y3d::SettingData::internal_default_instance());
  _YSystem_default_instance_.get_mutable()->default_info_ = const_cast< ::y3d::ProjectInfo*>(
      ::y3d::ProjectInfo::internal_default_instance());
  _YSystem_default_instance_.get_mutable()->default_setting_ = const_cast< ::y3d::PSetting*>(
      ::y3d::PSetting::internal_default_instance());
  _YSystem_default_instance_.get_mutable()->master_server_ = const_cast< ::y3d::YMasterServer*>(
      ::y3d::YMasterServer::internal_default_instance());
  _ResponseNProject_default_instance_.get_mutable()->pinfo_ = const_cast< ::y3d::ProjectInfo*>(
      ::y3d::ProjectInfo::internal_default_instance());
  _ResponseNProject_default_instance_.get_mutable()->yal_ = const_cast< ::y3d::YAreaList*>(
      ::y3d::YAreaList::internal_default_instance());
  _YJobAction_default_instance_.unwrap_ = const_cast< ::y3d::EUnwrap*>(
      ::y3d::EUnwrap::internal_default_instance());
  _YJobAction_default_instance_.pack_ = const_cast< ::y3d::EPacking*>(
      ::y3d::EPacking::internal_default_instance());
  _YJobAction_default_instance_.lowpoly_ = const_cast< ::y3d::ELowpoly*>(
      ::y3d::ELowpoly::internal_default_instance());
  _YJobAction_default_instance_.bake_normal_ = const_cast< ::y3d::ENormal*>(
      ::y3d::ENormal::internal_default_instance());
  _YItemMesh_default_instance_.get_mutable()->bake_mat_ = const_cast< ::y3d::YMat*>(
      ::y3d::YMat::internal_default_instance());
  _YItemMesh_default_instance_.get_mutable()->map_ = const_cast< ::y3d::YBaseMap*>(
      ::y3d::YBaseMap::internal_default_instance());
  _YItemMesh_default_instance_.get_mutable()->mesh_ = const_cast< ::y3d::YMesh*>(
      ::y3d::YMesh::internal_default_instance());
  _TestObject_default_instance_.get_mutable()->original_mat_ = const_cast< ::y3d::YMat*>(
      ::y3d::YMat::internal_default_instance());
  _TestObject_default_instance_.get_mutable()->out_ = const_cast< ::y3d::YItemMesh*>(
      ::y3d::YItemMesh::internal_default_instance());
  _YJob_default_instance_.get_mutable()->obj_ = const_cast< ::y3d::YObject*>(
      ::y3d::YObject::internal_default_instance());
  _YJob_default_instance_.get_mutable()->out_ = const_cast< ::y3d::YItemMesh*>(
      ::y3d::YItemMesh::internal_default_instance());
  _YWorkerList_default_instance_.get_mutable()->master_ = const_cast< ::y3d::YWorker*>(
      ::y3d::YWorker::internal_default_instance());
  _YWorkerRequest_default_instance_.get_mutable()->app_ = const_cast< ::y3d::WorkerApp*>(
      ::y3d::WorkerApp::internal_default_instance());
  _YWorkerResponse_default_instance_.get_mutable()->wlist_ = const_cast< ::y3d::YWorkerList*>(
      ::y3d::YWorkerList::internal_default_instance());
  _YWorkerResponse_default_instance_.get_mutable()->new_worker_ = const_cast< ::y3d::YWorker*>(
      ::y3d::YWorker::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\ty3d.proto\022\003y3d\032\031google/protobuf/any.pr"
      "oto\032\037google/protobuf/timestamp.proto\032\rxn"
      "ormal.proto\032\nymat.proto\"*\n\007YPoint3\022\t\n\001x\030"
      "\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"\?\n\005YBox3\022\032\n\004"
      "pmin\030\001 \001(\0132\014.y3d.YPoint3\022\032\n\004pmax\030\002 \001(\0132\014"
      ".y3d.YPoint3\"\242\001\n\tYResource\022\013\n\003rid\030\001 \001(\t\022"
      "*\n\005rtype\030\002 \001(\0162\033.y3d.YResource.ResourceT"
      "ype\022\014\n\004link\030\003 \001(\t\"N\n\014ResourceType\022\n\n\006BIN"
      "ARY\020\000\022\t\n\005IMAGE\020\001\022\016\n\nFLATBUFFER\020\002\022\014\n\010PROT"
      "OBUF\020\003\022\t\n\005CAPNP\020\004\"\250\001\n\006YLight\022\017\n\007diffuse\030"
      "\003 \003(\002\022\020\n\010specular\030\004 \003(\002\022\021\n\tintensity\030\005 \001"
      "(\002\022\r\n\005range\030\006 \001(\002\022\r\n\005angle\030\007 \001(\002\022\020\n\010expo"
      "nent\030\010 \001(\002\022\031\n\021excludedMeshesIds\030\t \003(\t\022\035\n"
      "\025includedOnlyMeshesIds\030\n \003(\t\"8\n\007YCamera\022"
      "\020\n\010rotation\030\003 \003(\002\022\016\n\006target\030\004 \003(\002\022\013\n\003fov"
      "\030\005 \001(\002\"\337\003\n\005YMesh\022\021\n\tnum_faces\030\001 \001(\005\022\030\n\004b"
      "box\030\002 \001(\0132\n.y3d.YBox3\022\033\n\003res\030\003 \001(\0132\016.y3d"
      ".YResource\022&\n\007xstatus\030\005 \001(\0162\025.y3d.YMesh."
      "XrefStatus\022\"\n\005mtype\030\006 \001(\0162\023.y3d.YMesh.Me"
      "shType\022\017\n\007vername\030\007 \001(\t\"\276\001\n\010MeshType\022\013\n\007"
      "Unknown\020\000\022\021\n\rEditable_Mesh\020\001\022\021\n\rEditable"
      "_Poly\020\002\022\007\n\003Box\020\003\022\n\n\006Sphere\020\004\022\r\n\tGeoSpher"
      "e\020\005\022\014\n\010Cylinder\020\006\022\010\n\004Tube\020\007\022\t\n\005Torus\020\010\022\013"
      "\n\007Pyramid\020\t\022\n\n\006Teapot\020\n\022\t\n\005Plane\020\013\022\n\n\006Ta"
      "rget\020\014\022\010\n\004Cone\020\r\"n\n\nXrefStatus\022\014\n\010ORIGIN"
      "AL\020\000\022\016\n\nXREF_HIGHT\020\001\022\014\n\010XREF_LOW\020\002\022\024\n\020XR"
      "EF_LOW_DISPLAY\020\003\022\007\n\003BOX\020\004\022\n\n\006MERGED\020\005\022\t\n"
      "\005FINAL\020\006\"\341\002\n\007YObject\022\014\n\004name\030\001 \001(\t\022\031\n\003po"
      "s\030\003 \001(\0132\014.y3d.YPoint3\022&\n\005extra\030\005 \003(\0132\027.y"
      "3d.YObject.ExtraEntry\022\036\n\005otype\030\006 \001(\0162\017.y"
      "3d.ObjectType\022\014\n\004tags\030\007 \003(\t\022\017\n\007cate_id\030\010"
      " \001(\005\022\034\n\005light\030\n \001(\0132\013.y3d.YLightH\000\022\036\n\006ca"
      "mera\030\013 \001(\0132\014.y3d.YCameraH\000\022\032\n\004mesh\030\014 \001(\013"
      "2\n.y3d.YMeshH\000\022 \n\007ver_obj\030\r \001(\0132\017.y3d.Te"
      "stObject\032B\n\nExtraEntry\022\013\n\003key\030\001 \001(\t\022#\n\005v"
      "alue\030\002 \001(\0132\024.google.protobuf.Any:\0028\001B\006\n\004"
      "data\"\262\001\n\005YArea\022\014\n\004name\030\001 \001(\t\022\033\n\006groups\030\002"
      " \003(\0132\013.y3d.YGroup\022\032\n\004objs\030\003 \003(\0132\014.y3d.YO"
      "bject\022$\n\005gvers\030\006 \003(\0132\025.y3d.YArea.GversEn"
      "try\032<\n\nGversEntry\022\013\n\003key\030\001 \001(\t\022\035\n\005value\030"
      "\002 \001(\0132\016.y3d.YGroupVer:\0028\001\"&\n\tYAreaList\022\031"
      "\n\005areas\030\001 \003(\0132\n.y3d.YArea\"3\n\006YLayer\022\014\n\004n"
      "ame\030\001 \001(\t\022\033\n\006groups\030\002 \003(\0132\013.y3d.YGroup\"\177"
      "\n\006YGroup\022\014\n\004name\030\001 \001(\t\022\032\n\004objs\030\002 \003(\0132\014.y"
      "3d.YObject\022\035\n\010children\030\003 \003(\0132\013.y3d.YGrou"
      "p\022\036\n\007gv_type\030\004 \001(\0162\r.y3d.GVerType\022\014\n\004xre"
      "f\030\005 \003(\t\"H\n\tYGroupVer\022\r\n\005vname\030\001 \001(\t\022\036\n\tg"
      "roupData\030\002 \001(\0132\013.y3d.YGroup\022\014\n\004step\030\003 \001("
      "\005\"]\n\nFilterView\022\036\n\005otype\030\001 \001(\0162\017.y3d.Obj"
      "ectType\022\022\n\nface_range\030\002 \001(\005\022\016\n\006search\030\003 "
      "\001(\t\022\013\n\003aid\030\004 \001(\005\"l\n\nFRangeItem\022\017\n\007f_star"
      "t\030\001 \001(\005\022\r\n\005f_end\030\002 \001(\005\022\035\n\010fr_color\030\003 \001(\013"
      "2\013.y3d.YColor\022\r\n\005ratio\030\004 \001(\002\022\020\n\010has_xref"
      "\030\005 \001(\010\"m\n\017OptimizeOptions\022\021\n\tuse_range\030\001"
      " \001(\010\022\033\n\002fr\030\002 \003(\0132\017.y3d.FRangeItem\022\021\n\tmin"
      "_hpoly\030\003 \001(\005\022\027\n\017out_range_count\030\004 \001(\005\"-\n"
      "\013ResultReply\022\r\n\005error\030\001 \001(\010\022\017\n\007message\030\002"
      " \001(\t\"\014\n\nEmptyParam\"!\n\013RenameParam\022\022\n\nuse"
      "_select\030\001 \001(\010\"\?\n\016Make4TestParam\022\r\n\005oname"
      "\030\001 \001(\t\022\036\n\007lowpoly\030\002 \003(\0132\r.y3d.ELowpoly\":"
      "\n\nTestOParam\022\n\n\002id\030\001 \001(\005\022\r\n\005oname\030\002 \001(\t\022"
      "\021\n\tlow_ratio\030\003 \001(\002\"\036\n\rOptimizeParam\022\r\n\005r"
      "atio\030\001 \001(\002\"E\n\022BatchOptimizeParam\022\r\n\005rati"
      "o\030\001 \001(\002\022\016\n\006folder\030\002 \001(\t\022\020\n\010filename\030\003 \001("
      "\t\"\032\n\013StringParam\022\013\n\003str\030\001 \001(\t\"F\n\tTestPar"
      "am\022\021\n\ttest_name\030\001 \001(\t\022&\n\010anything\030\002 \001(\0132"
      "\024.google.protobuf.Any\"\364\001\n\006YEvent\022\035\n\007noev"
      "ent\030\001 \001(\0132\n.y3d.ENoneH\000\022\036\n\006select\030\002 \001(\0132"
      "\014.y3d.ESelectH\000\022\032\n\004move\030\003 \001(\0132\n.y3d.EMov"
      "eH\000\022\036\n\006rotate\030\004 \001(\0132\014.y3d.ERotateH\000\022\033\n\003d"
      "el\030\005 \001(\0132\014.y3d.EDeleteH\000\022\'\n\013select_many\030"
      "\006 \001(\0132\020.y3d.ESelectManyH\000\022 \n\007isolate\030\007 \001"
      "(\0132\r.y3d.EIsolateH\000B\007\n\005event\"\007\n\005ENone\"(\n"
      "\007ESelect\022\014\n\004name\030\001 \001(\t\022\017\n\007isolate\030\002 \001(\010\""
      ",\n\013ESelectMany\022\014\n\004name\030\001 \003(\t\022\017\n\007isolate\030"
      "\002 \001(\010\"\026\n\005EMove\022\r\n\005point\030\001 \003(\002\"\031\n\007ERotate"
      "\022\016\n\006rotate\030\001 \003(\002\"\027\n\007EDelete\022\014\n\004name\030\001 \001("
      "\t\",\n\010EIsolate\022\014\n\004name\030\001 \001(\t\022\022\n\nendIsolat"
      "e\030\002 \001(\010\"+\n\rResponseEvent\022\r\n\005error\030\001 \001(\010\022"
      "\013\n\003msg\030\002 \001(\t\"|\n\007EUnwrap\022\r\n\005oname\030\001 \001(\t\022\017"
      "\n\007channel\030\002 \001(\005\022\037\n\005max3d\030\003 \001(\0132\016.y3d.Max"
      "UnwrapH\000\022%\n\007blender\030\004 \001(\0132\022.y3d.BlenderU"
      "nwrapH\000B\t\n\007setting\"\017\n\rBlenderUnwrap\"+\n\tM"
      "axUnwrap\022\r\n\005angle\030\001 \001(\002\022\017\n\007spacing\030\002 \001(\002"
      "\"\212\001\n\010EPacking\022\r\n\005oname\030\001 \001(\t\022\016\n\006uvname\030\002"
      " \001(\t\022\021\n\ttile_Size\030\003 \001(\005\022!\n\007packmax\030\004 \001(\013"
      "2\016.y3d.Pack3DMaxH\000\022!\n\010packrect\030\005 \001(\0132\r.y"
      "3d.PackRectH\000B\006\n\004pack\",\n\010PackRect\022\017\n\007den"
      "sity\030\001 \001(\005\022\017\n\007padding\030\002 \001(\002\"m\n\tPack3DMax"
      "\022\017\n\007numTile\030\001 \001(\005\022\021\n\tnormalize\030\002 \001(\010\022\027\n\017"
      "rotate_clusters\030\003 \001(\010\022\022\n\nfill_holes\030\004 \001("
      "\010\022\017\n\007padding\030\005 \001(\010\"\233\001\n\010ELowpoly\022\r\n\005oname"
      "\030\001 \001(\t\022#\n\010lp_3dmax\030\002 \001(\0132\017.y3d.LPoly3DMa"
      "xH\000\022\'\n\nlp_blender\030\003 \001(\0132\021.y3d.LPolyBlend"
      "erH\000\022\'\n\nlp_meshlab\030\004 \001(\0132\021.y3d.LPolyMesh"
      "labH\000B\t\n\007lowtype\"\212\003\n\nLPoly3DMax\022\026\n\016verte"
      "x_percent\030\001 \001(\002\022\024\n\014vertex_count\030\002 \001(\005\0221\n"
      "\021optimization_mode\030\003 \001(\0162\026.y3d.LPoly3DMa"
      "x.OpMode\022+\n\007normals\030\004 \001(\0162\032.y3d.LPoly3DM"
      "ax.NormalMode\022\033\n\023favor_compact_faces\030\005 \001"
      "(\010\022\037\n\027prevent_flipped_normals\030\006 \001(\010\022\034\n\024l"
      "ock_vertex_position\030\007 \001(\010\"F\n\006OpMode\022\022\n\016C"
      "RUNCH_BORDERS\020\000\022\023\n\017PROTECT_BORDERS\020\001\022\023\n\017"
      "EXCLUDE_BORDERS\020\002\"J\n\nNormalMode\022\022\n\016CRUNC"
      "H_NORMALS\020\000\022\023\n\017PROTECT_NORMALS\020\001\022\023\n\017EXCL"
      "UDE_NORMALS\020\002\"\035\n\014LPolyBlender\022\r\n\005ratio\030\001"
      " \001(\002\"\016\n\014LPolyMeshlab\"\276\001\n\007ENormal\022\r\n\005onam"
      "e\030\001 \001(\t\022\017\n\007lowpoly\030\002 \001(\t\022\020\n\010highpoly\030\003 \001"
      "(\t\022\020\n\010tex_size\030\004 \001(\r\022\017\n\007out_tex\030\005 \001(\t\022(\n"
      "\014normal_3dmax\030\006 \001(\0132\020.y3d.Normal3DMaxH\000\022"
      "+\n\016normal_xnormal\030\007 \001(\0132\021.xnormal.Settin"
      "gsH\000B\007\n\005ntype\"\r\n\013Normal3DMax\"\364\001\n\013Project"
      "Info\022\r\n\005pname\030\001 \001(\t\022\024\n\014project_path\030\002 \001("
      "\t\022&\n\002ts\030\003 \001(\0132\032.google.protobuf.Timestam"
      "p\022*\n\014optimize_ops\030\005 \001(\0132\024.y3d.OptimizeOp"
      "tions\022\036\n\005fview\030\006 \003(\0132\017.y3d.FilterView\022\026\n"
      "\016optimize_ratio\030\007 \001(\002\022\025\n\roriginal_path\030\010"
      " \001(\t\022\035\n\007workers\030\t \003(\0132\014.y3d.YWorker\"\215\001\n\013"
      "SettingData\022\021\n\taset_name\030\001 \001(\t\022(\n\004data\030\002"
      " \003(\0132\032.y3d.SettingData.DataEntry\032A\n\tData"
      "Entry\022\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.goog"
      "le.protobuf.Any:\0028\001\"\?\n\010PSetting\022\037\n\005extra"
      "\030\001 \001(\0132\020.y3d.SettingData\022\022\n\nmax_recent\030\002"
      " \001(\005\"\243\002\n\007YSystem\022\026\n\016working_folder\030\001 \001(\t"
      "\022&\n\014default_info\030\002 \001(\0132\020.y3d.ProjectInfo"
      "\022&\n\017default_setting\030\003 \001(\0132\r.y3d.PSetting"
      "\022\"\n\010projects\030\004 \003(\0132\020.y3d.ProjectInfo\022$\n\004"
      "apps\030\005 \003(\0132\026.y3d.YSystem.AppsEntry\022)\n\rma"
      "ster_server\030\006 \001(\0132\022.y3d.YMasterServer\032;\n"
      "\tAppsEntry\022\013\n\003key\030\001 \001(\t\022\035\n\005value\030\002 \001(\0132\016"
      ".y3d.WorkerApp:\0028\001\"F\n\017NewProjectParam\022\r\n"
      "\005fname\030\001 \001(\t\022\016\n\006folder\030\002 \001(\t\022\024\n\014project_"
      "path\030\003 \001(\t\"]\n\020ResponseNProject\022\037\n\005pInfo\030"
      "\001 \001(\0132\020.y3d.ProjectInfo\022\033\n\003yal\030\002 \001(\0132\016.y"
      "3d.YAreaList\022\013\n\003err\030\004 \001(\t\"\234\001\n\nYJobAction"
      "\022\036\n\006unwrap\030\001 \001(\0132\014.y3d.EUnwrapH\000\022\035\n\004pack"
      "\030\002 \001(\0132\r.y3d.EPackingH\000\022 \n\007lowpoly\030\003 \001(\013"
      "2\r.y3d.ELowpolyH\000\022#\n\013bake_normal\030\004 \001(\0132\014"
      ".y3d.ENormalH\000B\010\n\006action\"z\n\tYItemMesh\022\033\n"
      "\010bake_mat\030\001 \001(\0132\t.y3d.YMat\022\032\n\003map\030\002 \001(\0132"
      "\r.y3d.YBaseMap\022\030\n\004mesh\030\003 \001(\0132\n.y3d.YMesh"
      "\022\032\n\006meshes\030\004 \003(\0132\n.y3d.YMesh\"\213\001\n\nTestObj"
      "ect\022\016\n\006active\030\001 \001(\010\022\037\n\014original_mat\030\002 \001("
      "\0132\t.y3d.YMat\022\r\n\005tname\030\003 \001(\t\022\r\n\005oname\030\004 \001"
      "(\t\022\021\n\tsave_path\030\t \001(\t\022\033\n\003out\030\n \001(\0132\016.y3d"
      ".YItemMesh\"\247\001\n\004YJob\022\r\n\005jname\030\001 \001(\t\022\034\n\003ac"
      "t\030\002 \003(\0132\017.y3d.YJobAction\022\031\n\003obj\030\003 \001(\0132\014."
      "y3d.YObject\022\032\n\004objs\030\004 \003(\0132\014.y3d.YObject\022"
      "\033\n\003out\030\005 \001(\0132\016.y3d.YItemMesh\022\036\n\005tests\030\007 "
      "\003(\0132\017.y3d.TestObject\"\267\001\n\007YWorker\022\013\n\003wid\030"
      "\001 \001(\005\022\r\n\005wname\030\002 \001(\t\022\022\n\nip_address\030\003 \001(\t"
      "\022\024\n\014asset_folder\030\004 \001(\t\022*\n\006status\030\005 \001(\0162\032"
      ".y3d.YWorker.ServingStatus\":\n\rServingSta"
      "tus\022\013\n\007UNKNOWN\020\000\022\013\n\007SERVING\020\001\022\017\n\013NOT_SER"
      "VING\020\002\"J\n\013YWorkerList\022\034\n\006master\030\001 \001(\0132\014."
      "y3d.YWorker\022\035\n\007workers\030\002 \003(\0132\014.y3d.YWork"
      "er\"R\n\016YWorkerRequest\022\023\n\013call_in_app\030\001 \001("
      "\010\022\016\n\006slient\030\002 \001(\010\022\033\n\003app\030\003 \001(\0132\016.y3d.Wor"
      "kerApp\";\n\tWorkerApp\022\r\n\005wname\030\001 \001(\t\022\020\n\010pa"
      "th_run\030\002 \001(\t\022\r\n\005extra\030\003 \001(\t\"c\n\017YWorkerRe"
      "sponse\022\037\n\005wlist\030\001 \001(\0132\020.y3d.YWorkerList\022"
      " \n\nnew_worker\030\002 \001(\0132\014.y3d.YWorker\022\r\n\005err"
      "or\030\003 \001(\t\"x\n\rYMasterServer\022\r\n\005mname\030\001 \001(\t"
      "\022\017\n\007address\030\002 \001(\t\022\014\n\004port\030\005 \001(\005\022\025\n\rshare"
      "d_folder\030\003 \001(\t\022\"\n\014main_workers\030\004 \003(\0132\014.y"
      "3d.YWorker*G\n\nObjectType\022\014\n\010GEOMETRY\020\000\022\t"
      "\n\005LIGHT\020\001\022\n\n\006CAMERA\020\002\022\t\n\005SHAPE\020\003\022\t\n\005OTHE"
      "R\020\004*\?\n\010GVerType\022\n\n\006NO_VER\020\000\022\014\n\010ORIGINAL\020"
      "\001\022\013\n\007IN_BAKE\020\002\022\014\n\010STANDARD\020\003B\010\252\002\005y3d.eb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6766);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "y3d.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::xnormal::protobuf_xnormal_2eproto::AddDescriptors();
  ::y3d::protobuf_ymat_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_y3d_2eproto

const ::google::protobuf::EnumDescriptor* YResource_ResourceType_descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_enum_descriptors[0];
}
bool YResource_ResourceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const YResource_ResourceType YResource::BINARY;
const YResource_ResourceType YResource::IMAGE;
const YResource_ResourceType YResource::FLATBUFFER;
const YResource_ResourceType YResource::PROTOBUF;
const YResource_ResourceType YResource::CAPNP;
const YResource_ResourceType YResource::ResourceType_MIN;
const YResource_ResourceType YResource::ResourceType_MAX;
const int YResource::ResourceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* YMesh_MeshType_descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_enum_descriptors[1];
}
bool YMesh_MeshType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const YMesh_MeshType YMesh::Unknown;
const YMesh_MeshType YMesh::Editable_Mesh;
const YMesh_MeshType YMesh::Editable_Poly;
const YMesh_MeshType YMesh::Box;
const YMesh_MeshType YMesh::Sphere;
const YMesh_MeshType YMesh::GeoSphere;
const YMesh_MeshType YMesh::Cylinder;
const YMesh_MeshType YMesh::Tube;
const YMesh_MeshType YMesh::Torus;
const YMesh_MeshType YMesh::Pyramid;
const YMesh_MeshType YMesh::Teapot;
const YMesh_MeshType YMesh::Plane;
const YMesh_MeshType YMesh::Target;
const YMesh_MeshType YMesh::Cone;
const YMesh_MeshType YMesh::MeshType_MIN;
const YMesh_MeshType YMesh::MeshType_MAX;
const int YMesh::MeshType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* YMesh_XrefStatus_descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_enum_descriptors[2];
}
bool YMesh_XrefStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const YMesh_XrefStatus YMesh::ORIGINAL;
const YMesh_XrefStatus YMesh::XREF_HIGHT;
const YMesh_XrefStatus YMesh::XREF_LOW;
const YMesh_XrefStatus YMesh::XREF_LOW_DISPLAY;
const YMesh_XrefStatus YMesh::BOX;
const YMesh_XrefStatus YMesh::MERGED;
const YMesh_XrefStatus YMesh::FINAL;
const YMesh_XrefStatus YMesh::XrefStatus_MIN;
const YMesh_XrefStatus YMesh::XrefStatus_MAX;
const int YMesh::XrefStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LPoly3DMax_OpMode_descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_enum_descriptors[3];
}
bool LPoly3DMax_OpMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LPoly3DMax_OpMode LPoly3DMax::CRUNCH_BORDERS;
const LPoly3DMax_OpMode LPoly3DMax::PROTECT_BORDERS;
const LPoly3DMax_OpMode LPoly3DMax::EXCLUDE_BORDERS;
const LPoly3DMax_OpMode LPoly3DMax::OpMode_MIN;
const LPoly3DMax_OpMode LPoly3DMax::OpMode_MAX;
const int LPoly3DMax::OpMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LPoly3DMax_NormalMode_descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_enum_descriptors[4];
}
bool LPoly3DMax_NormalMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LPoly3DMax_NormalMode LPoly3DMax::CRUNCH_NORMALS;
const LPoly3DMax_NormalMode LPoly3DMax::PROTECT_NORMALS;
const LPoly3DMax_NormalMode LPoly3DMax::EXCLUDE_NORMALS;
const LPoly3DMax_NormalMode LPoly3DMax::NormalMode_MIN;
const LPoly3DMax_NormalMode LPoly3DMax::NormalMode_MAX;
const int LPoly3DMax::NormalMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* YWorker_ServingStatus_descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_enum_descriptors[5];
}
bool YWorker_ServingStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const YWorker_ServingStatus YWorker::UNKNOWN;
const YWorker_ServingStatus YWorker::SERVING;
const YWorker_ServingStatus YWorker::NOT_SERVING;
const YWorker_ServingStatus YWorker::ServingStatus_MIN;
const YWorker_ServingStatus YWorker::ServingStatus_MAX;
const int YWorker::ServingStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ObjectType_descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_enum_descriptors[6];
}
bool ObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GVerType_descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_enum_descriptors[7];
}
bool GVerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YPoint3::kXFieldNumber;
const int YPoint3::kYFieldNumber;
const int YPoint3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YPoint3::YPoint3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YPoint3)
}
YPoint3::YPoint3(const YPoint3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:y3d.YPoint3)
}

void YPoint3::SharedCtor() {
  ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
  _cached_size_ = 0;
}

YPoint3::~YPoint3() {
  // @@protoc_insertion_point(destructor:y3d.YPoint3)
  SharedDtor();
}

void YPoint3::SharedDtor() {
}

void YPoint3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YPoint3::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[0].descriptor;
}

const YPoint3& YPoint3::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YPoint3* YPoint3::New(::google::protobuf::Arena* arena) const {
  YPoint3* n = new YPoint3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YPoint3::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YPoint3)
  ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
}

bool YPoint3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YPoint3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (tag == 21u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (tag == 29u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YPoint3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YPoint3)
  return false;
#undef DO_
}

void YPoint3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YPoint3)
  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YPoint3)
}

::google::protobuf::uint8* YPoint3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YPoint3)
  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YPoint3)
  return target;
}

size_t YPoint3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YPoint3)
  size_t total_size = 0;

  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YPoint3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YPoint3)
  GOOGLE_DCHECK_NE(&from, this);
  const YPoint3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YPoint3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YPoint3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YPoint3)
    MergeFrom(*source);
  }
}

void YPoint3::MergeFrom(const YPoint3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YPoint3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void YPoint3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YPoint3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YPoint3::CopyFrom(const YPoint3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YPoint3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YPoint3::IsInitialized() const {
  return true;
}

void YPoint3::Swap(YPoint3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YPoint3::InternalSwap(YPoint3* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YPoint3::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YPoint3

// float x = 1;
void YPoint3::clear_x() {
  x_ = 0;
}
float YPoint3::x() const {
  // @@protoc_insertion_point(field_get:y3d.YPoint3.x)
  return x_;
}
void YPoint3::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:y3d.YPoint3.x)
}

// float y = 2;
void YPoint3::clear_y() {
  y_ = 0;
}
float YPoint3::y() const {
  // @@protoc_insertion_point(field_get:y3d.YPoint3.y)
  return y_;
}
void YPoint3::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:y3d.YPoint3.y)
}

// float z = 3;
void YPoint3::clear_z() {
  z_ = 0;
}
float YPoint3::z() const {
  // @@protoc_insertion_point(field_get:y3d.YPoint3.z)
  return z_;
}
void YPoint3::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:y3d.YPoint3.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YBox3::kPminFieldNumber;
const int YBox3::kPmaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YBox3::YBox3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YBox3)
}
YBox3::YBox3(const YBox3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmin()) {
    pmin_ = new ::y3d::YPoint3(*from.pmin_);
  } else {
    pmin_ = NULL;
  }
  if (from.has_pmax()) {
    pmax_ = new ::y3d::YPoint3(*from.pmax_);
  } else {
    pmax_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:y3d.YBox3)
}

void YBox3::SharedCtor() {
  ::memset(&pmin_, 0, reinterpret_cast<char*>(&pmax_) -
    reinterpret_cast<char*>(&pmin_) + sizeof(pmax_));
  _cached_size_ = 0;
}

YBox3::~YBox3() {
  // @@protoc_insertion_point(destructor:y3d.YBox3)
  SharedDtor();
}

void YBox3::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pmin_;
  }
  if (this != internal_default_instance()) {
    delete pmax_;
  }
}

void YBox3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YBox3::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[1].descriptor;
}

const YBox3& YBox3::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YBox3* YBox3::New(::google::protobuf::Arena* arena) const {
  YBox3* n = new YBox3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YBox3::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YBox3)
  if (GetArenaNoVirtual() == NULL && pmin_ != NULL) {
    delete pmin_;
  }
  pmin_ = NULL;
  if (GetArenaNoVirtual() == NULL && pmax_ != NULL) {
    delete pmax_;
  }
  pmax_ = NULL;
}

bool YBox3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YBox3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.YPoint3 pmin = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pmin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YPoint3 pmax = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pmax()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YBox3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YBox3)
  return false;
#undef DO_
}

void YBox3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YBox3)
  // .y3d.YPoint3 pmin = 1;
  if (this->has_pmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pmin_, output);
  }

  // .y3d.YPoint3 pmax = 2;
  if (this->has_pmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pmax_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YBox3)
}

::google::protobuf::uint8* YBox3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YBox3)
  // .y3d.YPoint3 pmin = 1;
  if (this->has_pmin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pmin_, false, target);
  }

  // .y3d.YPoint3 pmax = 2;
  if (this->has_pmax()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pmax_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YBox3)
  return target;
}

size_t YBox3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YBox3)
  size_t total_size = 0;

  // .y3d.YPoint3 pmin = 1;
  if (this->has_pmin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pmin_);
  }

  // .y3d.YPoint3 pmax = 2;
  if (this->has_pmax()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pmax_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YBox3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YBox3)
  GOOGLE_DCHECK_NE(&from, this);
  const YBox3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YBox3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YBox3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YBox3)
    MergeFrom(*source);
  }
}

void YBox3::MergeFrom(const YBox3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YBox3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmin()) {
    mutable_pmin()->::y3d::YPoint3::MergeFrom(from.pmin());
  }
  if (from.has_pmax()) {
    mutable_pmax()->::y3d::YPoint3::MergeFrom(from.pmax());
  }
}

void YBox3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YBox3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YBox3::CopyFrom(const YBox3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YBox3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YBox3::IsInitialized() const {
  return true;
}

void YBox3::Swap(YBox3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YBox3::InternalSwap(YBox3* other) {
  std::swap(pmin_, other->pmin_);
  std::swap(pmax_, other->pmax_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YBox3::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YBox3

// .y3d.YPoint3 pmin = 1;
bool YBox3::has_pmin() const {
  return this != internal_default_instance() && pmin_ != NULL;
}
void YBox3::clear_pmin() {
  if (GetArenaNoVirtual() == NULL && pmin_ != NULL) delete pmin_;
  pmin_ = NULL;
}
const ::y3d::YPoint3& YBox3::pmin() const {
  // @@protoc_insertion_point(field_get:y3d.YBox3.pmin)
  return pmin_ != NULL ? *pmin_
                         : *::y3d::YPoint3::internal_default_instance();
}
::y3d::YPoint3* YBox3::mutable_pmin() {
  
  if (pmin_ == NULL) {
    pmin_ = new ::y3d::YPoint3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YBox3.pmin)
  return pmin_;
}
::y3d::YPoint3* YBox3::release_pmin() {
  // @@protoc_insertion_point(field_release:y3d.YBox3.pmin)
  
  ::y3d::YPoint3* temp = pmin_;
  pmin_ = NULL;
  return temp;
}
void YBox3::set_allocated_pmin(::y3d::YPoint3* pmin) {
  delete pmin_;
  pmin_ = pmin;
  if (pmin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YBox3.pmin)
}

// .y3d.YPoint3 pmax = 2;
bool YBox3::has_pmax() const {
  return this != internal_default_instance() && pmax_ != NULL;
}
void YBox3::clear_pmax() {
  if (GetArenaNoVirtual() == NULL && pmax_ != NULL) delete pmax_;
  pmax_ = NULL;
}
const ::y3d::YPoint3& YBox3::pmax() const {
  // @@protoc_insertion_point(field_get:y3d.YBox3.pmax)
  return pmax_ != NULL ? *pmax_
                         : *::y3d::YPoint3::internal_default_instance();
}
::y3d::YPoint3* YBox3::mutable_pmax() {
  
  if (pmax_ == NULL) {
    pmax_ = new ::y3d::YPoint3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YBox3.pmax)
  return pmax_;
}
::y3d::YPoint3* YBox3::release_pmax() {
  // @@protoc_insertion_point(field_release:y3d.YBox3.pmax)
  
  ::y3d::YPoint3* temp = pmax_;
  pmax_ = NULL;
  return temp;
}
void YBox3::set_allocated_pmax(::y3d::YPoint3* pmax) {
  delete pmax_;
  pmax_ = pmax;
  if (pmax) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YBox3.pmax)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YResource::kRidFieldNumber;
const int YResource::kRtypeFieldNumber;
const int YResource::kLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YResource::YResource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YResource)
}
YResource::YResource(const YResource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rid().size() > 0) {
    rid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rid_);
  }
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link().size() > 0) {
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  rtype_ = from.rtype_;
  // @@protoc_insertion_point(copy_constructor:y3d.YResource)
}

void YResource::SharedCtor() {
  rid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rtype_ = 0;
  _cached_size_ = 0;
}

YResource::~YResource() {
  // @@protoc_insertion_point(destructor:y3d.YResource)
  SharedDtor();
}

void YResource::SharedDtor() {
  rid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YResource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YResource::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[2].descriptor;
}

const YResource& YResource::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YResource* YResource::New(::google::protobuf::Arena* arena) const {
  YResource* n = new YResource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YResource::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YResource)
  rid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rtype_ = 0;
}

bool YResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YResource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string rid = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rid().data(), this->rid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YResource.rid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YResource.ResourceType rtype = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rtype(static_cast< ::y3d::YResource_ResourceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string link = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link().data(), this->link().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YResource.link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YResource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YResource)
  return false;
#undef DO_
}

void YResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YResource)
  // string rid = 1;
  if (this->rid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rid().data(), this->rid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.rid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rid(), output);
  }

  // .y3d.YResource.ResourceType rtype = 2;
  if (this->rtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->rtype(), output);
  }

  // string link = 3;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->link(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YResource)
}

::google::protobuf::uint8* YResource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YResource)
  // string rid = 1;
  if (this->rid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rid().data(), this->rid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.rid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rid(), target);
  }

  // .y3d.YResource.ResourceType rtype = 2;
  if (this->rtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->rtype(), target);
  }

  // string link = 3;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->link(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YResource)
  return target;
}

size_t YResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YResource)
  size_t total_size = 0;

  // string rid = 1;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rid());
  }

  // string link = 3;
  if (this->link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link());
  }

  // .y3d.YResource.ResourceType rtype = 2;
  if (this->rtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YResource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YResource)
  GOOGLE_DCHECK_NE(&from, this);
  const YResource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YResource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YResource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YResource)
    MergeFrom(*source);
  }
}

void YResource::MergeFrom(const YResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YResource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.rid().size() > 0) {

    rid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rid_);
  }
  if (from.link().size() > 0) {

    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  if (from.rtype() != 0) {
    set_rtype(from.rtype());
  }
}

void YResource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YResource::CopyFrom(const YResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YResource::IsInitialized() const {
  return true;
}

void YResource::Swap(YResource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YResource::InternalSwap(YResource* other) {
  rid_.Swap(&other->rid_);
  link_.Swap(&other->link_);
  std::swap(rtype_, other->rtype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YResource::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YResource

// string rid = 1;
void YResource::clear_rid() {
  rid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YResource::rid() const {
  // @@protoc_insertion_point(field_get:y3d.YResource.rid)
  return rid_.GetNoArena();
}
void YResource::set_rid(const ::std::string& value) {
  
  rid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YResource.rid)
}
#if LANG_CXX11
void YResource::set_rid(::std::string&& value) {
  
  rid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YResource.rid)
}
#endif
void YResource::set_rid(const char* value) {
  
  rid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YResource.rid)
}
void YResource::set_rid(const char* value, size_t size) {
  
  rid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YResource.rid)
}
::std::string* YResource::mutable_rid() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YResource.rid)
  return rid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YResource::release_rid() {
  // @@protoc_insertion_point(field_release:y3d.YResource.rid)
  
  return rid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YResource::set_allocated_rid(::std::string* rid) {
  if (rid != NULL) {
    
  } else {
    
  }
  rid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rid);
  // @@protoc_insertion_point(field_set_allocated:y3d.YResource.rid)
}

// .y3d.YResource.ResourceType rtype = 2;
void YResource::clear_rtype() {
  rtype_ = 0;
}
::y3d::YResource_ResourceType YResource::rtype() const {
  // @@protoc_insertion_point(field_get:y3d.YResource.rtype)
  return static_cast< ::y3d::YResource_ResourceType >(rtype_);
}
void YResource::set_rtype(::y3d::YResource_ResourceType value) {
  
  rtype_ = value;
  // @@protoc_insertion_point(field_set:y3d.YResource.rtype)
}

// string link = 3;
void YResource::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YResource::link() const {
  // @@protoc_insertion_point(field_get:y3d.YResource.link)
  return link_.GetNoArena();
}
void YResource::set_link(const ::std::string& value) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YResource.link)
}
#if LANG_CXX11
void YResource::set_link(::std::string&& value) {
  
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YResource.link)
}
#endif
void YResource::set_link(const char* value) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YResource.link)
}
void YResource::set_link(const char* value, size_t size) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YResource.link)
}
::std::string* YResource::mutable_link() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YResource.link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YResource::release_link() {
  // @@protoc_insertion_point(field_release:y3d.YResource.link)
  
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YResource::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    
  } else {
    
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:y3d.YResource.link)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YLight::kDiffuseFieldNumber;
const int YLight::kSpecularFieldNumber;
const int YLight::kIntensityFieldNumber;
const int YLight::kRangeFieldNumber;
const int YLight::kAngleFieldNumber;
const int YLight::kExponentFieldNumber;
const int YLight::kExcludedMeshesIdsFieldNumber;
const int YLight::kIncludedOnlyMeshesIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YLight::YLight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YLight)
}
YLight::YLight(const YLight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      diffuse_(from.diffuse_),
      specular_(from.specular_),
      excludedmeshesids_(from.excludedmeshesids_),
      includedonlymeshesids_(from.includedonlymeshesids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&intensity_, &from.intensity_,
    reinterpret_cast<char*>(&exponent_) -
    reinterpret_cast<char*>(&intensity_) + sizeof(exponent_));
  // @@protoc_insertion_point(copy_constructor:y3d.YLight)
}

void YLight::SharedCtor() {
  ::memset(&intensity_, 0, reinterpret_cast<char*>(&exponent_) -
    reinterpret_cast<char*>(&intensity_) + sizeof(exponent_));
  _cached_size_ = 0;
}

YLight::~YLight() {
  // @@protoc_insertion_point(destructor:y3d.YLight)
  SharedDtor();
}

void YLight::SharedDtor() {
}

void YLight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YLight::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[3].descriptor;
}

const YLight& YLight::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YLight* YLight::New(::google::protobuf::Arena* arena) const {
  YLight* n = new YLight;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YLight::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YLight)
  diffuse_.Clear();
  specular_.Clear();
  excludedmeshesids_.Clear();
  includedonlymeshesids_.Clear();
  ::memset(&intensity_, 0, reinterpret_cast<char*>(&exponent_) -
    reinterpret_cast<char*>(&intensity_) + sizeof(exponent_));
}

bool YLight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YLight)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float diffuse = 3;
      case 3: {
        if (tag == 26u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_diffuse())));
        } else if (tag == 29u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_diffuse())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float specular = 4;
      case 4: {
        if (tag == 34u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_specular())));
        } else if (tag == 37u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_specular())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float intensity = 5;
      case 5: {
        if (tag == 45u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &intensity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float range = 6;
      case 6: {
        if (tag == 53u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 7;
      case 7: {
        if (tag == 61u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float exponent = 8;
      case 8: {
        if (tag == 69u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &exponent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string excludedMeshesIds = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_excludedmeshesids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->excludedmeshesids(this->excludedmeshesids_size() - 1).data(),
            this->excludedmeshesids(this->excludedmeshesids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YLight.excludedMeshesIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string includedOnlyMeshesIds = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_includedonlymeshesids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->includedonlymeshesids(this->includedonlymeshesids_size() - 1).data(),
            this->includedonlymeshesids(this->includedonlymeshesids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YLight.includedOnlyMeshesIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YLight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YLight)
  return false;
#undef DO_
}

void YLight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YLight)
  // repeated float diffuse = 3;
  if (this->diffuse_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_diffuse_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->diffuse().data(), this->diffuse_size(), output);
  }

  // repeated float specular = 4;
  if (this->specular_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_specular_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->specular().data(), this->specular_size(), output);
  }

  // float intensity = 5;
  if (this->intensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->intensity(), output);
  }

  // float range = 6;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->range(), output);
  }

  // float angle = 7;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->angle(), output);
  }

  // float exponent = 8;
  if (this->exponent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->exponent(), output);
  }

  // repeated string excludedMeshesIds = 9;
  for (int i = 0; i < this->excludedmeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->excludedmeshesids(i).data(), this->excludedmeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.excludedMeshesIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->excludedmeshesids(i), output);
  }

  // repeated string includedOnlyMeshesIds = 10;
  for (int i = 0; i < this->includedonlymeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->includedonlymeshesids(i).data(), this->includedonlymeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.includedOnlyMeshesIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->includedonlymeshesids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YLight)
}

::google::protobuf::uint8* YLight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YLight)
  // repeated float diffuse = 3;
  if (this->diffuse_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _diffuse_cached_byte_size_, target);
  }
  for (int i = 0; i < this->diffuse_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->diffuse(i), target);
  }

  // repeated float specular = 4;
  if (this->specular_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _specular_cached_byte_size_, target);
  }
  for (int i = 0; i < this->specular_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->specular(i), target);
  }

  // float intensity = 5;
  if (this->intensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->intensity(), target);
  }

  // float range = 6;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->range(), target);
  }

  // float angle = 7;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->angle(), target);
  }

  // float exponent = 8;
  if (this->exponent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->exponent(), target);
  }

  // repeated string excludedMeshesIds = 9;
  for (int i = 0; i < this->excludedmeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->excludedmeshesids(i).data(), this->excludedmeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.excludedMeshesIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->excludedmeshesids(i), target);
  }

  // repeated string includedOnlyMeshesIds = 10;
  for (int i = 0; i < this->includedonlymeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->includedonlymeshesids(i).data(), this->includedonlymeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.includedOnlyMeshesIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->includedonlymeshesids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YLight)
  return target;
}

size_t YLight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YLight)
  size_t total_size = 0;

  // repeated float diffuse = 3;
  {
    unsigned int count = this->diffuse_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _diffuse_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float specular = 4;
  {
    unsigned int count = this->specular_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _specular_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string excludedMeshesIds = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->excludedmeshesids_size());
  for (int i = 0; i < this->excludedmeshesids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->excludedmeshesids(i));
  }

  // repeated string includedOnlyMeshesIds = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->includedonlymeshesids_size());
  for (int i = 0; i < this->includedonlymeshesids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->includedonlymeshesids(i));
  }

  // float intensity = 5;
  if (this->intensity() != 0) {
    total_size += 1 + 4;
  }

  // float range = 6;
  if (this->range() != 0) {
    total_size += 1 + 4;
  }

  // float angle = 7;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // float exponent = 8;
  if (this->exponent() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YLight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YLight)
  GOOGLE_DCHECK_NE(&from, this);
  const YLight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YLight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YLight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YLight)
    MergeFrom(*source);
  }
}

void YLight::MergeFrom(const YLight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YLight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  diffuse_.MergeFrom(from.diffuse_);
  specular_.MergeFrom(from.specular_);
  excludedmeshesids_.MergeFrom(from.excludedmeshesids_);
  includedonlymeshesids_.MergeFrom(from.includedonlymeshesids_);
  if (from.intensity() != 0) {
    set_intensity(from.intensity());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.exponent() != 0) {
    set_exponent(from.exponent());
  }
}

void YLight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YLight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YLight::CopyFrom(const YLight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YLight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YLight::IsInitialized() const {
  return true;
}

void YLight::Swap(YLight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YLight::InternalSwap(YLight* other) {
  diffuse_.UnsafeArenaSwap(&other->diffuse_);
  specular_.UnsafeArenaSwap(&other->specular_);
  excludedmeshesids_.UnsafeArenaSwap(&other->excludedmeshesids_);
  includedonlymeshesids_.UnsafeArenaSwap(&other->includedonlymeshesids_);
  std::swap(intensity_, other->intensity_);
  std::swap(range_, other->range_);
  std::swap(angle_, other->angle_);
  std::swap(exponent_, other->exponent_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YLight::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YLight

// repeated float diffuse = 3;
int YLight::diffuse_size() const {
  return diffuse_.size();
}
void YLight::clear_diffuse() {
  diffuse_.Clear();
}
float YLight::diffuse(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.diffuse)
  return diffuse_.Get(index);
}
void YLight::set_diffuse(int index, float value) {
  diffuse_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YLight.diffuse)
}
void YLight::add_diffuse(float value) {
  diffuse_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.diffuse)
}
const ::google::protobuf::RepeatedField< float >&
YLight::diffuse() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.diffuse)
  return diffuse_;
}
::google::protobuf::RepeatedField< float >*
YLight::mutable_diffuse() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.diffuse)
  return &diffuse_;
}

// repeated float specular = 4;
int YLight::specular_size() const {
  return specular_.size();
}
void YLight::clear_specular() {
  specular_.Clear();
}
float YLight::specular(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.specular)
  return specular_.Get(index);
}
void YLight::set_specular(int index, float value) {
  specular_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YLight.specular)
}
void YLight::add_specular(float value) {
  specular_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.specular)
}
const ::google::protobuf::RepeatedField< float >&
YLight::specular() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.specular)
  return specular_;
}
::google::protobuf::RepeatedField< float >*
YLight::mutable_specular() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.specular)
  return &specular_;
}

// float intensity = 5;
void YLight::clear_intensity() {
  intensity_ = 0;
}
float YLight::intensity() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.intensity)
  return intensity_;
}
void YLight::set_intensity(float value) {
  
  intensity_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.intensity)
}

// float range = 6;
void YLight::clear_range() {
  range_ = 0;
}
float YLight::range() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.range)
  return range_;
}
void YLight::set_range(float value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.range)
}

// float angle = 7;
void YLight::clear_angle() {
  angle_ = 0;
}
float YLight::angle() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.angle)
  return angle_;
}
void YLight::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.angle)
}

// float exponent = 8;
void YLight::clear_exponent() {
  exponent_ = 0;
}
float YLight::exponent() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.exponent)
  return exponent_;
}
void YLight::set_exponent(float value) {
  
  exponent_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.exponent)
}

// repeated string excludedMeshesIds = 9;
int YLight::excludedmeshesids_size() const {
  return excludedmeshesids_.size();
}
void YLight::clear_excludedmeshesids() {
  excludedmeshesids_.Clear();
}
const ::std::string& YLight::excludedmeshesids(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_.Get(index);
}
::std::string* YLight::mutable_excludedmeshesids(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_.Mutable(index);
}
void YLight::set_excludedmeshesids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YLight.excludedMeshesIds)
  excludedmeshesids_.Mutable(index)->assign(value);
}
void YLight::set_excludedmeshesids(int index, const char* value) {
  excludedmeshesids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YLight.excludedMeshesIds)
}
void YLight::set_excludedmeshesids(int index, const char* value, size_t size) {
  excludedmeshesids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YLight.excludedMeshesIds)
}
::std::string* YLight::add_excludedmeshesids() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_.Add();
}
void YLight::add_excludedmeshesids(const ::std::string& value) {
  excludedmeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.excludedMeshesIds)
}
void YLight::add_excludedmeshesids(const char* value) {
  excludedmeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YLight.excludedMeshesIds)
}
void YLight::add_excludedmeshesids(const char* value, size_t size) {
  excludedmeshesids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YLight.excludedMeshesIds)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
YLight::excludedmeshesids() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
YLight::mutable_excludedmeshesids() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.excludedMeshesIds)
  return &excludedmeshesids_;
}

// repeated string includedOnlyMeshesIds = 10;
int YLight::includedonlymeshesids_size() const {
  return includedonlymeshesids_.size();
}
void YLight::clear_includedonlymeshesids() {
  includedonlymeshesids_.Clear();
}
const ::std::string& YLight::includedonlymeshesids(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_.Get(index);
}
::std::string* YLight::mutable_includedonlymeshesids(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_.Mutable(index);
}
void YLight::set_includedonlymeshesids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YLight.includedOnlyMeshesIds)
  includedonlymeshesids_.Mutable(index)->assign(value);
}
void YLight::set_includedonlymeshesids(int index, const char* value) {
  includedonlymeshesids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YLight.includedOnlyMeshesIds)
}
void YLight::set_includedonlymeshesids(int index, const char* value, size_t size) {
  includedonlymeshesids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YLight.includedOnlyMeshesIds)
}
::std::string* YLight::add_includedonlymeshesids() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_.Add();
}
void YLight::add_includedonlymeshesids(const ::std::string& value) {
  includedonlymeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.includedOnlyMeshesIds)
}
void YLight::add_includedonlymeshesids(const char* value) {
  includedonlymeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YLight.includedOnlyMeshesIds)
}
void YLight::add_includedonlymeshesids(const char* value, size_t size) {
  includedonlymeshesids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YLight.includedOnlyMeshesIds)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
YLight::includedonlymeshesids() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
YLight::mutable_includedonlymeshesids() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.includedOnlyMeshesIds)
  return &includedonlymeshesids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YCamera::kRotationFieldNumber;
const int YCamera::kTargetFieldNumber;
const int YCamera::kFovFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YCamera::YCamera()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YCamera)
}
YCamera::YCamera(const YCamera& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rotation_(from.rotation_),
      target_(from.target_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fov_ = from.fov_;
  // @@protoc_insertion_point(copy_constructor:y3d.YCamera)
}

void YCamera::SharedCtor() {
  fov_ = 0;
  _cached_size_ = 0;
}

YCamera::~YCamera() {
  // @@protoc_insertion_point(destructor:y3d.YCamera)
  SharedDtor();
}

void YCamera::SharedDtor() {
}

void YCamera::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YCamera::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[4].descriptor;
}

const YCamera& YCamera::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YCamera* YCamera::New(::google::protobuf::Arena* arena) const {
  YCamera* n = new YCamera;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YCamera::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YCamera)
  rotation_.Clear();
  target_.Clear();
  fov_ = 0;
}

bool YCamera::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YCamera)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float rotation = 3;
      case 3: {
        if (tag == 26u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rotation())));
        } else if (tag == 29u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_rotation())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float target = 4;
      case 4: {
        if (tag == 34u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_target())));
        } else if (tag == 37u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_target())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fov = 5;
      case 5: {
        if (tag == 45u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fov_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YCamera)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YCamera)
  return false;
#undef DO_
}

void YCamera::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YCamera)
  // repeated float rotation = 3;
  if (this->rotation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_rotation_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->rotation().data(), this->rotation_size(), output);
  }

  // repeated float target = 4;
  if (this->target_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_target_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->target().data(), this->target_size(), output);
  }

  // float fov = 5;
  if (this->fov() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->fov(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YCamera)
}

::google::protobuf::uint8* YCamera::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YCamera)
  // repeated float rotation = 3;
  if (this->rotation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _rotation_cached_byte_size_, target);
  }
  for (int i = 0; i < this->rotation_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->rotation(i), target);
  }

  // repeated float target = 4;
  if (this->target_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _target_cached_byte_size_, target);
  }
  for (int i = 0; i < this->target_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->target(i), target);
  }

  // float fov = 5;
  if (this->fov() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->fov(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YCamera)
  return target;
}

size_t YCamera::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YCamera)
  size_t total_size = 0;

  // repeated float rotation = 3;
  {
    unsigned int count = this->rotation_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rotation_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float target = 4;
  {
    unsigned int count = this->target_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // float fov = 5;
  if (this->fov() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YCamera::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YCamera)
  GOOGLE_DCHECK_NE(&from, this);
  const YCamera* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YCamera>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YCamera)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YCamera)
    MergeFrom(*source);
  }
}

void YCamera::MergeFrom(const YCamera& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YCamera)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rotation_.MergeFrom(from.rotation_);
  target_.MergeFrom(from.target_);
  if (from.fov() != 0) {
    set_fov(from.fov());
  }
}

void YCamera::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YCamera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YCamera::CopyFrom(const YCamera& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YCamera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YCamera::IsInitialized() const {
  return true;
}

void YCamera::Swap(YCamera* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YCamera::InternalSwap(YCamera* other) {
  rotation_.UnsafeArenaSwap(&other->rotation_);
  target_.UnsafeArenaSwap(&other->target_);
  std::swap(fov_, other->fov_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YCamera::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YCamera

// repeated float rotation = 3;
int YCamera::rotation_size() const {
  return rotation_.size();
}
void YCamera::clear_rotation() {
  rotation_.Clear();
}
float YCamera::rotation(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YCamera.rotation)
  return rotation_.Get(index);
}
void YCamera::set_rotation(int index, float value) {
  rotation_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YCamera.rotation)
}
void YCamera::add_rotation(float value) {
  rotation_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YCamera.rotation)
}
const ::google::protobuf::RepeatedField< float >&
YCamera::rotation() const {
  // @@protoc_insertion_point(field_list:y3d.YCamera.rotation)
  return rotation_;
}
::google::protobuf::RepeatedField< float >*
YCamera::mutable_rotation() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YCamera.rotation)
  return &rotation_;
}

// repeated float target = 4;
int YCamera::target_size() const {
  return target_.size();
}
void YCamera::clear_target() {
  target_.Clear();
}
float YCamera::target(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YCamera.target)
  return target_.Get(index);
}
void YCamera::set_target(int index, float value) {
  target_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YCamera.target)
}
void YCamera::add_target(float value) {
  target_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YCamera.target)
}
const ::google::protobuf::RepeatedField< float >&
YCamera::target() const {
  // @@protoc_insertion_point(field_list:y3d.YCamera.target)
  return target_;
}
::google::protobuf::RepeatedField< float >*
YCamera::mutable_target() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YCamera.target)
  return &target_;
}

// float fov = 5;
void YCamera::clear_fov() {
  fov_ = 0;
}
float YCamera::fov() const {
  // @@protoc_insertion_point(field_get:y3d.YCamera.fov)
  return fov_;
}
void YCamera::set_fov(float value) {
  
  fov_ = value;
  // @@protoc_insertion_point(field_set:y3d.YCamera.fov)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YMesh::kNumFacesFieldNumber;
const int YMesh::kBboxFieldNumber;
const int YMesh::kResFieldNumber;
const int YMesh::kXstatusFieldNumber;
const int YMesh::kMtypeFieldNumber;
const int YMesh::kVernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YMesh::YMesh()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YMesh)
}
YMesh::YMesh(const YMesh& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vername().size() > 0) {
    vername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vername_);
  }
  if (from.has_bbox()) {
    bbox_ = new ::y3d::YBox3(*from.bbox_);
  } else {
    bbox_ = NULL;
  }
  if (from.has_res()) {
    res_ = new ::y3d::YResource(*from.res_);
  } else {
    res_ = NULL;
  }
  ::memcpy(&num_faces_, &from.num_faces_,
    reinterpret_cast<char*>(&mtype_) -
    reinterpret_cast<char*>(&num_faces_) + sizeof(mtype_));
  // @@protoc_insertion_point(copy_constructor:y3d.YMesh)
}

void YMesh::SharedCtor() {
  vername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bbox_, 0, reinterpret_cast<char*>(&mtype_) -
    reinterpret_cast<char*>(&bbox_) + sizeof(mtype_));
  _cached_size_ = 0;
}

YMesh::~YMesh() {
  // @@protoc_insertion_point(destructor:y3d.YMesh)
  SharedDtor();
}

void YMesh::SharedDtor() {
  vername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete bbox_;
  }
  if (this != internal_default_instance()) {
    delete res_;
  }
}

void YMesh::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YMesh::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[5].descriptor;
}

const YMesh& YMesh::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YMesh* YMesh::New(::google::protobuf::Arena* arena) const {
  YMesh* n = new YMesh;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YMesh::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YMesh)
  vername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && bbox_ != NULL) {
    delete bbox_;
  }
  bbox_ = NULL;
  if (GetArenaNoVirtual() == NULL && res_ != NULL) {
    delete res_;
  }
  res_ = NULL;
  ::memset(&num_faces_, 0, reinterpret_cast<char*>(&mtype_) -
    reinterpret_cast<char*>(&num_faces_) + sizeof(mtype_));
}

bool YMesh::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YMesh)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_faces = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_faces_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YBox3 bbox = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bbox()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YResource res = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YMesh.XrefStatus xstatus = 5;
      case 5: {
        if (tag == 40u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_xstatus(static_cast< ::y3d::YMesh_XrefStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YMesh.MeshType mtype = 6;
      case 6: {
        if (tag == 48u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mtype(static_cast< ::y3d::YMesh_MeshType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vername = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vername().data(), this->vername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YMesh.vername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YMesh)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YMesh)
  return false;
#undef DO_
}

void YMesh::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YMesh)
  // int32 num_faces = 1;
  if (this->num_faces() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_faces(), output);
  }

  // .y3d.YBox3 bbox = 2;
  if (this->has_bbox()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->bbox_, output);
  }

  // .y3d.YResource res = 3;
  if (this->has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->res_, output);
  }

  // .y3d.YMesh.XrefStatus xstatus = 5;
  if (this->xstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->xstatus(), output);
  }

  // .y3d.YMesh.MeshType mtype = 6;
  if (this->mtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->mtype(), output);
  }

  // string vername = 7;
  if (this->vername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vername().data(), this->vername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMesh.vername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->vername(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YMesh)
}

::google::protobuf::uint8* YMesh::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YMesh)
  // int32 num_faces = 1;
  if (this->num_faces() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_faces(), target);
  }

  // .y3d.YBox3 bbox = 2;
  if (this->has_bbox()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->bbox_, false, target);
  }

  // .y3d.YResource res = 3;
  if (this->has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->res_, false, target);
  }

  // .y3d.YMesh.XrefStatus xstatus = 5;
  if (this->xstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->xstatus(), target);
  }

  // .y3d.YMesh.MeshType mtype = 6;
  if (this->mtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->mtype(), target);
  }

  // string vername = 7;
  if (this->vername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vername().data(), this->vername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMesh.vername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->vername(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YMesh)
  return target;
}

size_t YMesh::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YMesh)
  size_t total_size = 0;

  // string vername = 7;
  if (this->vername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vername());
  }

  // .y3d.YBox3 bbox = 2;
  if (this->has_bbox()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bbox_);
  }

  // .y3d.YResource res = 3;
  if (this->has_res()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_);
  }

  // int32 num_faces = 1;
  if (this->num_faces() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_faces());
  }

  // .y3d.YMesh.XrefStatus xstatus = 5;
  if (this->xstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->xstatus());
  }

  // .y3d.YMesh.MeshType mtype = 6;
  if (this->mtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YMesh::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YMesh)
  GOOGLE_DCHECK_NE(&from, this);
  const YMesh* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YMesh>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YMesh)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YMesh)
    MergeFrom(*source);
  }
}

void YMesh::MergeFrom(const YMesh& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YMesh)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vername().size() > 0) {

    vername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vername_);
  }
  if (from.has_bbox()) {
    mutable_bbox()->::y3d::YBox3::MergeFrom(from.bbox());
  }
  if (from.has_res()) {
    mutable_res()->::y3d::YResource::MergeFrom(from.res());
  }
  if (from.num_faces() != 0) {
    set_num_faces(from.num_faces());
  }
  if (from.xstatus() != 0) {
    set_xstatus(from.xstatus());
  }
  if (from.mtype() != 0) {
    set_mtype(from.mtype());
  }
}

void YMesh::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YMesh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YMesh::CopyFrom(const YMesh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YMesh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YMesh::IsInitialized() const {
  return true;
}

void YMesh::Swap(YMesh* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YMesh::InternalSwap(YMesh* other) {
  vername_.Swap(&other->vername_);
  std::swap(bbox_, other->bbox_);
  std::swap(res_, other->res_);
  std::swap(num_faces_, other->num_faces_);
  std::swap(xstatus_, other->xstatus_);
  std::swap(mtype_, other->mtype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YMesh::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YMesh

// int32 num_faces = 1;
void YMesh::clear_num_faces() {
  num_faces_ = 0;
}
::google::protobuf::int32 YMesh::num_faces() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.num_faces)
  return num_faces_;
}
void YMesh::set_num_faces(::google::protobuf::int32 value) {
  
  num_faces_ = value;
  // @@protoc_insertion_point(field_set:y3d.YMesh.num_faces)
}

// .y3d.YBox3 bbox = 2;
bool YMesh::has_bbox() const {
  return this != internal_default_instance() && bbox_ != NULL;
}
void YMesh::clear_bbox() {
  if (GetArenaNoVirtual() == NULL && bbox_ != NULL) delete bbox_;
  bbox_ = NULL;
}
const ::y3d::YBox3& YMesh::bbox() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.bbox)
  return bbox_ != NULL ? *bbox_
                         : *::y3d::YBox3::internal_default_instance();
}
::y3d::YBox3* YMesh::mutable_bbox() {
  
  if (bbox_ == NULL) {
    bbox_ = new ::y3d::YBox3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YMesh.bbox)
  return bbox_;
}
::y3d::YBox3* YMesh::release_bbox() {
  // @@protoc_insertion_point(field_release:y3d.YMesh.bbox)
  
  ::y3d::YBox3* temp = bbox_;
  bbox_ = NULL;
  return temp;
}
void YMesh::set_allocated_bbox(::y3d::YBox3* bbox) {
  delete bbox_;
  bbox_ = bbox;
  if (bbox) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YMesh.bbox)
}

// .y3d.YResource res = 3;
bool YMesh::has_res() const {
  return this != internal_default_instance() && res_ != NULL;
}
void YMesh::clear_res() {
  if (GetArenaNoVirtual() == NULL && res_ != NULL) delete res_;
  res_ = NULL;
}
const ::y3d::YResource& YMesh::res() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.res)
  return res_ != NULL ? *res_
                         : *::y3d::YResource::internal_default_instance();
}
::y3d::YResource* YMesh::mutable_res() {
  
  if (res_ == NULL) {
    res_ = new ::y3d::YResource;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YMesh.res)
  return res_;
}
::y3d::YResource* YMesh::release_res() {
  // @@protoc_insertion_point(field_release:y3d.YMesh.res)
  
  ::y3d::YResource* temp = res_;
  res_ = NULL;
  return temp;
}
void YMesh::set_allocated_res(::y3d::YResource* res) {
  delete res_;
  res_ = res;
  if (res) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YMesh.res)
}

// .y3d.YMesh.XrefStatus xstatus = 5;
void YMesh::clear_xstatus() {
  xstatus_ = 0;
}
::y3d::YMesh_XrefStatus YMesh::xstatus() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.xstatus)
  return static_cast< ::y3d::YMesh_XrefStatus >(xstatus_);
}
void YMesh::set_xstatus(::y3d::YMesh_XrefStatus value) {
  
  xstatus_ = value;
  // @@protoc_insertion_point(field_set:y3d.YMesh.xstatus)
}

// .y3d.YMesh.MeshType mtype = 6;
void YMesh::clear_mtype() {
  mtype_ = 0;
}
::y3d::YMesh_MeshType YMesh::mtype() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.mtype)
  return static_cast< ::y3d::YMesh_MeshType >(mtype_);
}
void YMesh::set_mtype(::y3d::YMesh_MeshType value) {
  
  mtype_ = value;
  // @@protoc_insertion_point(field_set:y3d.YMesh.mtype)
}

// string vername = 7;
void YMesh::clear_vername() {
  vername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YMesh::vername() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.vername)
  return vername_.GetNoArena();
}
void YMesh::set_vername(const ::std::string& value) {
  
  vername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YMesh.vername)
}
#if LANG_CXX11
void YMesh::set_vername(::std::string&& value) {
  
  vername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YMesh.vername)
}
#endif
void YMesh::set_vername(const char* value) {
  
  vername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YMesh.vername)
}
void YMesh::set_vername(const char* value, size_t size) {
  
  vername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YMesh.vername)
}
::std::string* YMesh::mutable_vername() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YMesh.vername)
  return vername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YMesh::release_vername() {
  // @@protoc_insertion_point(field_release:y3d.YMesh.vername)
  
  return vername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YMesh::set_allocated_vername(::std::string* vername) {
  if (vername != NULL) {
    
  } else {
    
  }
  vername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vername);
  // @@protoc_insertion_point(field_set_allocated:y3d.YMesh.vername)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YObject::kNameFieldNumber;
const int YObject::kPosFieldNumber;
const int YObject::kExtraFieldNumber;
const int YObject::kOtypeFieldNumber;
const int YObject::kTagsFieldNumber;
const int YObject::kCateIdFieldNumber;
const int YObject::kLightFieldNumber;
const int YObject::kCameraFieldNumber;
const int YObject::kMeshFieldNumber;
const int YObject::kVerObjFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YObject::YObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YObject)
}
YObject::YObject(const YObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tags_(from.tags_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& YObject_ExtraEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[6].descriptor;
  extra_.SetAssignDescriptorCallback(
      protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce);
  extra_.SetEntryDescriptor(
      &YObject_ExtraEntry_descriptor);
  extra_.MergeFrom(from.extra_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_pos()) {
    pos_ = new ::y3d::YPoint3(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_ver_obj()) {
    ver_obj_ = new ::y3d::TestObject(*from.ver_obj_);
  } else {
    ver_obj_ = NULL;
  }
  ::memcpy(&otype_, &from.otype_,
    reinterpret_cast<char*>(&cate_id_) -
    reinterpret_cast<char*>(&otype_) + sizeof(cate_id_));
  clear_has_data();
  switch (from.data_case()) {
    case kLight: {
      mutable_light()->::y3d::YLight::MergeFrom(from.light());
      break;
    }
    case kCamera: {
      mutable_camera()->::y3d::YCamera::MergeFrom(from.camera());
      break;
    }
    case kMesh: {
      mutable_mesh()->::y3d::YMesh::MergeFrom(from.mesh());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:y3d.YObject)
}

void YObject::SharedCtor() {
  const ::google::protobuf::Descriptor*& YObject_ExtraEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[6].descriptor;
  extra_.SetAssignDescriptorCallback(
      protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce);
  extra_.SetEntryDescriptor(
      &YObject_ExtraEntry_descriptor);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, reinterpret_cast<char*>(&cate_id_) -
    reinterpret_cast<char*>(&pos_) + sizeof(cate_id_));
  clear_has_data();
  _cached_size_ = 0;
}

YObject::~YObject() {
  // @@protoc_insertion_point(destructor:y3d.YObject)
  SharedDtor();
}

void YObject::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete pos_;
  }
  if (this != internal_default_instance()) {
    delete ver_obj_;
  }
  if (has_data()) {
    clear_data();
  }
}

void YObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YObject::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[7].descriptor;
}

const YObject& YObject::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YObject* YObject::New(::google::protobuf::Arena* arena) const {
  YObject* n = new YObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YObject::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:y3d.YObject)
  switch (data_case()) {
    case kLight: {
      delete data_.light_;
      break;
    }
    case kCamera: {
      delete data_.camera_;
      break;
    }
    case kMesh: {
      delete data_.mesh_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void YObject::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YObject)
  extra_.Clear();
  tags_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && ver_obj_ != NULL) {
    delete ver_obj_;
  }
  ver_obj_ = NULL;
  ::memset(&otype_, 0, reinterpret_cast<char*>(&cate_id_) -
    reinterpret_cast<char*>(&otype_) + sizeof(cate_id_));
  clear_data();
}

bool YObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YObject.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YPoint3 pos = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.protobuf.Any> extra = 5;
      case 5: {
        if (tag == 42u) {
          DO_(input->IncrementRecursionDepth());
          YObject_ExtraEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::protobuf::Any,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Any > > parser(&extra_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YObject.ExtraEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .y3d.ObjectType otype = 6;
      case 6: {
        if (tag == 48u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_otype(static_cast< ::y3d::ObjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YObject.tags"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cate_id = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cate_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YLight light = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_light()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YCamera camera = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_camera()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YMesh mesh = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mesh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.TestObject ver_obj = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ver_obj()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YObject)
  return false;
#undef DO_
}

void YObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YObject)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .y3d.YPoint3 pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  // map<string, .google.protobuf.Any> extra = 5;
  if (!this->extra().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YObject.ExtraEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->extra().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->extra().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(extra_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it) {
        entry.reset(extra_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .y3d.ObjectType otype = 6;
  if (this->otype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->otype(), output);
  }

  // repeated string tags = 7;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->tags(i), output);
  }

  // int32 cate_id = 8;
  if (this->cate_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->cate_id(), output);
  }

  // .y3d.YLight light = 10;
  if (has_light()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *data_.light_, output);
  }

  // .y3d.YCamera camera = 11;
  if (has_camera()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *data_.camera_, output);
  }

  // .y3d.YMesh mesh = 12;
  if (has_mesh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *data_.mesh_, output);
  }

  // .y3d.TestObject ver_obj = 13;
  if (this->has_ver_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->ver_obj_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YObject)
}

::google::protobuf::uint8* YObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YObject)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .y3d.YPoint3 pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pos_, false, target);
  }

  // map<string, .google.protobuf.Any> extra = 5;
  if (!this->extra().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YObject.ExtraEntry.key");
      }
    };

    if (deterministic &&
        this->extra().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->extra().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(extra_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it) {
        entry.reset(extra_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .y3d.ObjectType otype = 6;
  if (this->otype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->otype(), target);
  }

  // repeated string tags = 7;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->tags(i), target);
  }

  // int32 cate_id = 8;
  if (this->cate_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->cate_id(), target);
  }

  // .y3d.YLight light = 10;
  if (has_light()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *data_.light_, false, target);
  }

  // .y3d.YCamera camera = 11;
  if (has_camera()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *data_.camera_, false, target);
  }

  // .y3d.YMesh mesh = 12;
  if (has_mesh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *data_.mesh_, false, target);
  }

  // .y3d.TestObject ver_obj = 13;
  if (this->has_ver_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->ver_obj_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YObject)
  return target;
}

size_t YObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YObject)
  size_t total_size = 0;

  // map<string, .google.protobuf.Any> extra = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->extra_size());
  {
    ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
        it = this->extra().begin();
        it != this->extra().end(); ++it) {
      entry.reset(extra_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string tags = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0; i < this->tags_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .y3d.YPoint3 pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // .y3d.TestObject ver_obj = 13;
  if (this->has_ver_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ver_obj_);
  }

  // .y3d.ObjectType otype = 6;
  if (this->otype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->otype());
  }

  // int32 cate_id = 8;
  if (this->cate_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cate_id());
  }

  switch (data_case()) {
    // .y3d.YLight light = 10;
    case kLight: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_.light_);
      break;
    }
    // .y3d.YCamera camera = 11;
    case kCamera: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_.camera_);
      break;
    }
    // .y3d.YMesh mesh = 12;
    case kMesh: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_.mesh_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YObject)
  GOOGLE_DCHECK_NE(&from, this);
  const YObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YObject)
    MergeFrom(*source);
  }
}

void YObject::MergeFrom(const YObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extra_.MergeFrom(from.extra_);
  tags_.MergeFrom(from.tags_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_pos()) {
    mutable_pos()->::y3d::YPoint3::MergeFrom(from.pos());
  }
  if (from.has_ver_obj()) {
    mutable_ver_obj()->::y3d::TestObject::MergeFrom(from.ver_obj());
  }
  if (from.otype() != 0) {
    set_otype(from.otype());
  }
  if (from.cate_id() != 0) {
    set_cate_id(from.cate_id());
  }
  switch (from.data_case()) {
    case kLight: {
      mutable_light()->::y3d::YLight::MergeFrom(from.light());
      break;
    }
    case kCamera: {
      mutable_camera()->::y3d::YCamera::MergeFrom(from.camera());
      break;
    }
    case kMesh: {
      mutable_mesh()->::y3d::YMesh::MergeFrom(from.mesh());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void YObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YObject::CopyFrom(const YObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YObject::IsInitialized() const {
  return true;
}

void YObject::Swap(YObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YObject::InternalSwap(YObject* other) {
  extra_.Swap(&other->extra_);
  tags_.UnsafeArenaSwap(&other->tags_);
  name_.Swap(&other->name_);
  std::swap(pos_, other->pos_);
  std::swap(ver_obj_, other->ver_obj_);
  std::swap(otype_, other->otype_);
  std::swap(cate_id_, other->cate_id_);
  std::swap(data_, other->data_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YObject::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YObject

// string name = 1;
void YObject::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YObject::name() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.name)
  return name_.GetNoArena();
}
void YObject::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YObject.name)
}
#if LANG_CXX11
void YObject::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YObject.name)
}
#endif
void YObject::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YObject.name)
}
void YObject::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YObject.name)
}
::std::string* YObject::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YObject.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YObject::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YObject.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YObject::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.name)
}

// .y3d.YPoint3 pos = 3;
bool YObject::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void YObject::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::y3d::YPoint3& YObject::pos() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.pos)
  return pos_ != NULL ? *pos_
                         : *::y3d::YPoint3::internal_default_instance();
}
::y3d::YPoint3* YObject::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::y3d::YPoint3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.pos)
  return pos_;
}
::y3d::YPoint3* YObject::release_pos() {
  // @@protoc_insertion_point(field_release:y3d.YObject.pos)
  
  ::y3d::YPoint3* temp = pos_;
  pos_ = NULL;
  return temp;
}
void YObject::set_allocated_pos(::y3d::YPoint3* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.pos)
}

// map<string, .google.protobuf.Any> extra = 5;
int YObject::extra_size() const {
  return extra_.size();
}
void YObject::clear_extra() {
  extra_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >&
YObject::extra() const {
  // @@protoc_insertion_point(field_map:y3d.YObject.extra)
  return extra_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >*
YObject::mutable_extra() {
  // @@protoc_insertion_point(field_mutable_map:y3d.YObject.extra)
  return extra_.MutableMap();
}

// .y3d.ObjectType otype = 6;
void YObject::clear_otype() {
  otype_ = 0;
}
::y3d::ObjectType YObject::otype() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.otype)
  return static_cast< ::y3d::ObjectType >(otype_);
}
void YObject::set_otype(::y3d::ObjectType value) {
  
  otype_ = value;
  // @@protoc_insertion_point(field_set:y3d.YObject.otype)
}

// repeated string tags = 7;
int YObject::tags_size() const {
  return tags_.size();
}
void YObject::clear_tags() {
  tags_.Clear();
}
const ::std::string& YObject::tags(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YObject.tags)
  return tags_.Get(index);
}
::std::string* YObject::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YObject.tags)
  return tags_.Mutable(index);
}
void YObject::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YObject.tags)
  tags_.Mutable(index)->assign(value);
}
void YObject::set_tags(int index, const char* value) {
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YObject.tags)
}
void YObject::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YObject.tags)
}
::std::string* YObject::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YObject.tags)
  return tags_.Add();
}
void YObject::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YObject.tags)
}
void YObject::add_tags(const char* value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YObject.tags)
}
void YObject::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YObject.tags)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
YObject::tags() const {
  // @@protoc_insertion_point(field_list:y3d.YObject.tags)
  return tags_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
YObject::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YObject.tags)
  return &tags_;
}

// int32 cate_id = 8;
void YObject::clear_cate_id() {
  cate_id_ = 0;
}
::google::protobuf::int32 YObject::cate_id() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.cate_id)
  return cate_id_;
}
void YObject::set_cate_id(::google::protobuf::int32 value) {
  
  cate_id_ = value;
  // @@protoc_insertion_point(field_set:y3d.YObject.cate_id)
}

// .y3d.YLight light = 10;
bool YObject::has_light() const {
  return data_case() == kLight;
}
void YObject::set_has_light() {
  _oneof_case_[0] = kLight;
}
void YObject::clear_light() {
  if (has_light()) {
    delete data_.light_;
    clear_has_data();
  }
}
 const ::y3d::YLight& YObject::light() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.light)
  return has_light()
      ? *data_.light_
      : ::y3d::YLight::default_instance();
}
::y3d::YLight* YObject::mutable_light() {
  if (!has_light()) {
    clear_data();
    set_has_light();
    data_.light_ = new ::y3d::YLight;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.light)
  return data_.light_;
}
::y3d::YLight* YObject::release_light() {
  // @@protoc_insertion_point(field_release:y3d.YObject.light)
  if (has_light()) {
    clear_has_data();
    ::y3d::YLight* temp = data_.light_;
    data_.light_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YObject::set_allocated_light(::y3d::YLight* light) {
  clear_data();
  if (light) {
    set_has_light();
    data_.light_ = light;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.light)
}

// .y3d.YCamera camera = 11;
bool YObject::has_camera() const {
  return data_case() == kCamera;
}
void YObject::set_has_camera() {
  _oneof_case_[0] = kCamera;
}
void YObject::clear_camera() {
  if (has_camera()) {
    delete data_.camera_;
    clear_has_data();
  }
}
 const ::y3d::YCamera& YObject::camera() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.camera)
  return has_camera()
      ? *data_.camera_
      : ::y3d::YCamera::default_instance();
}
::y3d::YCamera* YObject::mutable_camera() {
  if (!has_camera()) {
    clear_data();
    set_has_camera();
    data_.camera_ = new ::y3d::YCamera;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.camera)
  return data_.camera_;
}
::y3d::YCamera* YObject::release_camera() {
  // @@protoc_insertion_point(field_release:y3d.YObject.camera)
  if (has_camera()) {
    clear_has_data();
    ::y3d::YCamera* temp = data_.camera_;
    data_.camera_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YObject::set_allocated_camera(::y3d::YCamera* camera) {
  clear_data();
  if (camera) {
    set_has_camera();
    data_.camera_ = camera;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.camera)
}

// .y3d.YMesh mesh = 12;
bool YObject::has_mesh() const {
  return data_case() == kMesh;
}
void YObject::set_has_mesh() {
  _oneof_case_[0] = kMesh;
}
void YObject::clear_mesh() {
  if (has_mesh()) {
    delete data_.mesh_;
    clear_has_data();
  }
}
 const ::y3d::YMesh& YObject::mesh() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.mesh)
  return has_mesh()
      ? *data_.mesh_
      : ::y3d::YMesh::default_instance();
}
::y3d::YMesh* YObject::mutable_mesh() {
  if (!has_mesh()) {
    clear_data();
    set_has_mesh();
    data_.mesh_ = new ::y3d::YMesh;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.mesh)
  return data_.mesh_;
}
::y3d::YMesh* YObject::release_mesh() {
  // @@protoc_insertion_point(field_release:y3d.YObject.mesh)
  if (has_mesh()) {
    clear_has_data();
    ::y3d::YMesh* temp = data_.mesh_;
    data_.mesh_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YObject::set_allocated_mesh(::y3d::YMesh* mesh) {
  clear_data();
  if (mesh) {
    set_has_mesh();
    data_.mesh_ = mesh;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.mesh)
}

// .y3d.TestObject ver_obj = 13;
bool YObject::has_ver_obj() const {
  return this != internal_default_instance() && ver_obj_ != NULL;
}
void YObject::clear_ver_obj() {
  if (GetArenaNoVirtual() == NULL && ver_obj_ != NULL) delete ver_obj_;
  ver_obj_ = NULL;
}
const ::y3d::TestObject& YObject::ver_obj() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.ver_obj)
  return ver_obj_ != NULL ? *ver_obj_
                         : *::y3d::TestObject::internal_default_instance();
}
::y3d::TestObject* YObject::mutable_ver_obj() {
  
  if (ver_obj_ == NULL) {
    ver_obj_ = new ::y3d::TestObject;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.ver_obj)
  return ver_obj_;
}
::y3d::TestObject* YObject::release_ver_obj() {
  // @@protoc_insertion_point(field_release:y3d.YObject.ver_obj)
  
  ::y3d::TestObject* temp = ver_obj_;
  ver_obj_ = NULL;
  return temp;
}
void YObject::set_allocated_ver_obj(::y3d::TestObject* ver_obj) {
  delete ver_obj_;
  ver_obj_ = ver_obj;
  if (ver_obj) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.ver_obj)
}

bool YObject::has_data() const {
  return data_case() != DATA_NOT_SET;
}
void YObject::clear_has_data() {
  _oneof_case_[0] = DATA_NOT_SET;
}
YObject::DataCase YObject::data_case() const {
  return YObject::DataCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YArea::kNameFieldNumber;
const int YArea::kGroupsFieldNumber;
const int YArea::kObjsFieldNumber;
const int YArea::kGversFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YArea::YArea()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YArea)
}
YArea::YArea(const YArea& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      groups_(from.groups_),
      objs_(from.objs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& YArea_GversEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[8].descriptor;
  gvers_.SetAssignDescriptorCallback(
      protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce);
  gvers_.SetEntryDescriptor(
      &YArea_GversEntry_descriptor);
  gvers_.MergeFrom(from.gvers_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:y3d.YArea)
}

void YArea::SharedCtor() {
  const ::google::protobuf::Descriptor*& YArea_GversEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[8].descriptor;
  gvers_.SetAssignDescriptorCallback(
      protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce);
  gvers_.SetEntryDescriptor(
      &YArea_GversEntry_descriptor);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

YArea::~YArea() {
  // @@protoc_insertion_point(destructor:y3d.YArea)
  SharedDtor();
}

void YArea::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YArea::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YArea::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[9].descriptor;
}

const YArea& YArea::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YArea* YArea::New(::google::protobuf::Arena* arena) const {
  YArea* n = new YArea;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YArea::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YArea)
  groups_.Clear();
  objs_.Clear();
  gvers_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YArea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YArea)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YArea.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.YGroup groups = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .y3d.YObject objs = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, .y3d.YGroupVer> gvers = 6;
      case 6: {
        if (tag == 50u) {
          DO_(input->IncrementRecursionDepth());
          YArea_GversEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::y3d::YGroupVer,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer > > parser(&gvers_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YArea.GversEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YArea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YArea)
  return false;
#undef DO_
}

void YArea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YArea)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YArea.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->groups(i), output);
  }

  // repeated .y3d.YObject objs = 3;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->objs(i), output);
  }

  // map<string, .y3d.YGroupVer> gvers = 6;
  if (!this->gvers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YArea.GversEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->gvers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gvers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gvers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it) {
        entry.reset(gvers_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:y3d.YArea)
}

::google::protobuf::uint8* YArea::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YArea)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YArea.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->groups(i), false, target);
  }

  // repeated .y3d.YObject objs = 3;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->objs(i), false, target);
  }

  // map<string, .y3d.YGroupVer> gvers = 6;
  if (!this->gvers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YArea.GversEntry.key");
      }
    };

    if (deterministic &&
        this->gvers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gvers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gvers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it) {
        entry.reset(gvers_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YArea)
  return target;
}

size_t YArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YArea)
  size_t total_size = 0;

  // repeated .y3d.YGroup groups = 2;
  {
    unsigned int count = this->groups_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->groups(i));
    }
  }

  // repeated .y3d.YObject objs = 3;
  {
    unsigned int count = this->objs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objs(i));
    }
  }

  // map<string, .y3d.YGroupVer> gvers = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->gvers_size());
  {
    ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
        it = this->gvers().begin();
        it != this->gvers().end(); ++it) {
      entry.reset(gvers_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YArea::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YArea)
  GOOGLE_DCHECK_NE(&from, this);
  const YArea* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YArea>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YArea)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YArea)
    MergeFrom(*source);
  }
}

void YArea::MergeFrom(const YArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YArea)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groups_.MergeFrom(from.groups_);
  objs_.MergeFrom(from.objs_);
  gvers_.MergeFrom(from.gvers_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void YArea::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YArea::CopyFrom(const YArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YArea::IsInitialized() const {
  return true;
}

void YArea::Swap(YArea* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YArea::InternalSwap(YArea* other) {
  groups_.UnsafeArenaSwap(&other->groups_);
  objs_.UnsafeArenaSwap(&other->objs_);
  gvers_.Swap(&other->gvers_);
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YArea::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YArea

// string name = 1;
void YArea::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YArea::name() const {
  // @@protoc_insertion_point(field_get:y3d.YArea.name)
  return name_.GetNoArena();
}
void YArea::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YArea.name)
}
#if LANG_CXX11
void YArea::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YArea.name)
}
#endif
void YArea::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YArea.name)
}
void YArea::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YArea.name)
}
::std::string* YArea::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YArea.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YArea::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YArea.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YArea::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YArea.name)
}

// repeated .y3d.YGroup groups = 2;
int YArea::groups_size() const {
  return groups_.size();
}
void YArea::clear_groups() {
  groups_.Clear();
}
const ::y3d::YGroup& YArea::groups(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YArea.groups)
  return groups_.Get(index);
}
::y3d::YGroup* YArea::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YArea.groups)
  return groups_.Mutable(index);
}
::y3d::YGroup* YArea::add_groups() {
  // @@protoc_insertion_point(field_add:y3d.YArea.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YGroup >*
YArea::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YArea.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YGroup >&
YArea::groups() const {
  // @@protoc_insertion_point(field_list:y3d.YArea.groups)
  return groups_;
}

// repeated .y3d.YObject objs = 3;
int YArea::objs_size() const {
  return objs_.size();
}
void YArea::clear_objs() {
  objs_.Clear();
}
const ::y3d::YObject& YArea::objs(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YArea.objs)
  return objs_.Get(index);
}
::y3d::YObject* YArea::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YArea.objs)
  return objs_.Mutable(index);
}
::y3d::YObject* YArea::add_objs() {
  // @@protoc_insertion_point(field_add:y3d.YArea.objs)
  return objs_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YObject >*
YArea::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YArea.objs)
  return &objs_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YObject >&
YArea::objs() const {
  // @@protoc_insertion_point(field_list:y3d.YArea.objs)
  return objs_;
}

// map<string, .y3d.YGroupVer> gvers = 6;
int YArea::gvers_size() const {
  return gvers_.size();
}
void YArea::clear_gvers() {
  gvers_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >&
YArea::gvers() const {
  // @@protoc_insertion_point(field_map:y3d.YArea.gvers)
  return gvers_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >*
YArea::mutable_gvers() {
  // @@protoc_insertion_point(field_mutable_map:y3d.YArea.gvers)
  return gvers_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YAreaList::kAreasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YAreaList::YAreaList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YAreaList)
}
YAreaList::YAreaList(const YAreaList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      areas_(from.areas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:y3d.YAreaList)
}

void YAreaList::SharedCtor() {
  _cached_size_ = 0;
}

YAreaList::~YAreaList() {
  // @@protoc_insertion_point(destructor:y3d.YAreaList)
  SharedDtor();
}

void YAreaList::SharedDtor() {
}

void YAreaList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YAreaList::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[10].descriptor;
}

const YAreaList& YAreaList::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YAreaList* YAreaList::New(::google::protobuf::Arena* arena) const {
  YAreaList* n = new YAreaList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YAreaList::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YAreaList)
  areas_.Clear();
}

bool YAreaList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YAreaList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .y3d.YArea areas = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_areas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YAreaList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YAreaList)
  return false;
#undef DO_
}

void YAreaList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YAreaList)
  // repeated .y3d.YArea areas = 1;
  for (unsigned int i = 0, n = this->areas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->areas(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YAreaList)
}

::google::protobuf::uint8* YAreaList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YAreaList)
  // repeated .y3d.YArea areas = 1;
  for (unsigned int i = 0, n = this->areas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->areas(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YAreaList)
  return target;
}

size_t YAreaList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YAreaList)
  size_t total_size = 0;

  // repeated .y3d.YArea areas = 1;
  {
    unsigned int count = this->areas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->areas(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YAreaList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YAreaList)
  GOOGLE_DCHECK_NE(&from, this);
  const YAreaList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YAreaList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YAreaList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YAreaList)
    MergeFrom(*source);
  }
}

void YAreaList::MergeFrom(const YAreaList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YAreaList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  areas_.MergeFrom(from.areas_);
}

void YAreaList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YAreaList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YAreaList::CopyFrom(const YAreaList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YAreaList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YAreaList::IsInitialized() const {
  return true;
}

void YAreaList::Swap(YAreaList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YAreaList::InternalSwap(YAreaList* other) {
  areas_.UnsafeArenaSwap(&other->areas_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YAreaList::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YAreaList

// repeated .y3d.YArea areas = 1;
int YAreaList::areas_size() const {
  return areas_.size();
}
void YAreaList::clear_areas() {
  areas_.Clear();
}
const ::y3d::YArea& YAreaList::areas(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YAreaList.areas)
  return areas_.Get(index);
}
::y3d::YArea* YAreaList::mutable_areas(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YAreaList.areas)
  return areas_.Mutable(index);
}
::y3d::YArea* YAreaList::add_areas() {
  // @@protoc_insertion_point(field_add:y3d.YAreaList.areas)
  return areas_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YArea >*
YAreaList::mutable_areas() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YAreaList.areas)
  return &areas_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YArea >&
YAreaList::areas() const {
  // @@protoc_insertion_point(field_list:y3d.YAreaList.areas)
  return areas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YLayer::kNameFieldNumber;
const int YLayer::kGroupsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YLayer::YLayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YLayer)
}
YLayer::YLayer(const YLayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      groups_(from.groups_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:y3d.YLayer)
}

void YLayer::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

YLayer::~YLayer() {
  // @@protoc_insertion_point(destructor:y3d.YLayer)
  SharedDtor();
}

void YLayer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YLayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YLayer::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[11].descriptor;
}

const YLayer& YLayer::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YLayer* YLayer::New(::google::protobuf::Arena* arena) const {
  YLayer* n = new YLayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YLayer::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YLayer)
  groups_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YLayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YLayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YLayer.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.YGroup groups = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YLayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YLayer)
  return false;
#undef DO_
}

void YLayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YLayer)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLayer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->groups(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YLayer)
}

::google::protobuf::uint8* YLayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YLayer)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLayer.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->groups(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YLayer)
  return target;
}

size_t YLayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YLayer)
  size_t total_size = 0;

  // repeated .y3d.YGroup groups = 2;
  {
    unsigned int count = this->groups_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->groups(i));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YLayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YLayer)
  GOOGLE_DCHECK_NE(&from, this);
  const YLayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YLayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YLayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YLayer)
    MergeFrom(*source);
  }
}

void YLayer::MergeFrom(const YLayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YLayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groups_.MergeFrom(from.groups_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void YLayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YLayer::CopyFrom(const YLayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YLayer::IsInitialized() const {
  return true;
}

void YLayer::Swap(YLayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YLayer::InternalSwap(YLayer* other) {
  groups_.UnsafeArenaSwap(&other->groups_);
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YLayer::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YLayer

// string name = 1;
void YLayer::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YLayer::name() const {
  // @@protoc_insertion_point(field_get:y3d.YLayer.name)
  return name_.GetNoArena();
}
void YLayer::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YLayer.name)
}
#if LANG_CXX11
void YLayer::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YLayer.name)
}
#endif
void YLayer::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YLayer.name)
}
void YLayer::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YLayer.name)
}
::std::string* YLayer::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YLayer.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YLayer::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YLayer.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YLayer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YLayer.name)
}

// repeated .y3d.YGroup groups = 2;
int YLayer::groups_size() const {
  return groups_.size();
}
void YLayer::clear_groups() {
  groups_.Clear();
}
const ::y3d::YGroup& YLayer::groups(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLayer.groups)
  return groups_.Get(index);
}
::y3d::YGroup* YLayer::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YLayer.groups)
  return groups_.Mutable(index);
}
::y3d::YGroup* YLayer::add_groups() {
  // @@protoc_insertion_point(field_add:y3d.YLayer.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YGroup >*
YLayer::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLayer.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YGroup >&
YLayer::groups() const {
  // @@protoc_insertion_point(field_list:y3d.YLayer.groups)
  return groups_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YGroup::kNameFieldNumber;
const int YGroup::kObjsFieldNumber;
const int YGroup::kChildrenFieldNumber;
const int YGroup::kGvTypeFieldNumber;
const int YGroup::kXrefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YGroup::YGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YGroup)
}
YGroup::YGroup(const YGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objs_(from.objs_),
      children_(from.children_),
      xref_(from.xref_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  gv_type_ = from.gv_type_;
  // @@protoc_insertion_point(copy_constructor:y3d.YGroup)
}

void YGroup::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gv_type_ = 0;
  _cached_size_ = 0;
}

YGroup::~YGroup() {
  // @@protoc_insertion_point(destructor:y3d.YGroup)
  SharedDtor();
}

void YGroup::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YGroup::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[12].descriptor;
}

const YGroup& YGroup::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YGroup* YGroup::New(::google::protobuf::Arena* arena) const {
  YGroup* n = new YGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YGroup)
  objs_.Clear();
  children_.Clear();
  xref_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gv_type_ = 0;
}

bool YGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YGroup.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.YObject objs = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .y3d.YGroup children = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .y3d.GVerType gv_type = 4;
      case 4: {
        if (tag == 32u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gv_type(static_cast< ::y3d::GVerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string xref = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_xref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xref(this->xref_size() - 1).data(),
            this->xref(this->xref_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YGroup.xref"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YGroup)
  return false;
#undef DO_
}

void YGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YGroup)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .y3d.YObject objs = 2;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->objs(i), output);
  }

  // repeated .y3d.YGroup children = 3;
  for (unsigned int i = 0, n = this->children_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->children(i), output);
  }

  // .y3d.GVerType gv_type = 4;
  if (this->gv_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->gv_type(), output);
  }

  // repeated string xref = 5;
  for (int i = 0; i < this->xref_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xref(i).data(), this->xref(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.xref");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->xref(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YGroup)
}

::google::protobuf::uint8* YGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YGroup)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .y3d.YObject objs = 2;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->objs(i), false, target);
  }

  // repeated .y3d.YGroup children = 3;
  for (unsigned int i = 0, n = this->children_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->children(i), false, target);
  }

  // .y3d.GVerType gv_type = 4;
  if (this->gv_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->gv_type(), target);
  }

  // repeated string xref = 5;
  for (int i = 0; i < this->xref_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xref(i).data(), this->xref(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.xref");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->xref(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YGroup)
  return target;
}

size_t YGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YGroup)
  size_t total_size = 0;

  // repeated .y3d.YObject objs = 2;
  {
    unsigned int count = this->objs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objs(i));
    }
  }

  // repeated .y3d.YGroup children = 3;
  {
    unsigned int count = this->children_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->children(i));
    }
  }

  // repeated string xref = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->xref_size());
  for (int i = 0; i < this->xref_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->xref(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .y3d.GVerType gv_type = 4;
  if (this->gv_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gv_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const YGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YGroup)
    MergeFrom(*source);
  }
}

void YGroup::MergeFrom(const YGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objs_.MergeFrom(from.objs_);
  children_.MergeFrom(from.children_);
  xref_.MergeFrom(from.xref_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.gv_type() != 0) {
    set_gv_type(from.gv_type());
  }
}

void YGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YGroup::CopyFrom(const YGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YGroup::IsInitialized() const {
  return true;
}

void YGroup::Swap(YGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YGroup::InternalSwap(YGroup* other) {
  objs_.UnsafeArenaSwap(&other->objs_);
  children_.UnsafeArenaSwap(&other->children_);
  xref_.UnsafeArenaSwap(&other->xref_);
  name_.Swap(&other->name_);
  std::swap(gv_type_, other->gv_type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YGroup::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YGroup

// string name = 1;
void YGroup::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YGroup::name() const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.name)
  return name_.GetNoArena();
}
void YGroup::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YGroup.name)
}
#if LANG_CXX11
void YGroup::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YGroup.name)
}
#endif
void YGroup::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YGroup.name)
}
void YGroup::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YGroup.name)
}
::std::string* YGroup::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YGroup::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YGroup.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YGroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YGroup.name)
}

// repeated .y3d.YObject objs = 2;
int YGroup::objs_size() const {
  return objs_.size();
}
void YGroup::clear_objs() {
  objs_.Clear();
}
const ::y3d::YObject& YGroup::objs(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.objs)
  return objs_.Get(index);
}
::y3d::YObject* YGroup::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.objs)
  return objs_.Mutable(index);
}
::y3d::YObject* YGroup::add_objs() {
  // @@protoc_insertion_point(field_add:y3d.YGroup.objs)
  return objs_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YObject >*
YGroup::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YGroup.objs)
  return &objs_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YObject >&
YGroup::objs() const {
  // @@protoc_insertion_point(field_list:y3d.YGroup.objs)
  return objs_;
}

// repeated .y3d.YGroup children = 3;
int YGroup::children_size() const {
  return children_.size();
}
void YGroup::clear_children() {
  children_.Clear();
}
const ::y3d::YGroup& YGroup::children(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.children)
  return children_.Get(index);
}
::y3d::YGroup* YGroup::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.children)
  return children_.Mutable(index);
}
::y3d::YGroup* YGroup::add_children() {
  // @@protoc_insertion_point(field_add:y3d.YGroup.children)
  return children_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YGroup >*
YGroup::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YGroup.children)
  return &children_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YGroup >&
YGroup::children() const {
  // @@protoc_insertion_point(field_list:y3d.YGroup.children)
  return children_;
}

// .y3d.GVerType gv_type = 4;
void YGroup::clear_gv_type() {
  gv_type_ = 0;
}
::y3d::GVerType YGroup::gv_type() const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.gv_type)
  return static_cast< ::y3d::GVerType >(gv_type_);
}
void YGroup::set_gv_type(::y3d::GVerType value) {
  
  gv_type_ = value;
  // @@protoc_insertion_point(field_set:y3d.YGroup.gv_type)
}

// repeated string xref = 5;
int YGroup::xref_size() const {
  return xref_.size();
}
void YGroup::clear_xref() {
  xref_.Clear();
}
const ::std::string& YGroup::xref(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.xref)
  return xref_.Get(index);
}
::std::string* YGroup::mutable_xref(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.xref)
  return xref_.Mutable(index);
}
void YGroup::set_xref(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YGroup.xref)
  xref_.Mutable(index)->assign(value);
}
void YGroup::set_xref(int index, const char* value) {
  xref_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YGroup.xref)
}
void YGroup::set_xref(int index, const char* value, size_t size) {
  xref_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YGroup.xref)
}
::std::string* YGroup::add_xref() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YGroup.xref)
  return xref_.Add();
}
void YGroup::add_xref(const ::std::string& value) {
  xref_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YGroup.xref)
}
void YGroup::add_xref(const char* value) {
  xref_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YGroup.xref)
}
void YGroup::add_xref(const char* value, size_t size) {
  xref_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YGroup.xref)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
YGroup::xref() const {
  // @@protoc_insertion_point(field_list:y3d.YGroup.xref)
  return xref_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
YGroup::mutable_xref() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YGroup.xref)
  return &xref_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YGroupVer::kVnameFieldNumber;
const int YGroupVer::kGroupDataFieldNumber;
const int YGroupVer::kStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YGroupVer::YGroupVer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YGroupVer)
}
YGroupVer::YGroupVer(const YGroupVer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vname().size() > 0) {
    vname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vname_);
  }
  if (from.has_groupdata()) {
    groupdata_ = new ::y3d::YGroup(*from.groupdata_);
  } else {
    groupdata_ = NULL;
  }
  step_ = from.step_;
  // @@protoc_insertion_point(copy_constructor:y3d.YGroupVer)
}

void YGroupVer::SharedCtor() {
  vname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&groupdata_, 0, reinterpret_cast<char*>(&step_) -
    reinterpret_cast<char*>(&groupdata_) + sizeof(step_));
  _cached_size_ = 0;
}

YGroupVer::~YGroupVer() {
  // @@protoc_insertion_point(destructor:y3d.YGroupVer)
  SharedDtor();
}

void YGroupVer::SharedDtor() {
  vname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete groupdata_;
  }
}

void YGroupVer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YGroupVer::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[13].descriptor;
}

const YGroupVer& YGroupVer::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YGroupVer* YGroupVer::New(::google::protobuf::Arena* arena) const {
  YGroupVer* n = new YGroupVer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YGroupVer::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YGroupVer)
  vname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && groupdata_ != NULL) {
    delete groupdata_;
  }
  groupdata_ = NULL;
  step_ = 0;
}

bool YGroupVer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YGroupVer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string vname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vname().data(), this->vname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YGroupVer.vname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YGroup groupData = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_groupdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 step = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YGroupVer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YGroupVer)
  return false;
#undef DO_
}

void YGroupVer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YGroupVer)
  // string vname = 1;
  if (this->vname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vname().data(), this->vname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroupVer.vname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vname(), output);
  }

  // .y3d.YGroup groupData = 2;
  if (this->has_groupdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->groupdata_, output);
  }

  // int32 step = 3;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->step(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YGroupVer)
}

::google::protobuf::uint8* YGroupVer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YGroupVer)
  // string vname = 1;
  if (this->vname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vname().data(), this->vname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroupVer.vname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vname(), target);
  }

  // .y3d.YGroup groupData = 2;
  if (this->has_groupdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->groupdata_, false, target);
  }

  // int32 step = 3;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->step(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YGroupVer)
  return target;
}

size_t YGroupVer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YGroupVer)
  size_t total_size = 0;

  // string vname = 1;
  if (this->vname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vname());
  }

  // .y3d.YGroup groupData = 2;
  if (this->has_groupdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->groupdata_);
  }

  // int32 step = 3;
  if (this->step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->step());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YGroupVer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YGroupVer)
  GOOGLE_DCHECK_NE(&from, this);
  const YGroupVer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YGroupVer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YGroupVer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YGroupVer)
    MergeFrom(*source);
  }
}

void YGroupVer::MergeFrom(const YGroupVer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YGroupVer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vname().size() > 0) {

    vname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vname_);
  }
  if (from.has_groupdata()) {
    mutable_groupdata()->::y3d::YGroup::MergeFrom(from.groupdata());
  }
  if (from.step() != 0) {
    set_step(from.step());
  }
}

void YGroupVer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YGroupVer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YGroupVer::CopyFrom(const YGroupVer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YGroupVer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YGroupVer::IsInitialized() const {
  return true;
}

void YGroupVer::Swap(YGroupVer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YGroupVer::InternalSwap(YGroupVer* other) {
  vname_.Swap(&other->vname_);
  std::swap(groupdata_, other->groupdata_);
  std::swap(step_, other->step_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YGroupVer::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YGroupVer

// string vname = 1;
void YGroupVer::clear_vname() {
  vname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YGroupVer::vname() const {
  // @@protoc_insertion_point(field_get:y3d.YGroupVer.vname)
  return vname_.GetNoArena();
}
void YGroupVer::set_vname(const ::std::string& value) {
  
  vname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YGroupVer.vname)
}
#if LANG_CXX11
void YGroupVer::set_vname(::std::string&& value) {
  
  vname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YGroupVer.vname)
}
#endif
void YGroupVer::set_vname(const char* value) {
  
  vname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YGroupVer.vname)
}
void YGroupVer::set_vname(const char* value, size_t size) {
  
  vname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YGroupVer.vname)
}
::std::string* YGroupVer::mutable_vname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YGroupVer.vname)
  return vname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YGroupVer::release_vname() {
  // @@protoc_insertion_point(field_release:y3d.YGroupVer.vname)
  
  return vname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YGroupVer::set_allocated_vname(::std::string* vname) {
  if (vname != NULL) {
    
  } else {
    
  }
  vname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vname);
  // @@protoc_insertion_point(field_set_allocated:y3d.YGroupVer.vname)
}

// .y3d.YGroup groupData = 2;
bool YGroupVer::has_groupdata() const {
  return this != internal_default_instance() && groupdata_ != NULL;
}
void YGroupVer::clear_groupdata() {
  if (GetArenaNoVirtual() == NULL && groupdata_ != NULL) delete groupdata_;
  groupdata_ = NULL;
}
const ::y3d::YGroup& YGroupVer::groupdata() const {
  // @@protoc_insertion_point(field_get:y3d.YGroupVer.groupData)
  return groupdata_ != NULL ? *groupdata_
                         : *::y3d::YGroup::internal_default_instance();
}
::y3d::YGroup* YGroupVer::mutable_groupdata() {
  
  if (groupdata_ == NULL) {
    groupdata_ = new ::y3d::YGroup;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YGroupVer.groupData)
  return groupdata_;
}
::y3d::YGroup* YGroupVer::release_groupdata() {
  // @@protoc_insertion_point(field_release:y3d.YGroupVer.groupData)
  
  ::y3d::YGroup* temp = groupdata_;
  groupdata_ = NULL;
  return temp;
}
void YGroupVer::set_allocated_groupdata(::y3d::YGroup* groupdata) {
  delete groupdata_;
  groupdata_ = groupdata;
  if (groupdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YGroupVer.groupData)
}

// int32 step = 3;
void YGroupVer::clear_step() {
  step_ = 0;
}
::google::protobuf::int32 YGroupVer::step() const {
  // @@protoc_insertion_point(field_get:y3d.YGroupVer.step)
  return step_;
}
void YGroupVer::set_step(::google::protobuf::int32 value) {
  
  step_ = value;
  // @@protoc_insertion_point(field_set:y3d.YGroupVer.step)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilterView::kOtypeFieldNumber;
const int FilterView::kFaceRangeFieldNumber;
const int FilterView::kSearchFieldNumber;
const int FilterView::kAidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilterView::FilterView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.FilterView)
}
FilterView::FilterView(const FilterView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  search_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.search().size() > 0) {
    search_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_);
  }
  ::memcpy(&otype_, &from.otype_,
    reinterpret_cast<char*>(&aid_) -
    reinterpret_cast<char*>(&otype_) + sizeof(aid_));
  // @@protoc_insertion_point(copy_constructor:y3d.FilterView)
}

void FilterView::SharedCtor() {
  search_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&otype_, 0, reinterpret_cast<char*>(&aid_) -
    reinterpret_cast<char*>(&otype_) + sizeof(aid_));
  _cached_size_ = 0;
}

FilterView::~FilterView() {
  // @@protoc_insertion_point(destructor:y3d.FilterView)
  SharedDtor();
}

void FilterView::SharedDtor() {
  search_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FilterView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilterView::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[14].descriptor;
}

const FilterView& FilterView::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

FilterView* FilterView::New(::google::protobuf::Arena* arena) const {
  FilterView* n = new FilterView;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilterView::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.FilterView)
  search_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&otype_, 0, reinterpret_cast<char*>(&aid_) -
    reinterpret_cast<char*>(&otype_) + sizeof(aid_));
}

bool FilterView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.FilterView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.ObjectType otype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_otype(static_cast< ::y3d::ObjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 face_range = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &face_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string search = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search().data(), this->search().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.FilterView.search"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 aid = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.FilterView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.FilterView)
  return false;
#undef DO_
}

void FilterView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.FilterView)
  // .y3d.ObjectType otype = 1;
  if (this->otype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->otype(), output);
  }

  // int32 face_range = 2;
  if (this->face_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->face_range(), output);
  }

  // string search = 3;
  if (this->search().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search().data(), this->search().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.FilterView.search");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->search(), output);
  }

  // int32 aid = 4;
  if (this->aid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->aid(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.FilterView)
}

::google::protobuf::uint8* FilterView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.FilterView)
  // .y3d.ObjectType otype = 1;
  if (this->otype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->otype(), target);
  }

  // int32 face_range = 2;
  if (this->face_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->face_range(), target);
  }

  // string search = 3;
  if (this->search().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search().data(), this->search().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.FilterView.search");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->search(), target);
  }

  // int32 aid = 4;
  if (this->aid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->aid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.FilterView)
  return target;
}

size_t FilterView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.FilterView)
  size_t total_size = 0;

  // string search = 3;
  if (this->search().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search());
  }

  // .y3d.ObjectType otype = 1;
  if (this->otype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->otype());
  }

  // int32 face_range = 2;
  if (this->face_range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->face_range());
  }

  // int32 aid = 4;
  if (this->aid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->aid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilterView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.FilterView)
  GOOGLE_DCHECK_NE(&from, this);
  const FilterView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilterView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.FilterView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.FilterView)
    MergeFrom(*source);
  }
}

void FilterView::MergeFrom(const FilterView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.FilterView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.search().size() > 0) {

    search_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_);
  }
  if (from.otype() != 0) {
    set_otype(from.otype());
  }
  if (from.face_range() != 0) {
    set_face_range(from.face_range());
  }
  if (from.aid() != 0) {
    set_aid(from.aid());
  }
}

void FilterView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.FilterView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterView::CopyFrom(const FilterView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.FilterView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterView::IsInitialized() const {
  return true;
}

void FilterView::Swap(FilterView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilterView::InternalSwap(FilterView* other) {
  search_.Swap(&other->search_);
  std::swap(otype_, other->otype_);
  std::swap(face_range_, other->face_range_);
  std::swap(aid_, other->aid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilterView::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FilterView

// .y3d.ObjectType otype = 1;
void FilterView::clear_otype() {
  otype_ = 0;
}
::y3d::ObjectType FilterView::otype() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.otype)
  return static_cast< ::y3d::ObjectType >(otype_);
}
void FilterView::set_otype(::y3d::ObjectType value) {
  
  otype_ = value;
  // @@protoc_insertion_point(field_set:y3d.FilterView.otype)
}

// int32 face_range = 2;
void FilterView::clear_face_range() {
  face_range_ = 0;
}
::google::protobuf::int32 FilterView::face_range() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.face_range)
  return face_range_;
}
void FilterView::set_face_range(::google::protobuf::int32 value) {
  
  face_range_ = value;
  // @@protoc_insertion_point(field_set:y3d.FilterView.face_range)
}

// string search = 3;
void FilterView::clear_search() {
  search_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilterView::search() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.search)
  return search_.GetNoArena();
}
void FilterView::set_search(const ::std::string& value) {
  
  search_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.FilterView.search)
}
#if LANG_CXX11
void FilterView::set_search(::std::string&& value) {
  
  search_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.FilterView.search)
}
#endif
void FilterView::set_search(const char* value) {
  
  search_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.FilterView.search)
}
void FilterView::set_search(const char* value, size_t size) {
  
  search_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.FilterView.search)
}
::std::string* FilterView::mutable_search() {
  
  // @@protoc_insertion_point(field_mutable:y3d.FilterView.search)
  return search_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilterView::release_search() {
  // @@protoc_insertion_point(field_release:y3d.FilterView.search)
  
  return search_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilterView::set_allocated_search(::std::string* search) {
  if (search != NULL) {
    
  } else {
    
  }
  search_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search);
  // @@protoc_insertion_point(field_set_allocated:y3d.FilterView.search)
}

// int32 aid = 4;
void FilterView::clear_aid() {
  aid_ = 0;
}
::google::protobuf::int32 FilterView::aid() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.aid)
  return aid_;
}
void FilterView::set_aid(::google::protobuf::int32 value) {
  
  aid_ = value;
  // @@protoc_insertion_point(field_set:y3d.FilterView.aid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FRangeItem::kFStartFieldNumber;
const int FRangeItem::kFEndFieldNumber;
const int FRangeItem::kFrColorFieldNumber;
const int FRangeItem::kRatioFieldNumber;
const int FRangeItem::kHasXrefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FRangeItem::FRangeItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.FRangeItem)
}
FRangeItem::FRangeItem(const FRangeItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fr_color()) {
    fr_color_ = new ::y3d::YColor(*from.fr_color_);
  } else {
    fr_color_ = NULL;
  }
  ::memcpy(&f_start_, &from.f_start_,
    reinterpret_cast<char*>(&has_xref_) -
    reinterpret_cast<char*>(&f_start_) + sizeof(has_xref_));
  // @@protoc_insertion_point(copy_constructor:y3d.FRangeItem)
}

void FRangeItem::SharedCtor() {
  ::memset(&fr_color_, 0, reinterpret_cast<char*>(&has_xref_) -
    reinterpret_cast<char*>(&fr_color_) + sizeof(has_xref_));
  _cached_size_ = 0;
}

FRangeItem::~FRangeItem() {
  // @@protoc_insertion_point(destructor:y3d.FRangeItem)
  SharedDtor();
}

void FRangeItem::SharedDtor() {
  if (this != internal_default_instance()) {
    delete fr_color_;
  }
}

void FRangeItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FRangeItem::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[15].descriptor;
}

const FRangeItem& FRangeItem::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

FRangeItem* FRangeItem::New(::google::protobuf::Arena* arena) const {
  FRangeItem* n = new FRangeItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FRangeItem::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.FRangeItem)
  if (GetArenaNoVirtual() == NULL && fr_color_ != NULL) {
    delete fr_color_;
  }
  fr_color_ = NULL;
  ::memset(&f_start_, 0, reinterpret_cast<char*>(&has_xref_) -
    reinterpret_cast<char*>(&f_start_) + sizeof(has_xref_));
}

bool FRangeItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.FRangeItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 f_start = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 f_end = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YColor fr_color = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fr_color()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ratio = 4;
      case 4: {
        if (tag == 37u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool has_xref = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_xref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.FRangeItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.FRangeItem)
  return false;
#undef DO_
}

void FRangeItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.FRangeItem)
  // int32 f_start = 1;
  if (this->f_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->f_start(), output);
  }

  // int32 f_end = 2;
  if (this->f_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->f_end(), output);
  }

  // .y3d.YColor fr_color = 3;
  if (this->has_fr_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->fr_color_, output);
  }

  // float ratio = 4;
  if (this->ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->ratio(), output);
  }

  // bool has_xref = 5;
  if (this->has_xref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->has_xref(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.FRangeItem)
}

::google::protobuf::uint8* FRangeItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.FRangeItem)
  // int32 f_start = 1;
  if (this->f_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->f_start(), target);
  }

  // int32 f_end = 2;
  if (this->f_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->f_end(), target);
  }

  // .y3d.YColor fr_color = 3;
  if (this->has_fr_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->fr_color_, false, target);
  }

  // float ratio = 4;
  if (this->ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->ratio(), target);
  }

  // bool has_xref = 5;
  if (this->has_xref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->has_xref(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.FRangeItem)
  return target;
}

size_t FRangeItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.FRangeItem)
  size_t total_size = 0;

  // .y3d.YColor fr_color = 3;
  if (this->has_fr_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fr_color_);
  }

  // int32 f_start = 1;
  if (this->f_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f_start());
  }

  // int32 f_end = 2;
  if (this->f_end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f_end());
  }

  // float ratio = 4;
  if (this->ratio() != 0) {
    total_size += 1 + 4;
  }

  // bool has_xref = 5;
  if (this->has_xref() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FRangeItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.FRangeItem)
  GOOGLE_DCHECK_NE(&from, this);
  const FRangeItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FRangeItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.FRangeItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.FRangeItem)
    MergeFrom(*source);
  }
}

void FRangeItem::MergeFrom(const FRangeItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.FRangeItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fr_color()) {
    mutable_fr_color()->::y3d::YColor::MergeFrom(from.fr_color());
  }
  if (from.f_start() != 0) {
    set_f_start(from.f_start());
  }
  if (from.f_end() != 0) {
    set_f_end(from.f_end());
  }
  if (from.ratio() != 0) {
    set_ratio(from.ratio());
  }
  if (from.has_xref() != 0) {
    set_has_xref(from.has_xref());
  }
}

void FRangeItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.FRangeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FRangeItem::CopyFrom(const FRangeItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.FRangeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FRangeItem::IsInitialized() const {
  return true;
}

void FRangeItem::Swap(FRangeItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FRangeItem::InternalSwap(FRangeItem* other) {
  std::swap(fr_color_, other->fr_color_);
  std::swap(f_start_, other->f_start_);
  std::swap(f_end_, other->f_end_);
  std::swap(ratio_, other->ratio_);
  std::swap(has_xref_, other->has_xref_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FRangeItem::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FRangeItem

// int32 f_start = 1;
void FRangeItem::clear_f_start() {
  f_start_ = 0;
}
::google::protobuf::int32 FRangeItem::f_start() const {
  // @@protoc_insertion_point(field_get:y3d.FRangeItem.f_start)
  return f_start_;
}
void FRangeItem::set_f_start(::google::protobuf::int32 value) {
  
  f_start_ = value;
  // @@protoc_insertion_point(field_set:y3d.FRangeItem.f_start)
}

// int32 f_end = 2;
void FRangeItem::clear_f_end() {
  f_end_ = 0;
}
::google::protobuf::int32 FRangeItem::f_end() const {
  // @@protoc_insertion_point(field_get:y3d.FRangeItem.f_end)
  return f_end_;
}
void FRangeItem::set_f_end(::google::protobuf::int32 value) {
  
  f_end_ = value;
  // @@protoc_insertion_point(field_set:y3d.FRangeItem.f_end)
}

// .y3d.YColor fr_color = 3;
bool FRangeItem::has_fr_color() const {
  return this != internal_default_instance() && fr_color_ != NULL;
}
void FRangeItem::clear_fr_color() {
  if (GetArenaNoVirtual() == NULL && fr_color_ != NULL) delete fr_color_;
  fr_color_ = NULL;
}
const ::y3d::YColor& FRangeItem::fr_color() const {
  // @@protoc_insertion_point(field_get:y3d.FRangeItem.fr_color)
  return fr_color_ != NULL ? *fr_color_
                         : *::y3d::YColor::internal_default_instance();
}
::y3d::YColor* FRangeItem::mutable_fr_color() {
  
  if (fr_color_ == NULL) {
    fr_color_ = new ::y3d::YColor;
  }
  // @@protoc_insertion_point(field_mutable:y3d.FRangeItem.fr_color)
  return fr_color_;
}
::y3d::YColor* FRangeItem::release_fr_color() {
  // @@protoc_insertion_point(field_release:y3d.FRangeItem.fr_color)
  
  ::y3d::YColor* temp = fr_color_;
  fr_color_ = NULL;
  return temp;
}
void FRangeItem::set_allocated_fr_color(::y3d::YColor* fr_color) {
  delete fr_color_;
  fr_color_ = fr_color;
  if (fr_color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.FRangeItem.fr_color)
}

// float ratio = 4;
void FRangeItem::clear_ratio() {
  ratio_ = 0;
}
float FRangeItem::ratio() const {
  // @@protoc_insertion_point(field_get:y3d.FRangeItem.ratio)
  return ratio_;
}
void FRangeItem::set_ratio(float value) {
  
  ratio_ = value;
  // @@protoc_insertion_point(field_set:y3d.FRangeItem.ratio)
}

// bool has_xref = 5;
void FRangeItem::clear_has_xref() {
  has_xref_ = false;
}
bool FRangeItem::has_xref() const {
  // @@protoc_insertion_point(field_get:y3d.FRangeItem.has_xref)
  return has_xref_;
}
void FRangeItem::set_has_xref(bool value) {
  
  has_xref_ = value;
  // @@protoc_insertion_point(field_set:y3d.FRangeItem.has_xref)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptimizeOptions::kUseRangeFieldNumber;
const int OptimizeOptions::kFrFieldNumber;
const int OptimizeOptions::kMinHpolyFieldNumber;
const int OptimizeOptions::kOutRangeCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptimizeOptions::OptimizeOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.OptimizeOptions)
}
OptimizeOptions::OptimizeOptions(const OptimizeOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fr_(from.fr_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&use_range_, &from.use_range_,
    reinterpret_cast<char*>(&out_range_count_) -
    reinterpret_cast<char*>(&use_range_) + sizeof(out_range_count_));
  // @@protoc_insertion_point(copy_constructor:y3d.OptimizeOptions)
}

void OptimizeOptions::SharedCtor() {
  ::memset(&use_range_, 0, reinterpret_cast<char*>(&out_range_count_) -
    reinterpret_cast<char*>(&use_range_) + sizeof(out_range_count_));
  _cached_size_ = 0;
}

OptimizeOptions::~OptimizeOptions() {
  // @@protoc_insertion_point(destructor:y3d.OptimizeOptions)
  SharedDtor();
}

void OptimizeOptions::SharedDtor() {
}

void OptimizeOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptimizeOptions::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[16].descriptor;
}

const OptimizeOptions& OptimizeOptions::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

OptimizeOptions* OptimizeOptions::New(::google::protobuf::Arena* arena) const {
  OptimizeOptions* n = new OptimizeOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptimizeOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.OptimizeOptions)
  fr_.Clear();
  ::memset(&use_range_, 0, reinterpret_cast<char*>(&out_range_count_) -
    reinterpret_cast<char*>(&use_range_) + sizeof(out_range_count_));
}

bool OptimizeOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.OptimizeOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool use_range = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.FRangeItem fr = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fr()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // int32 min_hpoly = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_hpoly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 out_range_count = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &out_range_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.OptimizeOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.OptimizeOptions)
  return false;
#undef DO_
}

void OptimizeOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.OptimizeOptions)
  // bool use_range = 1;
  if (this->use_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_range(), output);
  }

  // repeated .y3d.FRangeItem fr = 2;
  for (unsigned int i = 0, n = this->fr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fr(i), output);
  }

  // int32 min_hpoly = 3;
  if (this->min_hpoly() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->min_hpoly(), output);
  }

  // int32 out_range_count = 4;
  if (this->out_range_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->out_range_count(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.OptimizeOptions)
}

::google::protobuf::uint8* OptimizeOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.OptimizeOptions)
  // bool use_range = 1;
  if (this->use_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_range(), target);
  }

  // repeated .y3d.FRangeItem fr = 2;
  for (unsigned int i = 0, n = this->fr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->fr(i), false, target);
  }

  // int32 min_hpoly = 3;
  if (this->min_hpoly() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->min_hpoly(), target);
  }

  // int32 out_range_count = 4;
  if (this->out_range_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->out_range_count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.OptimizeOptions)
  return target;
}

size_t OptimizeOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.OptimizeOptions)
  size_t total_size = 0;

  // repeated .y3d.FRangeItem fr = 2;
  {
    unsigned int count = this->fr_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fr(i));
    }
  }

  // bool use_range = 1;
  if (this->use_range() != 0) {
    total_size += 1 + 1;
  }

  // int32 min_hpoly = 3;
  if (this->min_hpoly() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min_hpoly());
  }

  // int32 out_range_count = 4;
  if (this->out_range_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->out_range_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptimizeOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.OptimizeOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const OptimizeOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptimizeOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.OptimizeOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.OptimizeOptions)
    MergeFrom(*source);
  }
}

void OptimizeOptions::MergeFrom(const OptimizeOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.OptimizeOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fr_.MergeFrom(from.fr_);
  if (from.use_range() != 0) {
    set_use_range(from.use_range());
  }
  if (from.min_hpoly() != 0) {
    set_min_hpoly(from.min_hpoly());
  }
  if (from.out_range_count() != 0) {
    set_out_range_count(from.out_range_count());
  }
}

void OptimizeOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.OptimizeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizeOptions::CopyFrom(const OptimizeOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.OptimizeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizeOptions::IsInitialized() const {
  return true;
}

void OptimizeOptions::Swap(OptimizeOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptimizeOptions::InternalSwap(OptimizeOptions* other) {
  fr_.UnsafeArenaSwap(&other->fr_);
  std::swap(use_range_, other->use_range_);
  std::swap(min_hpoly_, other->min_hpoly_);
  std::swap(out_range_count_, other->out_range_count_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptimizeOptions::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OptimizeOptions

// bool use_range = 1;
void OptimizeOptions::clear_use_range() {
  use_range_ = false;
}
bool OptimizeOptions::use_range() const {
  // @@protoc_insertion_point(field_get:y3d.OptimizeOptions.use_range)
  return use_range_;
}
void OptimizeOptions::set_use_range(bool value) {
  
  use_range_ = value;
  // @@protoc_insertion_point(field_set:y3d.OptimizeOptions.use_range)
}

// repeated .y3d.FRangeItem fr = 2;
int OptimizeOptions::fr_size() const {
  return fr_.size();
}
void OptimizeOptions::clear_fr() {
  fr_.Clear();
}
const ::y3d::FRangeItem& OptimizeOptions::fr(int index) const {
  // @@protoc_insertion_point(field_get:y3d.OptimizeOptions.fr)
  return fr_.Get(index);
}
::y3d::FRangeItem* OptimizeOptions::mutable_fr(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.OptimizeOptions.fr)
  return fr_.Mutable(index);
}
::y3d::FRangeItem* OptimizeOptions::add_fr() {
  // @@protoc_insertion_point(field_add:y3d.OptimizeOptions.fr)
  return fr_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::FRangeItem >*
OptimizeOptions::mutable_fr() {
  // @@protoc_insertion_point(field_mutable_list:y3d.OptimizeOptions.fr)
  return &fr_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::FRangeItem >&
OptimizeOptions::fr() const {
  // @@protoc_insertion_point(field_list:y3d.OptimizeOptions.fr)
  return fr_;
}

// int32 min_hpoly = 3;
void OptimizeOptions::clear_min_hpoly() {
  min_hpoly_ = 0;
}
::google::protobuf::int32 OptimizeOptions::min_hpoly() const {
  // @@protoc_insertion_point(field_get:y3d.OptimizeOptions.min_hpoly)
  return min_hpoly_;
}
void OptimizeOptions::set_min_hpoly(::google::protobuf::int32 value) {
  
  min_hpoly_ = value;
  // @@protoc_insertion_point(field_set:y3d.OptimizeOptions.min_hpoly)
}

// int32 out_range_count = 4;
void OptimizeOptions::clear_out_range_count() {
  out_range_count_ = 0;
}
::google::protobuf::int32 OptimizeOptions::out_range_count() const {
  // @@protoc_insertion_point(field_get:y3d.OptimizeOptions.out_range_count)
  return out_range_count_;
}
void OptimizeOptions::set_out_range_count(::google::protobuf::int32 value) {
  
  out_range_count_ = value;
  // @@protoc_insertion_point(field_set:y3d.OptimizeOptions.out_range_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultReply::kErrorFieldNumber;
const int ResultReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultReply::ResultReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ResultReply)
}
ResultReply::ResultReply(const ResultReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:y3d.ResultReply)
}

void ResultReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = false;
  _cached_size_ = 0;
}

ResultReply::~ResultReply() {
  // @@protoc_insertion_point(destructor:y3d.ResultReply)
  SharedDtor();
}

void ResultReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResultReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResultReply::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[17].descriptor;
}

const ResultReply& ResultReply::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResultReply* ResultReply::New(::google::protobuf::Arena* arena) const {
  ResultReply* n = new ResultReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResultReply::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ResultReply)
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = false;
}

bool ResultReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ResultReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool error = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ResultReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ResultReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ResultReply)
  return false;
#undef DO_
}

void ResultReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ResultReply)
  // bool error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->error(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResultReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ResultReply)
}

::google::protobuf::uint8* ResultReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ResultReply)
  // bool error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->error(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResultReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ResultReply)
  return target;
}

size_t ResultReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ResultReply)
  size_t total_size = 0;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool error = 1;
  if (this->error() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResultReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ResultReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ResultReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ResultReply)
    MergeFrom(*source);
  }
}

void ResultReply::MergeFrom(const ResultReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ResultReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void ResultReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ResultReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultReply::CopyFrom(const ResultReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ResultReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultReply::IsInitialized() const {
  return true;
}

void ResultReply::Swap(ResultReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultReply::InternalSwap(ResultReply* other) {
  message_.Swap(&other->message_);
  std::swap(error_, other->error_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResultReply::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResultReply

// bool error = 1;
void ResultReply::clear_error() {
  error_ = false;
}
bool ResultReply::error() const {
  // @@protoc_insertion_point(field_get:y3d.ResultReply.error)
  return error_;
}
void ResultReply::set_error(bool value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:y3d.ResultReply.error)
}

// string message = 2;
void ResultReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResultReply::message() const {
  // @@protoc_insertion_point(field_get:y3d.ResultReply.message)
  return message_.GetNoArena();
}
void ResultReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ResultReply.message)
}
#if LANG_CXX11
void ResultReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ResultReply.message)
}
#endif
void ResultReply::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ResultReply.message)
}
void ResultReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ResultReply.message)
}
::std::string* ResultReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ResultReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResultReply::release_message() {
  // @@protoc_insertion_point(field_release:y3d.ResultReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResultReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:y3d.ResultReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyParam::EmptyParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EmptyParam)
}
EmptyParam::EmptyParam(const EmptyParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:y3d.EmptyParam)
}

void EmptyParam::SharedCtor() {
  _cached_size_ = 0;
}

EmptyParam::~EmptyParam() {
  // @@protoc_insertion_point(destructor:y3d.EmptyParam)
  SharedDtor();
}

void EmptyParam::SharedDtor() {
}

void EmptyParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmptyParam::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[18].descriptor;
}

const EmptyParam& EmptyParam::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

EmptyParam* EmptyParam::New(::google::protobuf::Arena* arena) const {
  EmptyParam* n = new EmptyParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EmptyParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EmptyParam)
}

bool EmptyParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EmptyParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EmptyParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EmptyParam)
  return false;
#undef DO_
}

void EmptyParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EmptyParam)
  // @@protoc_insertion_point(serialize_end:y3d.EmptyParam)
}

::google::protobuf::uint8* EmptyParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EmptyParam)
  // @@protoc_insertion_point(serialize_to_array_end:y3d.EmptyParam)
  return target;
}

size_t EmptyParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EmptyParam)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmptyParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EmptyParam)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmptyParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EmptyParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EmptyParam)
    MergeFrom(*source);
  }
}

void EmptyParam::MergeFrom(const EmptyParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EmptyParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void EmptyParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EmptyParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyParam::CopyFrom(const EmptyParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EmptyParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyParam::IsInitialized() const {
  return true;
}

void EmptyParam::Swap(EmptyParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyParam::InternalSwap(EmptyParam* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmptyParam::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmptyParam

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenameParam::kUseSelectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenameParam::RenameParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.RenameParam)
}
RenameParam::RenameParam(const RenameParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  use_select_ = from.use_select_;
  // @@protoc_insertion_point(copy_constructor:y3d.RenameParam)
}

void RenameParam::SharedCtor() {
  use_select_ = false;
  _cached_size_ = 0;
}

RenameParam::~RenameParam() {
  // @@protoc_insertion_point(destructor:y3d.RenameParam)
  SharedDtor();
}

void RenameParam::SharedDtor() {
}

void RenameParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenameParam::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[19].descriptor;
}

const RenameParam& RenameParam::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

RenameParam* RenameParam::New(::google::protobuf::Arena* arena) const {
  RenameParam* n = new RenameParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RenameParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.RenameParam)
  use_select_ = false;
}

bool RenameParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.RenameParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool use_select = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_select_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.RenameParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.RenameParam)
  return false;
#undef DO_
}

void RenameParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.RenameParam)
  // bool use_select = 1;
  if (this->use_select() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_select(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.RenameParam)
}

::google::protobuf::uint8* RenameParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.RenameParam)
  // bool use_select = 1;
  if (this->use_select() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_select(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.RenameParam)
  return target;
}

size_t RenameParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.RenameParam)
  size_t total_size = 0;

  // bool use_select = 1;
  if (this->use_select() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenameParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.RenameParam)
  GOOGLE_DCHECK_NE(&from, this);
  const RenameParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RenameParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.RenameParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.RenameParam)
    MergeFrom(*source);
  }
}

void RenameParam::MergeFrom(const RenameParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.RenameParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.use_select() != 0) {
    set_use_select(from.use_select());
  }
}

void RenameParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.RenameParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameParam::CopyFrom(const RenameParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.RenameParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameParam::IsInitialized() const {
  return true;
}

void RenameParam::Swap(RenameParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenameParam::InternalSwap(RenameParam* other) {
  std::swap(use_select_, other->use_select_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RenameParam::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RenameParam

// bool use_select = 1;
void RenameParam::clear_use_select() {
  use_select_ = false;
}
bool RenameParam::use_select() const {
  // @@protoc_insertion_point(field_get:y3d.RenameParam.use_select)
  return use_select_;
}
void RenameParam::set_use_select(bool value) {
  
  use_select_ = value;
  // @@protoc_insertion_point(field_set:y3d.RenameParam.use_select)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Make4TestParam::kOnameFieldNumber;
const int Make4TestParam::kLowpolyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Make4TestParam::Make4TestParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.Make4TestParam)
}
Make4TestParam::Make4TestParam(const Make4TestParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lowpoly_(from.lowpoly_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oname().size() > 0) {
    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  // @@protoc_insertion_point(copy_constructor:y3d.Make4TestParam)
}

void Make4TestParam::SharedCtor() {
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Make4TestParam::~Make4TestParam() {
  // @@protoc_insertion_point(destructor:y3d.Make4TestParam)
  SharedDtor();
}

void Make4TestParam::SharedDtor() {
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Make4TestParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Make4TestParam::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[20].descriptor;
}

const Make4TestParam& Make4TestParam::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

Make4TestParam* Make4TestParam::New(::google::protobuf::Arena* arena) const {
  Make4TestParam* n = new Make4TestParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Make4TestParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.Make4TestParam)
  lowpoly_.Clear();
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Make4TestParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.Make4TestParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.Make4TestParam.oname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.ELowpoly lowpoly = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_lowpoly()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.Make4TestParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.Make4TestParam)
  return false;
#undef DO_
}

void Make4TestParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.Make4TestParam)
  // string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.Make4TestParam.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oname(), output);
  }

  // repeated .y3d.ELowpoly lowpoly = 2;
  for (unsigned int i = 0, n = this->lowpoly_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->lowpoly(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.Make4TestParam)
}

::google::protobuf::uint8* Make4TestParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.Make4TestParam)
  // string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.Make4TestParam.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oname(), target);
  }

  // repeated .y3d.ELowpoly lowpoly = 2;
  for (unsigned int i = 0, n = this->lowpoly_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->lowpoly(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.Make4TestParam)
  return target;
}

size_t Make4TestParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.Make4TestParam)
  size_t total_size = 0;

  // repeated .y3d.ELowpoly lowpoly = 2;
  {
    unsigned int count = this->lowpoly_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lowpoly(i));
    }
  }

  // string oname = 1;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Make4TestParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.Make4TestParam)
  GOOGLE_DCHECK_NE(&from, this);
  const Make4TestParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Make4TestParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.Make4TestParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.Make4TestParam)
    MergeFrom(*source);
  }
}

void Make4TestParam::MergeFrom(const Make4TestParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.Make4TestParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lowpoly_.MergeFrom(from.lowpoly_);
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
}

void Make4TestParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.Make4TestParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Make4TestParam::CopyFrom(const Make4TestParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.Make4TestParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Make4TestParam::IsInitialized() const {
  return true;
}

void Make4TestParam::Swap(Make4TestParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Make4TestParam::InternalSwap(Make4TestParam* other) {
  lowpoly_.UnsafeArenaSwap(&other->lowpoly_);
  oname_.Swap(&other->oname_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Make4TestParam::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Make4TestParam

// string oname = 1;
void Make4TestParam::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Make4TestParam::oname() const {
  // @@protoc_insertion_point(field_get:y3d.Make4TestParam.oname)
  return oname_.GetNoArena();
}
void Make4TestParam::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.Make4TestParam.oname)
}
#if LANG_CXX11
void Make4TestParam::set_oname(::std::string&& value) {
  
  oname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.Make4TestParam.oname)
}
#endif
void Make4TestParam::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.Make4TestParam.oname)
}
void Make4TestParam::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.Make4TestParam.oname)
}
::std::string* Make4TestParam::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.Make4TestParam.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Make4TestParam::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.Make4TestParam.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Make4TestParam::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.Make4TestParam.oname)
}

// repeated .y3d.ELowpoly lowpoly = 2;
int Make4TestParam::lowpoly_size() const {
  return lowpoly_.size();
}
void Make4TestParam::clear_lowpoly() {
  lowpoly_.Clear();
}
const ::y3d::ELowpoly& Make4TestParam::lowpoly(int index) const {
  // @@protoc_insertion_point(field_get:y3d.Make4TestParam.lowpoly)
  return lowpoly_.Get(index);
}
::y3d::ELowpoly* Make4TestParam::mutable_lowpoly(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.Make4TestParam.lowpoly)
  return lowpoly_.Mutable(index);
}
::y3d::ELowpoly* Make4TestParam::add_lowpoly() {
  // @@protoc_insertion_point(field_add:y3d.Make4TestParam.lowpoly)
  return lowpoly_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::ELowpoly >*
Make4TestParam::mutable_lowpoly() {
  // @@protoc_insertion_point(field_mutable_list:y3d.Make4TestParam.lowpoly)
  return &lowpoly_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::ELowpoly >&
Make4TestParam::lowpoly() const {
  // @@protoc_insertion_point(field_list:y3d.Make4TestParam.lowpoly)
  return lowpoly_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestOParam::kIdFieldNumber;
const int TestOParam::kOnameFieldNumber;
const int TestOParam::kLowRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestOParam::TestOParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.TestOParam)
}
TestOParam::TestOParam(const TestOParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oname().size() > 0) {
    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&low_ratio_) -
    reinterpret_cast<char*>(&id_) + sizeof(low_ratio_));
  // @@protoc_insertion_point(copy_constructor:y3d.TestOParam)
}

void TestOParam::SharedCtor() {
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&low_ratio_) -
    reinterpret_cast<char*>(&id_) + sizeof(low_ratio_));
  _cached_size_ = 0;
}

TestOParam::~TestOParam() {
  // @@protoc_insertion_point(destructor:y3d.TestOParam)
  SharedDtor();
}

void TestOParam::SharedDtor() {
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestOParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestOParam::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[21].descriptor;
}

const TestOParam& TestOParam::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestOParam* TestOParam::New(::google::protobuf::Arena* arena) const {
  TestOParam* n = new TestOParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestOParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.TestOParam)
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&low_ratio_) -
    reinterpret_cast<char*>(&id_) + sizeof(low_ratio_));
}

bool TestOParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.TestOParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oname = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.TestOParam.oname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float low_ratio = 3;
      case 3: {
        if (tag == 29u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.TestOParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.TestOParam)
  return false;
#undef DO_
}

void TestOParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.TestOParam)
  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string oname = 2;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestOParam.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->oname(), output);
  }

  // float low_ratio = 3;
  if (this->low_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->low_ratio(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.TestOParam)
}

::google::protobuf::uint8* TestOParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.TestOParam)
  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string oname = 2;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestOParam.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->oname(), target);
  }

  // float low_ratio = 3;
  if (this->low_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->low_ratio(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.TestOParam)
  return target;
}

size_t TestOParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.TestOParam)
  size_t total_size = 0;

  // string oname = 2;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // float low_ratio = 3;
  if (this->low_ratio() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestOParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.TestOParam)
  GOOGLE_DCHECK_NE(&from, this);
  const TestOParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestOParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.TestOParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.TestOParam)
    MergeFrom(*source);
  }
}

void TestOParam::MergeFrom(const TestOParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.TestOParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.low_ratio() != 0) {
    set_low_ratio(from.low_ratio());
  }
}

void TestOParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.TestOParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestOParam::CopyFrom(const TestOParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.TestOParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestOParam::IsInitialized() const {
  return true;
}

void TestOParam::Swap(TestOParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestOParam::InternalSwap(TestOParam* other) {
  oname_.Swap(&other->oname_);
  std::swap(id_, other->id_);
  std::swap(low_ratio_, other->low_ratio_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestOParam::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestOParam

// int32 id = 1;
void TestOParam::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 TestOParam::id() const {
  // @@protoc_insertion_point(field_get:y3d.TestOParam.id)
  return id_;
}
void TestOParam::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:y3d.TestOParam.id)
}

// string oname = 2;
void TestOParam::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TestOParam::oname() const {
  // @@protoc_insertion_point(field_get:y3d.TestOParam.oname)
  return oname_.GetNoArena();
}
void TestOParam::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.TestOParam.oname)
}
#if LANG_CXX11
void TestOParam::set_oname(::std::string&& value) {
  
  oname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.TestOParam.oname)
}
#endif
void TestOParam::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.TestOParam.oname)
}
void TestOParam::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.TestOParam.oname)
}
::std::string* TestOParam::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.TestOParam.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestOParam::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.TestOParam.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestOParam::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.TestOParam.oname)
}

// float low_ratio = 3;
void TestOParam::clear_low_ratio() {
  low_ratio_ = 0;
}
float TestOParam::low_ratio() const {
  // @@protoc_insertion_point(field_get:y3d.TestOParam.low_ratio)
  return low_ratio_;
}
void TestOParam::set_low_ratio(float value) {
  
  low_ratio_ = value;
  // @@protoc_insertion_point(field_set:y3d.TestOParam.low_ratio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptimizeParam::kRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptimizeParam::OptimizeParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.OptimizeParam)
}
OptimizeParam::OptimizeParam(const OptimizeParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ratio_ = from.ratio_;
  // @@protoc_insertion_point(copy_constructor:y3d.OptimizeParam)
}

void OptimizeParam::SharedCtor() {
  ratio_ = 0;
  _cached_size_ = 0;
}

OptimizeParam::~OptimizeParam() {
  // @@protoc_insertion_point(destructor:y3d.OptimizeParam)
  SharedDtor();
}

void OptimizeParam::SharedDtor() {
}

void OptimizeParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptimizeParam::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[22].descriptor;
}

const OptimizeParam& OptimizeParam::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

OptimizeParam* OptimizeParam::New(::google::protobuf::Arena* arena) const {
  OptimizeParam* n = new OptimizeParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptimizeParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.OptimizeParam)
  ratio_ = 0;
}

bool OptimizeParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.OptimizeParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float ratio = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.OptimizeParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.OptimizeParam)
  return false;
#undef DO_
}

void OptimizeParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.OptimizeParam)
  // float ratio = 1;
  if (this->ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->ratio(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.OptimizeParam)
}

::google::protobuf::uint8* OptimizeParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.OptimizeParam)
  // float ratio = 1;
  if (this->ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->ratio(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.OptimizeParam)
  return target;
}

size_t OptimizeParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.OptimizeParam)
  size_t total_size = 0;

  // float ratio = 1;
  if (this->ratio() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptimizeParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.OptimizeParam)
  GOOGLE_DCHECK_NE(&from, this);
  const OptimizeParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptimizeParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.OptimizeParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.OptimizeParam)
    MergeFrom(*source);
  }
}

void OptimizeParam::MergeFrom(const OptimizeParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.OptimizeParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ratio() != 0) {
    set_ratio(from.ratio());
  }
}

void OptimizeParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.OptimizeParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizeParam::CopyFrom(const OptimizeParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.OptimizeParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizeParam::IsInitialized() const {
  return true;
}

void OptimizeParam::Swap(OptimizeParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptimizeParam::InternalSwap(OptimizeParam* other) {
  std::swap(ratio_, other->ratio_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptimizeParam::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OptimizeParam

// float ratio = 1;
void OptimizeParam::clear_ratio() {
  ratio_ = 0;
}
float OptimizeParam::ratio() const {
  // @@protoc_insertion_point(field_get:y3d.OptimizeParam.ratio)
  return ratio_;
}
void OptimizeParam::set_ratio(float value) {
  
  ratio_ = value;
  // @@protoc_insertion_point(field_set:y3d.OptimizeParam.ratio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchOptimizeParam::kRatioFieldNumber;
const int BatchOptimizeParam::kFolderFieldNumber;
const int BatchOptimizeParam::kFilenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchOptimizeParam::BatchOptimizeParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.BatchOptimizeParam)
}
BatchOptimizeParam::BatchOptimizeParam(const BatchOptimizeParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.folder().size() > 0) {
    folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ratio_ = from.ratio_;
  // @@protoc_insertion_point(copy_constructor:y3d.BatchOptimizeParam)
}

void BatchOptimizeParam::SharedCtor() {
  folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ratio_ = 0;
  _cached_size_ = 0;
}

BatchOptimizeParam::~BatchOptimizeParam() {
  // @@protoc_insertion_point(destructor:y3d.BatchOptimizeParam)
  SharedDtor();
}

void BatchOptimizeParam::SharedDtor() {
  folder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BatchOptimizeParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchOptimizeParam::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[23].descriptor;
}

const BatchOptimizeParam& BatchOptimizeParam::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

BatchOptimizeParam* BatchOptimizeParam::New(::google::protobuf::Arena* arena) const {
  BatchOptimizeParam* n = new BatchOptimizeParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchOptimizeParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.BatchOptimizeParam)
  folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ratio_ = 0;
}

bool BatchOptimizeParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.BatchOptimizeParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float ratio = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string folder = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_folder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->folder().data(), this->folder().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.BatchOptimizeParam.folder"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filename = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.BatchOptimizeParam.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.BatchOptimizeParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.BatchOptimizeParam)
  return false;
#undef DO_
}

void BatchOptimizeParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.BatchOptimizeParam)
  // float ratio = 1;
  if (this->ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->ratio(), output);
  }

  // string folder = 2;
  if (this->folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder().data(), this->folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.BatchOptimizeParam.folder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->folder(), output);
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.BatchOptimizeParam.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.BatchOptimizeParam)
}

::google::protobuf::uint8* BatchOptimizeParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.BatchOptimizeParam)
  // float ratio = 1;
  if (this->ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->ratio(), target);
  }

  // string folder = 2;
  if (this->folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder().data(), this->folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.BatchOptimizeParam.folder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->folder(), target);
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.BatchOptimizeParam.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.BatchOptimizeParam)
  return target;
}

size_t BatchOptimizeParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.BatchOptimizeParam)
  size_t total_size = 0;

  // string folder = 2;
  if (this->folder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->folder());
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // float ratio = 1;
  if (this->ratio() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchOptimizeParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.BatchOptimizeParam)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchOptimizeParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchOptimizeParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.BatchOptimizeParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.BatchOptimizeParam)
    MergeFrom(*source);
  }
}

void BatchOptimizeParam::MergeFrom(const BatchOptimizeParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.BatchOptimizeParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.folder().size() > 0) {

    folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_);
  }
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.ratio() != 0) {
    set_ratio(from.ratio());
  }
}

void BatchOptimizeParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.BatchOptimizeParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchOptimizeParam::CopyFrom(const BatchOptimizeParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.BatchOptimizeParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchOptimizeParam::IsInitialized() const {
  return true;
}

void BatchOptimizeParam::Swap(BatchOptimizeParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchOptimizeParam::InternalSwap(BatchOptimizeParam* other) {
  folder_.Swap(&other->folder_);
  filename_.Swap(&other->filename_);
  std::swap(ratio_, other->ratio_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchOptimizeParam::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchOptimizeParam

// float ratio = 1;
void BatchOptimizeParam::clear_ratio() {
  ratio_ = 0;
}
float BatchOptimizeParam::ratio() const {
  // @@protoc_insertion_point(field_get:y3d.BatchOptimizeParam.ratio)
  return ratio_;
}
void BatchOptimizeParam::set_ratio(float value) {
  
  ratio_ = value;
  // @@protoc_insertion_point(field_set:y3d.BatchOptimizeParam.ratio)
}

// string folder = 2;
void BatchOptimizeParam::clear_folder() {
  folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BatchOptimizeParam::folder() const {
  // @@protoc_insertion_point(field_get:y3d.BatchOptimizeParam.folder)
  return folder_.GetNoArena();
}
void BatchOptimizeParam::set_folder(const ::std::string& value) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.BatchOptimizeParam.folder)
}
#if LANG_CXX11
void BatchOptimizeParam::set_folder(::std::string&& value) {
  
  folder_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.BatchOptimizeParam.folder)
}
#endif
void BatchOptimizeParam::set_folder(const char* value) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.BatchOptimizeParam.folder)
}
void BatchOptimizeParam::set_folder(const char* value, size_t size) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.BatchOptimizeParam.folder)
}
::std::string* BatchOptimizeParam::mutable_folder() {
  
  // @@protoc_insertion_point(field_mutable:y3d.BatchOptimizeParam.folder)
  return folder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BatchOptimizeParam::release_folder() {
  // @@protoc_insertion_point(field_release:y3d.BatchOptimizeParam.folder)
  
  return folder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BatchOptimizeParam::set_allocated_folder(::std::string* folder) {
  if (folder != NULL) {
    
  } else {
    
  }
  folder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), folder);
  // @@protoc_insertion_point(field_set_allocated:y3d.BatchOptimizeParam.folder)
}

// string filename = 3;
void BatchOptimizeParam::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BatchOptimizeParam::filename() const {
  // @@protoc_insertion_point(field_get:y3d.BatchOptimizeParam.filename)
  return filename_.GetNoArena();
}
void BatchOptimizeParam::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.BatchOptimizeParam.filename)
}
#if LANG_CXX11
void BatchOptimizeParam::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.BatchOptimizeParam.filename)
}
#endif
void BatchOptimizeParam::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.BatchOptimizeParam.filename)
}
void BatchOptimizeParam::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.BatchOptimizeParam.filename)
}
::std::string* BatchOptimizeParam::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:y3d.BatchOptimizeParam.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BatchOptimizeParam::release_filename() {
  // @@protoc_insertion_point(field_release:y3d.BatchOptimizeParam.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BatchOptimizeParam::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:y3d.BatchOptimizeParam.filename)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringParam::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringParam::StringParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.StringParam)
}
StringParam::StringParam(const StringParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str().size() > 0) {
    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  // @@protoc_insertion_point(copy_constructor:y3d.StringParam)
}

void StringParam::SharedCtor() {
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StringParam::~StringParam() {
  // @@protoc_insertion_point(destructor:y3d.StringParam)
  SharedDtor();
}

void StringParam::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StringParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringParam::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[24].descriptor;
}

const StringParam& StringParam::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringParam* StringParam::New(::google::protobuf::Arena* arena) const {
  StringParam* n = new StringParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.StringParam)
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StringParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.StringParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string str = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.StringParam.str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.StringParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.StringParam)
  return false;
#undef DO_
}

void StringParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.StringParam)
  // string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.StringParam.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.StringParam)
}

::google::protobuf::uint8* StringParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.StringParam)
  // string str = 1;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.StringParam.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.StringParam)
  return target;
}

size_t StringParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.StringParam)
  size_t total_size = 0;

  // string str = 1;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.StringParam)
  GOOGLE_DCHECK_NE(&from, this);
  const StringParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.StringParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.StringParam)
    MergeFrom(*source);
  }
}

void StringParam::MergeFrom(const StringParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.StringParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
}

void StringParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.StringParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringParam::CopyFrom(const StringParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.StringParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringParam::IsInitialized() const {
  return true;
}

void StringParam::Swap(StringParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringParam::InternalSwap(StringParam* other) {
  str_.Swap(&other->str_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringParam::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[24];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringParam

// string str = 1;
void StringParam::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StringParam::str() const {
  // @@protoc_insertion_point(field_get:y3d.StringParam.str)
  return str_.GetNoArena();
}
void StringParam::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.StringParam.str)
}
#if LANG_CXX11
void StringParam::set_str(::std::string&& value) {
  
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.StringParam.str)
}
#endif
void StringParam::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.StringParam.str)
}
void StringParam::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.StringParam.str)
}
::std::string* StringParam::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:y3d.StringParam.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringParam::release_str() {
  // @@protoc_insertion_point(field_release:y3d.StringParam.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringParam::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:y3d.StringParam.str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestParam::kTestNameFieldNumber;
const int TestParam::kAnythingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestParam::TestParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.TestParam)
}
TestParam::TestParam(const TestParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  test_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_name().size() > 0) {
    test_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_name_);
  }
  if (from.has_anything()) {
    anything_ = new ::google::protobuf::Any(*from.anything_);
  } else {
    anything_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:y3d.TestParam)
}

void TestParam::SharedCtor() {
  test_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anything_ = NULL;
  _cached_size_ = 0;
}

TestParam::~TestParam() {
  // @@protoc_insertion_point(destructor:y3d.TestParam)
  SharedDtor();
}

void TestParam::SharedDtor() {
  test_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete anything_;
  }
}

void TestParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestParam::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[25].descriptor;
}

const TestParam& TestParam::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestParam* TestParam::New(::google::protobuf::Arena* arena) const {
  TestParam* n = new TestParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.TestParam)
  test_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && anything_ != NULL) {
    delete anything_;
  }
  anything_ = NULL;
}

bool TestParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.TestParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string test_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_name().data(), this->test_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.TestParam.test_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any anything = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_anything()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.TestParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.TestParam)
  return false;
#undef DO_
}

void TestParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.TestParam)
  // string test_name = 1;
  if (this->test_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_name().data(), this->test_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestParam.test_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->test_name(), output);
  }

  // .google.protobuf.Any anything = 2;
  if (this->has_anything()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->anything_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.TestParam)
}

::google::protobuf::uint8* TestParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.TestParam)
  // string test_name = 1;
  if (this->test_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_name().data(), this->test_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestParam.test_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->test_name(), target);
  }

  // .google.protobuf.Any anything = 2;
  if (this->has_anything()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->anything_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.TestParam)
  return target;
}

size_t TestParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.TestParam)
  size_t total_size = 0;

  // string test_name = 1;
  if (this->test_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_name());
  }

  // .google.protobuf.Any anything = 2;
  if (this->has_anything()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->anything_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.TestParam)
  GOOGLE_DCHECK_NE(&from, this);
  const TestParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.TestParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.TestParam)
    MergeFrom(*source);
  }
}

void TestParam::MergeFrom(const TestParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.TestParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.test_name().size() > 0) {

    test_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_name_);
  }
  if (from.has_anything()) {
    mutable_anything()->::google::protobuf::Any::MergeFrom(from.anything());
  }
}

void TestParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.TestParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestParam::CopyFrom(const TestParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.TestParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestParam::IsInitialized() const {
  return true;
}

void TestParam::Swap(TestParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestParam::InternalSwap(TestParam* other) {
  test_name_.Swap(&other->test_name_);
  std::swap(anything_, other->anything_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestParam::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[25];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestParam

// string test_name = 1;
void TestParam::clear_test_name() {
  test_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TestParam::test_name() const {
  // @@protoc_insertion_point(field_get:y3d.TestParam.test_name)
  return test_name_.GetNoArena();
}
void TestParam::set_test_name(const ::std::string& value) {
  
  test_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.TestParam.test_name)
}
#if LANG_CXX11
void TestParam::set_test_name(::std::string&& value) {
  
  test_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.TestParam.test_name)
}
#endif
void TestParam::set_test_name(const char* value) {
  
  test_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.TestParam.test_name)
}
void TestParam::set_test_name(const char* value, size_t size) {
  
  test_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.TestParam.test_name)
}
::std::string* TestParam::mutable_test_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.TestParam.test_name)
  return test_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestParam::release_test_name() {
  // @@protoc_insertion_point(field_release:y3d.TestParam.test_name)
  
  return test_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestParam::set_allocated_test_name(::std::string* test_name) {
  if (test_name != NULL) {
    
  } else {
    
  }
  test_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), test_name);
  // @@protoc_insertion_point(field_set_allocated:y3d.TestParam.test_name)
}

// .google.protobuf.Any anything = 2;
bool TestParam::has_anything() const {
  return this != internal_default_instance() && anything_ != NULL;
}
void TestParam::clear_anything() {
  if (GetArenaNoVirtual() == NULL && anything_ != NULL) delete anything_;
  anything_ = NULL;
}
const ::google::protobuf::Any& TestParam::anything() const {
  // @@protoc_insertion_point(field_get:y3d.TestParam.anything)
  return anything_ != NULL ? *anything_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* TestParam::mutable_anything() {
  
  if (anything_ == NULL) {
    anything_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:y3d.TestParam.anything)
  return anything_;
}
::google::protobuf::Any* TestParam::release_anything() {
  // @@protoc_insertion_point(field_release:y3d.TestParam.anything)
  
  ::google::protobuf::Any* temp = anything_;
  anything_ = NULL;
  return temp;
}
void TestParam::set_allocated_anything(::google::protobuf::Any* anything) {
  delete anything_;
  anything_ = anything;
  if (anything) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.TestParam.anything)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YEvent::kNoeventFieldNumber;
const int YEvent::kSelectFieldNumber;
const int YEvent::kMoveFieldNumber;
const int YEvent::kRotateFieldNumber;
const int YEvent::kDelFieldNumber;
const int YEvent::kSelectManyFieldNumber;
const int YEvent::kIsolateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YEvent::YEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YEvent)
}
YEvent::YEvent(const YEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_event();
  switch (from.event_case()) {
    case kNoevent: {
      mutable_noevent()->::y3d::ENone::MergeFrom(from.noevent());
      break;
    }
    case kSelect: {
      mutable_select()->::y3d::ESelect::MergeFrom(from.select());
      break;
    }
    case kMove: {
      mutable_move()->::y3d::EMove::MergeFrom(from.move());
      break;
    }
    case kRotate: {
      mutable_rotate()->::y3d::ERotate::MergeFrom(from.rotate());
      break;
    }
    case kDel: {
      mutable_del()->::y3d::EDelete::MergeFrom(from.del());
      break;
    }
    case kSelectMany: {
      mutable_select_many()->::y3d::ESelectMany::MergeFrom(from.select_many());
      break;
    }
    case kIsolate: {
      mutable_isolate()->::y3d::EIsolate::MergeFrom(from.isolate());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:y3d.YEvent)
}

void YEvent::SharedCtor() {
  clear_has_event();
  _cached_size_ = 0;
}

YEvent::~YEvent() {
  // @@protoc_insertion_point(destructor:y3d.YEvent)
  SharedDtor();
}

void YEvent::SharedDtor() {
  if (has_event()) {
    clear_event();
  }
}

void YEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YEvent::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[26].descriptor;
}

const YEvent& YEvent::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YEvent* YEvent::New(::google::protobuf::Arena* arena) const {
  YEvent* n = new YEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YEvent::clear_event() {
// @@protoc_insertion_point(one_of_clear_start:y3d.YEvent)
  switch (event_case()) {
    case kNoevent: {
      delete event_.noevent_;
      break;
    }
    case kSelect: {
      delete event_.select_;
      break;
    }
    case kMove: {
      delete event_.move_;
      break;
    }
    case kRotate: {
      delete event_.rotate_;
      break;
    }
    case kDel: {
      delete event_.del_;
      break;
    }
    case kSelectMany: {
      delete event_.select_many_;
      break;
    }
    case kIsolate: {
      delete event_.isolate_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void YEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YEvent)
  clear_event();
}

bool YEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.ENone noevent = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_noevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.ESelect select = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_select()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.EMove move = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_move()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.ERotate rotate = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rotate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.EDelete del = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_del()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.ESelectMany select_many = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_select_many()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.EIsolate isolate = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_isolate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YEvent)
  return false;
#undef DO_
}

void YEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YEvent)
  // .y3d.ENone noevent = 1;
  if (has_noevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *event_.noevent_, output);
  }

  // .y3d.ESelect select = 2;
  if (has_select()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *event_.select_, output);
  }

  // .y3d.EMove move = 3;
  if (has_move()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *event_.move_, output);
  }

  // .y3d.ERotate rotate = 4;
  if (has_rotate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *event_.rotate_, output);
  }

  // .y3d.EDelete del = 5;
  if (has_del()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *event_.del_, output);
  }

  // .y3d.ESelectMany select_many = 6;
  if (has_select_many()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *event_.select_many_, output);
  }

  // .y3d.EIsolate isolate = 7;
  if (has_isolate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *event_.isolate_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YEvent)
}

::google::protobuf::uint8* YEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YEvent)
  // .y3d.ENone noevent = 1;
  if (has_noevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *event_.noevent_, false, target);
  }

  // .y3d.ESelect select = 2;
  if (has_select()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *event_.select_, false, target);
  }

  // .y3d.EMove move = 3;
  if (has_move()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *event_.move_, false, target);
  }

  // .y3d.ERotate rotate = 4;
  if (has_rotate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *event_.rotate_, false, target);
  }

  // .y3d.EDelete del = 5;
  if (has_del()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *event_.del_, false, target);
  }

  // .y3d.ESelectMany select_many = 6;
  if (has_select_many()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *event_.select_many_, false, target);
  }

  // .y3d.EIsolate isolate = 7;
  if (has_isolate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *event_.isolate_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YEvent)
  return target;
}

size_t YEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YEvent)
  size_t total_size = 0;

  switch (event_case()) {
    // .y3d.ENone noevent = 1;
    case kNoevent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.noevent_);
      break;
    }
    // .y3d.ESelect select = 2;
    case kSelect: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.select_);
      break;
    }
    // .y3d.EMove move = 3;
    case kMove: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.move_);
      break;
    }
    // .y3d.ERotate rotate = 4;
    case kRotate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.rotate_);
      break;
    }
    // .y3d.EDelete del = 5;
    case kDel: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.del_);
      break;
    }
    // .y3d.ESelectMany select_many = 6;
    case kSelectMany: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.select_many_);
      break;
    }
    // .y3d.EIsolate isolate = 7;
    case kIsolate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.isolate_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const YEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YEvent)
    MergeFrom(*source);
  }
}

void YEvent::MergeFrom(const YEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  switch (from.event_case()) {
    case kNoevent: {
      mutable_noevent()->::y3d::ENone::MergeFrom(from.noevent());
      break;
    }
    case kSelect: {
      mutable_select()->::y3d::ESelect::MergeFrom(from.select());
      break;
    }
    case kMove: {
      mutable_move()->::y3d::EMove::MergeFrom(from.move());
      break;
    }
    case kRotate: {
      mutable_rotate()->::y3d::ERotate::MergeFrom(from.rotate());
      break;
    }
    case kDel: {
      mutable_del()->::y3d::EDelete::MergeFrom(from.del());
      break;
    }
    case kSelectMany: {
      mutable_select_many()->::y3d::ESelectMany::MergeFrom(from.select_many());
      break;
    }
    case kIsolate: {
      mutable_isolate()->::y3d::EIsolate::MergeFrom(from.isolate());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void YEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YEvent::CopyFrom(const YEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YEvent::IsInitialized() const {
  return true;
}

void YEvent::Swap(YEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YEvent::InternalSwap(YEvent* other) {
  std::swap(event_, other->event_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YEvent::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[26];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YEvent

// .y3d.ENone noevent = 1;
bool YEvent::has_noevent() const {
  return event_case() == kNoevent;
}
void YEvent::set_has_noevent() {
  _oneof_case_[0] = kNoevent;
}
void YEvent::clear_noevent() {
  if (has_noevent()) {
    delete event_.noevent_;
    clear_has_event();
  }
}
 const ::y3d::ENone& YEvent::noevent() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.noevent)
  return has_noevent()
      ? *event_.noevent_
      : ::y3d::ENone::default_instance();
}
::y3d::ENone* YEvent::mutable_noevent() {
  if (!has_noevent()) {
    clear_event();
    set_has_noevent();
    event_.noevent_ = new ::y3d::ENone;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.noevent)
  return event_.noevent_;
}
::y3d::ENone* YEvent::release_noevent() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.noevent)
  if (has_noevent()) {
    clear_has_event();
    ::y3d::ENone* temp = event_.noevent_;
    event_.noevent_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_noevent(::y3d::ENone* noevent) {
  clear_event();
  if (noevent) {
    set_has_noevent();
    event_.noevent_ = noevent;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.noevent)
}

// .y3d.ESelect select = 2;
bool YEvent::has_select() const {
  return event_case() == kSelect;
}
void YEvent::set_has_select() {
  _oneof_case_[0] = kSelect;
}
void YEvent::clear_select() {
  if (has_select()) {
    delete event_.select_;
    clear_has_event();
  }
}
 const ::y3d::ESelect& YEvent::select() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.select)
  return has_select()
      ? *event_.select_
      : ::y3d::ESelect::default_instance();
}
::y3d::ESelect* YEvent::mutable_select() {
  if (!has_select()) {
    clear_event();
    set_has_select();
    event_.select_ = new ::y3d::ESelect;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.select)
  return event_.select_;
}
::y3d::ESelect* YEvent::release_select() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.select)
  if (has_select()) {
    clear_has_event();
    ::y3d::ESelect* temp = event_.select_;
    event_.select_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_select(::y3d::ESelect* select) {
  clear_event();
  if (select) {
    set_has_select();
    event_.select_ = select;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.select)
}

// .y3d.EMove move = 3;
bool YEvent::has_move() const {
  return event_case() == kMove;
}
void YEvent::set_has_move() {
  _oneof_case_[0] = kMove;
}
void YEvent::clear_move() {
  if (has_move()) {
    delete event_.move_;
    clear_has_event();
  }
}
 const ::y3d::EMove& YEvent::move() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.move)
  return has_move()
      ? *event_.move_
      : ::y3d::EMove::default_instance();
}
::y3d::EMove* YEvent::mutable_move() {
  if (!has_move()) {
    clear_event();
    set_has_move();
    event_.move_ = new ::y3d::EMove;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.move)
  return event_.move_;
}
::y3d::EMove* YEvent::release_move() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.move)
  if (has_move()) {
    clear_has_event();
    ::y3d::EMove* temp = event_.move_;
    event_.move_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_move(::y3d::EMove* move) {
  clear_event();
  if (move) {
    set_has_move();
    event_.move_ = move;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.move)
}

// .y3d.ERotate rotate = 4;
bool YEvent::has_rotate() const {
  return event_case() == kRotate;
}
void YEvent::set_has_rotate() {
  _oneof_case_[0] = kRotate;
}
void YEvent::clear_rotate() {
  if (has_rotate()) {
    delete event_.rotate_;
    clear_has_event();
  }
}
 const ::y3d::ERotate& YEvent::rotate() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.rotate)
  return has_rotate()
      ? *event_.rotate_
      : ::y3d::ERotate::default_instance();
}
::y3d::ERotate* YEvent::mutable_rotate() {
  if (!has_rotate()) {
    clear_event();
    set_has_rotate();
    event_.rotate_ = new ::y3d::ERotate;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.rotate)
  return event_.rotate_;
}
::y3d::ERotate* YEvent::release_rotate() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.rotate)
  if (has_rotate()) {
    clear_has_event();
    ::y3d::ERotate* temp = event_.rotate_;
    event_.rotate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_rotate(::y3d::ERotate* rotate) {
  clear_event();
  if (rotate) {
    set_has_rotate();
    event_.rotate_ = rotate;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.rotate)
}

// .y3d.EDelete del = 5;
bool YEvent::has_del() const {
  return event_case() == kDel;
}
void YEvent::set_has_del() {
  _oneof_case_[0] = kDel;
}
void YEvent::clear_del() {
  if (has_del()) {
    delete event_.del_;
    clear_has_event();
  }
}
 const ::y3d::EDelete& YEvent::del() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.del)
  return has_del()
      ? *event_.del_
      : ::y3d::EDelete::default_instance();
}
::y3d::EDelete* YEvent::mutable_del() {
  if (!has_del()) {
    clear_event();
    set_has_del();
    event_.del_ = new ::y3d::EDelete;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.del)
  return event_.del_;
}
::y3d::EDelete* YEvent::release_del() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.del)
  if (has_del()) {
    clear_has_event();
    ::y3d::EDelete* temp = event_.del_;
    event_.del_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_del(::y3d::EDelete* del) {
  clear_event();
  if (del) {
    set_has_del();
    event_.del_ = del;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.del)
}

// .y3d.ESelectMany select_many = 6;
bool YEvent::has_select_many() const {
  return event_case() == kSelectMany;
}
void YEvent::set_has_select_many() {
  _oneof_case_[0] = kSelectMany;
}
void YEvent::clear_select_many() {
  if (has_select_many()) {
    delete event_.select_many_;
    clear_has_event();
  }
}
 const ::y3d::ESelectMany& YEvent::select_many() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.select_many)
  return has_select_many()
      ? *event_.select_many_
      : ::y3d::ESelectMany::default_instance();
}
::y3d::ESelectMany* YEvent::mutable_select_many() {
  if (!has_select_many()) {
    clear_event();
    set_has_select_many();
    event_.select_many_ = new ::y3d::ESelectMany;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.select_many)
  return event_.select_many_;
}
::y3d::ESelectMany* YEvent::release_select_many() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.select_many)
  if (has_select_many()) {
    clear_has_event();
    ::y3d::ESelectMany* temp = event_.select_many_;
    event_.select_many_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_select_many(::y3d::ESelectMany* select_many) {
  clear_event();
  if (select_many) {
    set_has_select_many();
    event_.select_many_ = select_many;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.select_many)
}

// .y3d.EIsolate isolate = 7;
bool YEvent::has_isolate() const {
  return event_case() == kIsolate;
}
void YEvent::set_has_isolate() {
  _oneof_case_[0] = kIsolate;
}
void YEvent::clear_isolate() {
  if (has_isolate()) {
    delete event_.isolate_;
    clear_has_event();
  }
}
 const ::y3d::EIsolate& YEvent::isolate() const {
  // @@protoc_insertion_point(field_get:y3d.YEvent.isolate)
  return has_isolate()
      ? *event_.isolate_
      : ::y3d::EIsolate::default_instance();
}
::y3d::EIsolate* YEvent::mutable_isolate() {
  if (!has_isolate()) {
    clear_event();
    set_has_isolate();
    event_.isolate_ = new ::y3d::EIsolate;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YEvent.isolate)
  return event_.isolate_;
}
::y3d::EIsolate* YEvent::release_isolate() {
  // @@protoc_insertion_point(field_release:y3d.YEvent.isolate)
  if (has_isolate()) {
    clear_has_event();
    ::y3d::EIsolate* temp = event_.isolate_;
    event_.isolate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YEvent::set_allocated_isolate(::y3d::EIsolate* isolate) {
  clear_event();
  if (isolate) {
    set_has_isolate();
    event_.isolate_ = isolate;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YEvent.isolate)
}

bool YEvent::has_event() const {
  return event_case() != EVENT_NOT_SET;
}
void YEvent::clear_has_event() {
  _oneof_case_[0] = EVENT_NOT_SET;
}
YEvent::EventCase YEvent::event_case() const {
  return YEvent::EventCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENone::ENone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ENone)
}
ENone::ENone(const ENone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:y3d.ENone)
}

void ENone::SharedCtor() {
  _cached_size_ = 0;
}

ENone::~ENone() {
  // @@protoc_insertion_point(destructor:y3d.ENone)
  SharedDtor();
}

void ENone::SharedDtor() {
}

void ENone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ENone::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[27].descriptor;
}

const ENone& ENone::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

ENone* ENone::New(::google::protobuf::Arena* arena) const {
  ENone* n = new ENone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ENone::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ENone)
}

bool ENone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ENone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ENone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ENone)
  return false;
#undef DO_
}

void ENone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ENone)
  // @@protoc_insertion_point(serialize_end:y3d.ENone)
}

::google::protobuf::uint8* ENone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ENone)
  // @@protoc_insertion_point(serialize_to_array_end:y3d.ENone)
  return target;
}

size_t ENone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ENone)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ENone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ENone)
  GOOGLE_DCHECK_NE(&from, this);
  const ENone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ENone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ENone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ENone)
    MergeFrom(*source);
  }
}

void ENone::MergeFrom(const ENone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ENone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void ENone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ENone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENone::CopyFrom(const ENone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ENone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENone::IsInitialized() const {
  return true;
}

void ENone::Swap(ENone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENone::InternalSwap(ENone* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ENone::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[27];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ENone

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ESelect::kNameFieldNumber;
const int ESelect::kIsolateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ESelect::ESelect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ESelect)
}
ESelect::ESelect(const ESelect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  isolate_ = from.isolate_;
  // @@protoc_insertion_point(copy_constructor:y3d.ESelect)
}

void ESelect::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isolate_ = false;
  _cached_size_ = 0;
}

ESelect::~ESelect() {
  // @@protoc_insertion_point(destructor:y3d.ESelect)
  SharedDtor();
}

void ESelect::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ESelect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ESelect::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[28].descriptor;
}

const ESelect& ESelect::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

ESelect* ESelect::New(::google::protobuf::Arena* arena) const {
  ESelect* n = new ESelect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ESelect::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ESelect)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isolate_ = false;
}

bool ESelect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ESelect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ESelect.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isolate = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isolate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ESelect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ESelect)
  return false;
#undef DO_
}

void ESelect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ESelect)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ESelect.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bool isolate = 2;
  if (this->isolate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isolate(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ESelect)
}

::google::protobuf::uint8* ESelect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ESelect)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ESelect.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bool isolate = 2;
  if (this->isolate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isolate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ESelect)
  return target;
}

size_t ESelect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ESelect)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool isolate = 2;
  if (this->isolate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ESelect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ESelect)
  GOOGLE_DCHECK_NE(&from, this);
  const ESelect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ESelect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ESelect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ESelect)
    MergeFrom(*source);
  }
}

void ESelect::MergeFrom(const ESelect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ESelect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.isolate() != 0) {
    set_isolate(from.isolate());
  }
}

void ESelect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ESelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ESelect::CopyFrom(const ESelect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ESelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ESelect::IsInitialized() const {
  return true;
}

void ESelect::Swap(ESelect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ESelect::InternalSwap(ESelect* other) {
  name_.Swap(&other->name_);
  std::swap(isolate_, other->isolate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ESelect::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[28];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ESelect

// string name = 1;
void ESelect::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ESelect::name() const {
  // @@protoc_insertion_point(field_get:y3d.ESelect.name)
  return name_.GetNoArena();
}
void ESelect::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ESelect.name)
}
#if LANG_CXX11
void ESelect::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ESelect.name)
}
#endif
void ESelect::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ESelect.name)
}
void ESelect::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ESelect.name)
}
::std::string* ESelect::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ESelect.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ESelect::release_name() {
  // @@protoc_insertion_point(field_release:y3d.ESelect.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ESelect::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.ESelect.name)
}

// bool isolate = 2;
void ESelect::clear_isolate() {
  isolate_ = false;
}
bool ESelect::isolate() const {
  // @@protoc_insertion_point(field_get:y3d.ESelect.isolate)
  return isolate_;
}
void ESelect::set_isolate(bool value) {
  
  isolate_ = value;
  // @@protoc_insertion_point(field_set:y3d.ESelect.isolate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ESelectMany::kNameFieldNumber;
const int ESelectMany::kIsolateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ESelectMany::ESelectMany()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ESelectMany)
}
ESelectMany::ESelectMany(const ESelectMany& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      name_(from.name_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  isolate_ = from.isolate_;
  // @@protoc_insertion_point(copy_constructor:y3d.ESelectMany)
}

void ESelectMany::SharedCtor() {
  isolate_ = false;
  _cached_size_ = 0;
}

ESelectMany::~ESelectMany() {
  // @@protoc_insertion_point(destructor:y3d.ESelectMany)
  SharedDtor();
}

void ESelectMany::SharedDtor() {
}

void ESelectMany::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ESelectMany::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[29].descriptor;
}

const ESelectMany& ESelectMany::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

ESelectMany* ESelectMany::New(::google::protobuf::Arena* arena) const {
  ESelectMany* n = new ESelectMany;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ESelectMany::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ESelectMany)
  name_.Clear();
  isolate_ = false;
}

bool ESelectMany::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ESelectMany)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name(this->name_size() - 1).data(),
            this->name(this->name_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ESelectMany.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isolate = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isolate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ESelectMany)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ESelectMany)
  return false;
#undef DO_
}

void ESelectMany::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ESelectMany)
  // repeated string name = 1;
  for (int i = 0; i < this->name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name(i).data(), this->name(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ESelectMany.name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(i), output);
  }

  // bool isolate = 2;
  if (this->isolate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isolate(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ESelectMany)
}

::google::protobuf::uint8* ESelectMany::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ESelectMany)
  // repeated string name = 1;
  for (int i = 0; i < this->name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name(i).data(), this->name(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ESelectMany.name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->name(i), target);
  }

  // bool isolate = 2;
  if (this->isolate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isolate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ESelectMany)
  return target;
}

size_t ESelectMany::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ESelectMany)
  size_t total_size = 0;

  // repeated string name = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->name_size());
  for (int i = 0; i < this->name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name(i));
  }

  // bool isolate = 2;
  if (this->isolate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ESelectMany::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ESelectMany)
  GOOGLE_DCHECK_NE(&from, this);
  const ESelectMany* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ESelectMany>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ESelectMany)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ESelectMany)
    MergeFrom(*source);
  }
}

void ESelectMany::MergeFrom(const ESelectMany& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ESelectMany)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.MergeFrom(from.name_);
  if (from.isolate() != 0) {
    set_isolate(from.isolate());
  }
}

void ESelectMany::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ESelectMany)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ESelectMany::CopyFrom(const ESelectMany& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ESelectMany)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ESelectMany::IsInitialized() const {
  return true;
}

void ESelectMany::Swap(ESelectMany* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ESelectMany::InternalSwap(ESelectMany* other) {
  name_.UnsafeArenaSwap(&other->name_);
  std::swap(isolate_, other->isolate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ESelectMany::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[29];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ESelectMany

// repeated string name = 1;
int ESelectMany::name_size() const {
  return name_.size();
}
void ESelectMany::clear_name() {
  name_.Clear();
}
const ::std::string& ESelectMany::name(int index) const {
  // @@protoc_insertion_point(field_get:y3d.ESelectMany.name)
  return name_.Get(index);
}
::std::string* ESelectMany::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.ESelectMany.name)
  return name_.Mutable(index);
}
void ESelectMany::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.ESelectMany.name)
  name_.Mutable(index)->assign(value);
}
void ESelectMany::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.ESelectMany.name)
}
void ESelectMany::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.ESelectMany.name)
}
::std::string* ESelectMany::add_name() {
  // @@protoc_insertion_point(field_add_mutable:y3d.ESelectMany.name)
  return name_.Add();
}
void ESelectMany::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.ESelectMany.name)
}
void ESelectMany::add_name(const char* value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.ESelectMany.name)
}
void ESelectMany::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.ESelectMany.name)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ESelectMany::name() const {
  // @@protoc_insertion_point(field_list:y3d.ESelectMany.name)
  return name_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ESelectMany::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:y3d.ESelectMany.name)
  return &name_;
}

// bool isolate = 2;
void ESelectMany::clear_isolate() {
  isolate_ = false;
}
bool ESelectMany::isolate() const {
  // @@protoc_insertion_point(field_get:y3d.ESelectMany.isolate)
  return isolate_;
}
void ESelectMany::set_isolate(bool value) {
  
  isolate_ = value;
  // @@protoc_insertion_point(field_set:y3d.ESelectMany.isolate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EMove::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EMove::EMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EMove)
}
EMove::EMove(const EMove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      point_(from.point_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:y3d.EMove)
}

void EMove::SharedCtor() {
  _cached_size_ = 0;
}

EMove::~EMove() {
  // @@protoc_insertion_point(destructor:y3d.EMove)
  SharedDtor();
}

void EMove::SharedDtor() {
}

void EMove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EMove::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[30].descriptor;
}

const EMove& EMove::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

EMove* EMove::New(::google::protobuf::Arena* arena) const {
  EMove* n = new EMove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EMove::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EMove)
  point_.Clear();
}

bool EMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EMove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float point = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_point())));
        } else if (tag == 13u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_point())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EMove)
  return false;
#undef DO_
}

void EMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EMove)
  // repeated float point = 1;
  if (this->point_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_point_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->point().data(), this->point_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.EMove)
}

::google::protobuf::uint8* EMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EMove)
  // repeated float point = 1;
  if (this->point_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _point_cached_byte_size_, target);
  }
  for (int i = 0; i < this->point_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->point(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.EMove)
  return target;
}

size_t EMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EMove)
  size_t total_size = 0;

  // repeated float point = 1;
  {
    unsigned int count = this->point_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _point_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EMove)
  GOOGLE_DCHECK_NE(&from, this);
  const EMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EMove)
    MergeFrom(*source);
  }
}

void EMove::MergeFrom(const EMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EMove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  point_.MergeFrom(from.point_);
}

void EMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EMove::CopyFrom(const EMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EMove::IsInitialized() const {
  return true;
}

void EMove::Swap(EMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EMove::InternalSwap(EMove* other) {
  point_.UnsafeArenaSwap(&other->point_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EMove::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[30];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EMove

// repeated float point = 1;
int EMove::point_size() const {
  return point_.size();
}
void EMove::clear_point() {
  point_.Clear();
}
float EMove::point(int index) const {
  // @@protoc_insertion_point(field_get:y3d.EMove.point)
  return point_.Get(index);
}
void EMove::set_point(int index, float value) {
  point_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.EMove.point)
}
void EMove::add_point(float value) {
  point_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.EMove.point)
}
const ::google::protobuf::RepeatedField< float >&
EMove::point() const {
  // @@protoc_insertion_point(field_list:y3d.EMove.point)
  return point_;
}
::google::protobuf::RepeatedField< float >*
EMove::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:y3d.EMove.point)
  return &point_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ERotate::kRotateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ERotate::ERotate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ERotate)
}
ERotate::ERotate(const ERotate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rotate_(from.rotate_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:y3d.ERotate)
}

void ERotate::SharedCtor() {
  _cached_size_ = 0;
}

ERotate::~ERotate() {
  // @@protoc_insertion_point(destructor:y3d.ERotate)
  SharedDtor();
}

void ERotate::SharedDtor() {
}

void ERotate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ERotate::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[31].descriptor;
}

const ERotate& ERotate::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

ERotate* ERotate::New(::google::protobuf::Arena* arena) const {
  ERotate* n = new ERotate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ERotate::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ERotate)
  rotate_.Clear();
}

bool ERotate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ERotate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float rotate = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rotate())));
        } else if (tag == 13u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_rotate())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ERotate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ERotate)
  return false;
#undef DO_
}

void ERotate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ERotate)
  // repeated float rotate = 1;
  if (this->rotate_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_rotate_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->rotate().data(), this->rotate_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ERotate)
}

::google::protobuf::uint8* ERotate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ERotate)
  // repeated float rotate = 1;
  if (this->rotate_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _rotate_cached_byte_size_, target);
  }
  for (int i = 0; i < this->rotate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->rotate(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ERotate)
  return target;
}

size_t ERotate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ERotate)
  size_t total_size = 0;

  // repeated float rotate = 1;
  {
    unsigned int count = this->rotate_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rotate_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ERotate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ERotate)
  GOOGLE_DCHECK_NE(&from, this);
  const ERotate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ERotate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ERotate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ERotate)
    MergeFrom(*source);
  }
}

void ERotate::MergeFrom(const ERotate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ERotate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rotate_.MergeFrom(from.rotate_);
}

void ERotate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ERotate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ERotate::CopyFrom(const ERotate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ERotate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ERotate::IsInitialized() const {
  return true;
}

void ERotate::Swap(ERotate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ERotate::InternalSwap(ERotate* other) {
  rotate_.UnsafeArenaSwap(&other->rotate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ERotate::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[31];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ERotate

// repeated float rotate = 1;
int ERotate::rotate_size() const {
  return rotate_.size();
}
void ERotate::clear_rotate() {
  rotate_.Clear();
}
float ERotate::rotate(int index) const {
  // @@protoc_insertion_point(field_get:y3d.ERotate.rotate)
  return rotate_.Get(index);
}
void ERotate::set_rotate(int index, float value) {
  rotate_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.ERotate.rotate)
}
void ERotate::add_rotate(float value) {
  rotate_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.ERotate.rotate)
}
const ::google::protobuf::RepeatedField< float >&
ERotate::rotate() const {
  // @@protoc_insertion_point(field_list:y3d.ERotate.rotate)
  return rotate_;
}
::google::protobuf::RepeatedField< float >*
ERotate::mutable_rotate() {
  // @@protoc_insertion_point(field_mutable_list:y3d.ERotate.rotate)
  return &rotate_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EDelete::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EDelete::EDelete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EDelete)
}
EDelete::EDelete(const EDelete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:y3d.EDelete)
}

void EDelete::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EDelete::~EDelete() {
  // @@protoc_insertion_point(destructor:y3d.EDelete)
  SharedDtor();
}

void EDelete::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EDelete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EDelete::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[32].descriptor;
}

const EDelete& EDelete::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

EDelete* EDelete::New(::google::protobuf::Arena* arena) const {
  EDelete* n = new EDelete;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EDelete::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EDelete)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EDelete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EDelete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.EDelete.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EDelete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EDelete)
  return false;
#undef DO_
}

void EDelete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EDelete)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EDelete.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.EDelete)
}

::google::protobuf::uint8* EDelete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EDelete)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EDelete.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.EDelete)
  return target;
}

size_t EDelete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EDelete)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EDelete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EDelete)
  GOOGLE_DCHECK_NE(&from, this);
  const EDelete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EDelete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EDelete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EDelete)
    MergeFrom(*source);
  }
}

void EDelete::MergeFrom(const EDelete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EDelete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void EDelete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EDelete::CopyFrom(const EDelete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EDelete::IsInitialized() const {
  return true;
}

void EDelete::Swap(EDelete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EDelete::InternalSwap(EDelete* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EDelete::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[32];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EDelete

// string name = 1;
void EDelete::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EDelete::name() const {
  // @@protoc_insertion_point(field_get:y3d.EDelete.name)
  return name_.GetNoArena();
}
void EDelete::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.EDelete.name)
}
#if LANG_CXX11
void EDelete::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.EDelete.name)
}
#endif
void EDelete::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.EDelete.name)
}
void EDelete::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.EDelete.name)
}
::std::string* EDelete::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.EDelete.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EDelete::release_name() {
  // @@protoc_insertion_point(field_release:y3d.EDelete.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EDelete::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.EDelete.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EIsolate::kNameFieldNumber;
const int EIsolate::kEndIsolateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EIsolate::EIsolate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EIsolate)
}
EIsolate::EIsolate(const EIsolate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  endisolate_ = from.endisolate_;
  // @@protoc_insertion_point(copy_constructor:y3d.EIsolate)
}

void EIsolate::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endisolate_ = false;
  _cached_size_ = 0;
}

EIsolate::~EIsolate() {
  // @@protoc_insertion_point(destructor:y3d.EIsolate)
  SharedDtor();
}

void EIsolate::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EIsolate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EIsolate::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[33].descriptor;
}

const EIsolate& EIsolate::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

EIsolate* EIsolate::New(::google::protobuf::Arena* arena) const {
  EIsolate* n = new EIsolate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EIsolate::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EIsolate)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endisolate_ = false;
}

bool EIsolate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EIsolate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.EIsolate.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool endIsolate = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &endisolate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EIsolate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EIsolate)
  return false;
#undef DO_
}

void EIsolate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EIsolate)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EIsolate.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bool endIsolate = 2;
  if (this->endisolate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->endisolate(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.EIsolate)
}

::google::protobuf::uint8* EIsolate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EIsolate)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EIsolate.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bool endIsolate = 2;
  if (this->endisolate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->endisolate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.EIsolate)
  return target;
}

size_t EIsolate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EIsolate)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool endIsolate = 2;
  if (this->endisolate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EIsolate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EIsolate)
  GOOGLE_DCHECK_NE(&from, this);
  const EIsolate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EIsolate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EIsolate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EIsolate)
    MergeFrom(*source);
  }
}

void EIsolate::MergeFrom(const EIsolate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EIsolate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.endisolate() != 0) {
    set_endisolate(from.endisolate());
  }
}

void EIsolate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EIsolate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EIsolate::CopyFrom(const EIsolate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EIsolate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EIsolate::IsInitialized() const {
  return true;
}

void EIsolate::Swap(EIsolate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EIsolate::InternalSwap(EIsolate* other) {
  name_.Swap(&other->name_);
  std::swap(endisolate_, other->endisolate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EIsolate::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[33];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EIsolate

// string name = 1;
void EIsolate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EIsolate::name() const {
  // @@protoc_insertion_point(field_get:y3d.EIsolate.name)
  return name_.GetNoArena();
}
void EIsolate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.EIsolate.name)
}
#if LANG_CXX11
void EIsolate::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.EIsolate.name)
}
#endif
void EIsolate::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.EIsolate.name)
}
void EIsolate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.EIsolate.name)
}
::std::string* EIsolate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.EIsolate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EIsolate::release_name() {
  // @@protoc_insertion_point(field_release:y3d.EIsolate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EIsolate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.EIsolate.name)
}

// bool endIsolate = 2;
void EIsolate::clear_endisolate() {
  endisolate_ = false;
}
bool EIsolate::endisolate() const {
  // @@protoc_insertion_point(field_get:y3d.EIsolate.endIsolate)
  return endisolate_;
}
void EIsolate::set_endisolate(bool value) {
  
  endisolate_ = value;
  // @@protoc_insertion_point(field_set:y3d.EIsolate.endIsolate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseEvent::kErrorFieldNumber;
const int ResponseEvent::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseEvent::ResponseEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ResponseEvent)
}
ResponseEvent::ResponseEvent(const ResponseEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:y3d.ResponseEvent)
}

void ResponseEvent::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = false;
  _cached_size_ = 0;
}

ResponseEvent::~ResponseEvent() {
  // @@protoc_insertion_point(destructor:y3d.ResponseEvent)
  SharedDtor();
}

void ResponseEvent::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseEvent::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[34].descriptor;
}

const ResponseEvent& ResponseEvent::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseEvent* ResponseEvent::New(::google::protobuf::Arena* arena) const {
  ResponseEvent* n = new ResponseEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ResponseEvent)
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = false;
}

bool ResponseEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ResponseEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool error = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ResponseEvent.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ResponseEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ResponseEvent)
  return false;
#undef DO_
}

void ResponseEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ResponseEvent)
  // bool error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->error(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResponseEvent.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ResponseEvent)
}

::google::protobuf::uint8* ResponseEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ResponseEvent)
  // bool error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->error(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResponseEvent.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ResponseEvent)
  return target;
}

size_t ResponseEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ResponseEvent)
  size_t total_size = 0;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // bool error = 1;
  if (this->error() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ResponseEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ResponseEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ResponseEvent)
    MergeFrom(*source);
  }
}

void ResponseEvent::MergeFrom(const ResponseEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ResponseEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void ResponseEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ResponseEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseEvent::CopyFrom(const ResponseEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ResponseEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseEvent::IsInitialized() const {
  return true;
}

void ResponseEvent::Swap(ResponseEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseEvent::InternalSwap(ResponseEvent* other) {
  msg_.Swap(&other->msg_);
  std::swap(error_, other->error_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseEvent::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[34];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseEvent

// bool error = 1;
void ResponseEvent::clear_error() {
  error_ = false;
}
bool ResponseEvent::error() const {
  // @@protoc_insertion_point(field_get:y3d.ResponseEvent.error)
  return error_;
}
void ResponseEvent::set_error(bool value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:y3d.ResponseEvent.error)
}

// string msg = 2;
void ResponseEvent::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseEvent::msg() const {
  // @@protoc_insertion_point(field_get:y3d.ResponseEvent.msg)
  return msg_.GetNoArena();
}
void ResponseEvent::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ResponseEvent.msg)
}
#if LANG_CXX11
void ResponseEvent::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ResponseEvent.msg)
}
#endif
void ResponseEvent::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ResponseEvent.msg)
}
void ResponseEvent::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ResponseEvent.msg)
}
::std::string* ResponseEvent::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ResponseEvent.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseEvent::release_msg() {
  // @@protoc_insertion_point(field_release:y3d.ResponseEvent.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseEvent::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:y3d.ResponseEvent.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EUnwrap::kOnameFieldNumber;
const int EUnwrap::kChannelFieldNumber;
const int EUnwrap::kMax3DFieldNumber;
const int EUnwrap::kBlenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EUnwrap::EUnwrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EUnwrap)
}
EUnwrap::EUnwrap(const EUnwrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oname().size() > 0) {
    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  channel_ = from.channel_;
  clear_has_setting();
  switch (from.setting_case()) {
    case kMax3D: {
      mutable_max3d()->::y3d::MaxUnwrap::MergeFrom(from.max3d());
      break;
    }
    case kBlender: {
      mutable_blender()->::y3d::BlenderUnwrap::MergeFrom(from.blender());
      break;
    }
    case SETTING_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:y3d.EUnwrap)
}

void EUnwrap::SharedCtor() {
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  clear_has_setting();
  _cached_size_ = 0;
}

EUnwrap::~EUnwrap() {
  // @@protoc_insertion_point(destructor:y3d.EUnwrap)
  SharedDtor();
}

void EUnwrap::SharedDtor() {
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_setting()) {
    clear_setting();
  }
}

void EUnwrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EUnwrap::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[35].descriptor;
}

const EUnwrap& EUnwrap::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

EUnwrap* EUnwrap::New(::google::protobuf::Arena* arena) const {
  EUnwrap* n = new EUnwrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EUnwrap::clear_setting() {
// @@protoc_insertion_point(one_of_clear_start:y3d.EUnwrap)
  switch (setting_case()) {
    case kMax3D: {
      delete setting_.max3d_;
      break;
    }
    case kBlender: {
      delete setting_.blender_;
      break;
    }
    case SETTING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SETTING_NOT_SET;
}


void EUnwrap::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EUnwrap)
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  clear_setting();
}

bool EUnwrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EUnwrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.EUnwrap.oname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 channel = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.MaxUnwrap max3d = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_max3d()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.BlenderUnwrap blender = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blender()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EUnwrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EUnwrap)
  return false;
#undef DO_
}

void EUnwrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EUnwrap)
  // string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EUnwrap.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oname(), output);
  }

  // int32 channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  // .y3d.MaxUnwrap max3d = 3;
  if (has_max3d()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *setting_.max3d_, output);
  }

  // .y3d.BlenderUnwrap blender = 4;
  if (has_blender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *setting_.blender_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.EUnwrap)
}

::google::protobuf::uint8* EUnwrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EUnwrap)
  // string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EUnwrap.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oname(), target);
  }

  // int32 channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  // .y3d.MaxUnwrap max3d = 3;
  if (has_max3d()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *setting_.max3d_, false, target);
  }

  // .y3d.BlenderUnwrap blender = 4;
  if (has_blender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *setting_.blender_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.EUnwrap)
  return target;
}

size_t EUnwrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EUnwrap)
  size_t total_size = 0;

  // string oname = 1;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  // int32 channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  switch (setting_case()) {
    // .y3d.MaxUnwrap max3d = 3;
    case kMax3D: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *setting_.max3d_);
      break;
    }
    // .y3d.BlenderUnwrap blender = 4;
    case kBlender: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *setting_.blender_);
      break;
    }
    case SETTING_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EUnwrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EUnwrap)
  GOOGLE_DCHECK_NE(&from, this);
  const EUnwrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EUnwrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EUnwrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EUnwrap)
    MergeFrom(*source);
  }
}

void EUnwrap::MergeFrom(const EUnwrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EUnwrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  switch (from.setting_case()) {
    case kMax3D: {
      mutable_max3d()->::y3d::MaxUnwrap::MergeFrom(from.max3d());
      break;
    }
    case kBlender: {
      mutable_blender()->::y3d::BlenderUnwrap::MergeFrom(from.blender());
      break;
    }
    case SETTING_NOT_SET: {
      break;
    }
  }
}

void EUnwrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EUnwrap::CopyFrom(const EUnwrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EUnwrap::IsInitialized() const {
  return true;
}

void EUnwrap::Swap(EUnwrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EUnwrap::InternalSwap(EUnwrap* other) {
  oname_.Swap(&other->oname_);
  std::swap(channel_, other->channel_);
  std::swap(setting_, other->setting_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EUnwrap::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[35];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EUnwrap

// string oname = 1;
void EUnwrap::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EUnwrap::oname() const {
  // @@protoc_insertion_point(field_get:y3d.EUnwrap.oname)
  return oname_.GetNoArena();
}
void EUnwrap::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.EUnwrap.oname)
}
#if LANG_CXX11
void EUnwrap::set_oname(::std::string&& value) {
  
  oname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.EUnwrap.oname)
}
#endif
void EUnwrap::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.EUnwrap.oname)
}
void EUnwrap::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.EUnwrap.oname)
}
::std::string* EUnwrap::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.EUnwrap.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EUnwrap::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.EUnwrap.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EUnwrap::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.EUnwrap.oname)
}

// int32 channel = 2;
void EUnwrap::clear_channel() {
  channel_ = 0;
}
::google::protobuf::int32 EUnwrap::channel() const {
  // @@protoc_insertion_point(field_get:y3d.EUnwrap.channel)
  return channel_;
}
void EUnwrap::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:y3d.EUnwrap.channel)
}

// .y3d.MaxUnwrap max3d = 3;
bool EUnwrap::has_max3d() const {
  return setting_case() == kMax3D;
}
void EUnwrap::set_has_max3d() {
  _oneof_case_[0] = kMax3D;
}
void EUnwrap::clear_max3d() {
  if (has_max3d()) {
    delete setting_.max3d_;
    clear_has_setting();
  }
}
 const ::y3d::MaxUnwrap& EUnwrap::max3d() const {
  // @@protoc_insertion_point(field_get:y3d.EUnwrap.max3d)
  return has_max3d()
      ? *setting_.max3d_
      : ::y3d::MaxUnwrap::default_instance();
}
::y3d::MaxUnwrap* EUnwrap::mutable_max3d() {
  if (!has_max3d()) {
    clear_setting();
    set_has_max3d();
    setting_.max3d_ = new ::y3d::MaxUnwrap;
  }
  // @@protoc_insertion_point(field_mutable:y3d.EUnwrap.max3d)
  return setting_.max3d_;
}
::y3d::MaxUnwrap* EUnwrap::release_max3d() {
  // @@protoc_insertion_point(field_release:y3d.EUnwrap.max3d)
  if (has_max3d()) {
    clear_has_setting();
    ::y3d::MaxUnwrap* temp = setting_.max3d_;
    setting_.max3d_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void EUnwrap::set_allocated_max3d(::y3d::MaxUnwrap* max3d) {
  clear_setting();
  if (max3d) {
    set_has_max3d();
    setting_.max3d_ = max3d;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.EUnwrap.max3d)
}

// .y3d.BlenderUnwrap blender = 4;
bool EUnwrap::has_blender() const {
  return setting_case() == kBlender;
}
void EUnwrap::set_has_blender() {
  _oneof_case_[0] = kBlender;
}
void EUnwrap::clear_blender() {
  if (has_blender()) {
    delete setting_.blender_;
    clear_has_setting();
  }
}
 const ::y3d::BlenderUnwrap& EUnwrap::blender() const {
  // @@protoc_insertion_point(field_get:y3d.EUnwrap.blender)
  return has_blender()
      ? *setting_.blender_
      : ::y3d::BlenderUnwrap::default_instance();
}
::y3d::BlenderUnwrap* EUnwrap::mutable_blender() {
  if (!has_blender()) {
    clear_setting();
    set_has_blender();
    setting_.blender_ = new ::y3d::BlenderUnwrap;
  }
  // @@protoc_insertion_point(field_mutable:y3d.EUnwrap.blender)
  return setting_.blender_;
}
::y3d::BlenderUnwrap* EUnwrap::release_blender() {
  // @@protoc_insertion_point(field_release:y3d.EUnwrap.blender)
  if (has_blender()) {
    clear_has_setting();
    ::y3d::BlenderUnwrap* temp = setting_.blender_;
    setting_.blender_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void EUnwrap::set_allocated_blender(::y3d::BlenderUnwrap* blender) {
  clear_setting();
  if (blender) {
    set_has_blender();
    setting_.blender_ = blender;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.EUnwrap.blender)
}

bool EUnwrap::has_setting() const {
  return setting_case() != SETTING_NOT_SET;
}
void EUnwrap::clear_has_setting() {
  _oneof_case_[0] = SETTING_NOT_SET;
}
EUnwrap::SettingCase EUnwrap::setting_case() const {
  return EUnwrap::SettingCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlenderUnwrap::BlenderUnwrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.BlenderUnwrap)
}
BlenderUnwrap::BlenderUnwrap(const BlenderUnwrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:y3d.BlenderUnwrap)
}

void BlenderUnwrap::SharedCtor() {
  _cached_size_ = 0;
}

BlenderUnwrap::~BlenderUnwrap() {
  // @@protoc_insertion_point(destructor:y3d.BlenderUnwrap)
  SharedDtor();
}

void BlenderUnwrap::SharedDtor() {
}

void BlenderUnwrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlenderUnwrap::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[36].descriptor;
}

const BlenderUnwrap& BlenderUnwrap::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlenderUnwrap* BlenderUnwrap::New(::google::protobuf::Arena* arena) const {
  BlenderUnwrap* n = new BlenderUnwrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlenderUnwrap::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.BlenderUnwrap)
}

bool BlenderUnwrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.BlenderUnwrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.BlenderUnwrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.BlenderUnwrap)
  return false;
#undef DO_
}

void BlenderUnwrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.BlenderUnwrap)
  // @@protoc_insertion_point(serialize_end:y3d.BlenderUnwrap)
}

::google::protobuf::uint8* BlenderUnwrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.BlenderUnwrap)
  // @@protoc_insertion_point(serialize_to_array_end:y3d.BlenderUnwrap)
  return target;
}

size_t BlenderUnwrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.BlenderUnwrap)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlenderUnwrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.BlenderUnwrap)
  GOOGLE_DCHECK_NE(&from, this);
  const BlenderUnwrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlenderUnwrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.BlenderUnwrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.BlenderUnwrap)
    MergeFrom(*source);
  }
}

void BlenderUnwrap::MergeFrom(const BlenderUnwrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.BlenderUnwrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void BlenderUnwrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.BlenderUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlenderUnwrap::CopyFrom(const BlenderUnwrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.BlenderUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlenderUnwrap::IsInitialized() const {
  return true;
}

void BlenderUnwrap::Swap(BlenderUnwrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlenderUnwrap::InternalSwap(BlenderUnwrap* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlenderUnwrap::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[36];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlenderUnwrap

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaxUnwrap::kAngleFieldNumber;
const int MaxUnwrap::kSpacingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaxUnwrap::MaxUnwrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.MaxUnwrap)
}
MaxUnwrap::MaxUnwrap(const MaxUnwrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&angle_, &from.angle_,
    reinterpret_cast<char*>(&spacing_) -
    reinterpret_cast<char*>(&angle_) + sizeof(spacing_));
  // @@protoc_insertion_point(copy_constructor:y3d.MaxUnwrap)
}

void MaxUnwrap::SharedCtor() {
  ::memset(&angle_, 0, reinterpret_cast<char*>(&spacing_) -
    reinterpret_cast<char*>(&angle_) + sizeof(spacing_));
  _cached_size_ = 0;
}

MaxUnwrap::~MaxUnwrap() {
  // @@protoc_insertion_point(destructor:y3d.MaxUnwrap)
  SharedDtor();
}

void MaxUnwrap::SharedDtor() {
}

void MaxUnwrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaxUnwrap::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[37].descriptor;
}

const MaxUnwrap& MaxUnwrap::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

MaxUnwrap* MaxUnwrap::New(::google::protobuf::Arena* arena) const {
  MaxUnwrap* n = new MaxUnwrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MaxUnwrap::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.MaxUnwrap)
  ::memset(&angle_, 0, reinterpret_cast<char*>(&spacing_) -
    reinterpret_cast<char*>(&angle_) + sizeof(spacing_));
}

bool MaxUnwrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.MaxUnwrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float angle = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float spacing = 2;
      case 2: {
        if (tag == 21u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &spacing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.MaxUnwrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.MaxUnwrap)
  return false;
#undef DO_
}

void MaxUnwrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.MaxUnwrap)
  // float angle = 1;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->angle(), output);
  }

  // float spacing = 2;
  if (this->spacing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->spacing(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.MaxUnwrap)
}

::google::protobuf::uint8* MaxUnwrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.MaxUnwrap)
  // float angle = 1;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->angle(), target);
  }

  // float spacing = 2;
  if (this->spacing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->spacing(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.MaxUnwrap)
  return target;
}

size_t MaxUnwrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.MaxUnwrap)
  size_t total_size = 0;

  // float angle = 1;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // float spacing = 2;
  if (this->spacing() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaxUnwrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.MaxUnwrap)
  GOOGLE_DCHECK_NE(&from, this);
  const MaxUnwrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaxUnwrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.MaxUnwrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.MaxUnwrap)
    MergeFrom(*source);
  }
}

void MaxUnwrap::MergeFrom(const MaxUnwrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.MaxUnwrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.spacing() != 0) {
    set_spacing(from.spacing());
  }
}

void MaxUnwrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.MaxUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaxUnwrap::CopyFrom(const MaxUnwrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.MaxUnwrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaxUnwrap::IsInitialized() const {
  return true;
}

void MaxUnwrap::Swap(MaxUnwrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaxUnwrap::InternalSwap(MaxUnwrap* other) {
  std::swap(angle_, other->angle_);
  std::swap(spacing_, other->spacing_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MaxUnwrap::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[37];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MaxUnwrap

// float angle = 1;
void MaxUnwrap::clear_angle() {
  angle_ = 0;
}
float MaxUnwrap::angle() const {
  // @@protoc_insertion_point(field_get:y3d.MaxUnwrap.angle)
  return angle_;
}
void MaxUnwrap::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:y3d.MaxUnwrap.angle)
}

// float spacing = 2;
void MaxUnwrap::clear_spacing() {
  spacing_ = 0;
}
float MaxUnwrap::spacing() const {
  // @@protoc_insertion_point(field_get:y3d.MaxUnwrap.spacing)
  return spacing_;
}
void MaxUnwrap::set_spacing(float value) {
  
  spacing_ = value;
  // @@protoc_insertion_point(field_set:y3d.MaxUnwrap.spacing)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EPacking::kOnameFieldNumber;
const int EPacking::kUvnameFieldNumber;
const int EPacking::kTileSizeFieldNumber;
const int EPacking::kPackmaxFieldNumber;
const int EPacking::kPackrectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EPacking::EPacking()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.EPacking)
}
EPacking::EPacking(const EPacking& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oname().size() > 0) {
    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  uvname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uvname().size() > 0) {
    uvname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uvname_);
  }
  tile_size_ = from.tile_size_;
  clear_has_pack();
  switch (from.pack_case()) {
    case kPackmax: {
      mutable_packmax()->::y3d::Pack3DMax::MergeFrom(from.packmax());
      break;
    }
    case kPackrect: {
      mutable_packrect()->::y3d::PackRect::MergeFrom(from.packrect());
      break;
    }
    case PACK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:y3d.EPacking)
}

void EPacking::SharedCtor() {
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uvname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tile_size_ = 0;
  clear_has_pack();
  _cached_size_ = 0;
}

EPacking::~EPacking() {
  // @@protoc_insertion_point(destructor:y3d.EPacking)
  SharedDtor();
}

void EPacking::SharedDtor() {
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uvname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_pack()) {
    clear_pack();
  }
}

void EPacking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EPacking::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[38].descriptor;
}

const EPacking& EPacking::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

EPacking* EPacking::New(::google::protobuf::Arena* arena) const {
  EPacking* n = new EPacking;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EPacking::clear_pack() {
// @@protoc_insertion_point(one_of_clear_start:y3d.EPacking)
  switch (pack_case()) {
    case kPackmax: {
      delete pack_.packmax_;
      break;
    }
    case kPackrect: {
      delete pack_.packrect_;
      break;
    }
    case PACK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PACK_NOT_SET;
}


void EPacking::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.EPacking)
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uvname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tile_size_ = 0;
  clear_pack();
}

bool EPacking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.EPacking)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.EPacking.oname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uvname = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uvname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uvname().data(), this->uvname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.EPacking.uvname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tile_Size = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tile_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.Pack3DMax packmax = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_packmax()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.PackRect packrect = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_packrect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.EPacking)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.EPacking)
  return false;
#undef DO_
}

void EPacking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.EPacking)
  // string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EPacking.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oname(), output);
  }

  // string uvname = 2;
  if (this->uvname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uvname().data(), this->uvname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EPacking.uvname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uvname(), output);
  }

  // int32 tile_Size = 3;
  if (this->tile_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tile_size(), output);
  }

  // .y3d.Pack3DMax packmax = 4;
  if (has_packmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *pack_.packmax_, output);
  }

  // .y3d.PackRect packrect = 5;
  if (has_packrect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *pack_.packrect_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.EPacking)
}

::google::protobuf::uint8* EPacking::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.EPacking)
  // string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EPacking.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oname(), target);
  }

  // string uvname = 2;
  if (this->uvname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uvname().data(), this->uvname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.EPacking.uvname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uvname(), target);
  }

  // int32 tile_Size = 3;
  if (this->tile_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tile_size(), target);
  }

  // .y3d.Pack3DMax packmax = 4;
  if (has_packmax()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *pack_.packmax_, false, target);
  }

  // .y3d.PackRect packrect = 5;
  if (has_packrect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *pack_.packrect_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.EPacking)
  return target;
}

size_t EPacking::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.EPacking)
  size_t total_size = 0;

  // string oname = 1;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  // string uvname = 2;
  if (this->uvname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uvname());
  }

  // int32 tile_Size = 3;
  if (this->tile_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tile_size());
  }

  switch (pack_case()) {
    // .y3d.Pack3DMax packmax = 4;
    case kPackmax: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *pack_.packmax_);
      break;
    }
    // .y3d.PackRect packrect = 5;
    case kPackrect: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *pack_.packrect_);
      break;
    }
    case PACK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EPacking::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.EPacking)
  GOOGLE_DCHECK_NE(&from, this);
  const EPacking* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EPacking>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.EPacking)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.EPacking)
    MergeFrom(*source);
  }
}

void EPacking::MergeFrom(const EPacking& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.EPacking)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  if (from.uvname().size() > 0) {

    uvname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uvname_);
  }
  if (from.tile_size() != 0) {
    set_tile_size(from.tile_size());
  }
  switch (from.pack_case()) {
    case kPackmax: {
      mutable_packmax()->::y3d::Pack3DMax::MergeFrom(from.packmax());
      break;
    }
    case kPackrect: {
      mutable_packrect()->::y3d::PackRect::MergeFrom(from.packrect());
      break;
    }
    case PACK_NOT_SET: {
      break;
    }
  }
}

void EPacking::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.EPacking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EPacking::CopyFrom(const EPacking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.EPacking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EPacking::IsInitialized() const {
  return true;
}

void EPacking::Swap(EPacking* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EPacking::InternalSwap(EPacking* other) {
  oname_.Swap(&other->oname_);
  uvname_.Swap(&other->uvname_);
  std::swap(tile_size_, other->tile_size_);
  std::swap(pack_, other->pack_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EPacking::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[38];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EPacking

// string oname = 1;
void EPacking::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EPacking::oname() const {
  // @@protoc_insertion_point(field_get:y3d.EPacking.oname)
  return oname_.GetNoArena();
}
void EPacking::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.EPacking.oname)
}
#if LANG_CXX11
void EPacking::set_oname(::std::string&& value) {
  
  oname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.EPacking.oname)
}
#endif
void EPacking::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.EPacking.oname)
}
void EPacking::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.EPacking.oname)
}
::std::string* EPacking::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.EPacking.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EPacking::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.EPacking.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EPacking::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.EPacking.oname)
}

// string uvname = 2;
void EPacking::clear_uvname() {
  uvname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EPacking::uvname() const {
  // @@protoc_insertion_point(field_get:y3d.EPacking.uvname)
  return uvname_.GetNoArena();
}
void EPacking::set_uvname(const ::std::string& value) {
  
  uvname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.EPacking.uvname)
}
#if LANG_CXX11
void EPacking::set_uvname(::std::string&& value) {
  
  uvname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.EPacking.uvname)
}
#endif
void EPacking::set_uvname(const char* value) {
  
  uvname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.EPacking.uvname)
}
void EPacking::set_uvname(const char* value, size_t size) {
  
  uvname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.EPacking.uvname)
}
::std::string* EPacking::mutable_uvname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.EPacking.uvname)
  return uvname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EPacking::release_uvname() {
  // @@protoc_insertion_point(field_release:y3d.EPacking.uvname)
  
  return uvname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EPacking::set_allocated_uvname(::std::string* uvname) {
  if (uvname != NULL) {
    
  } else {
    
  }
  uvname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uvname);
  // @@protoc_insertion_point(field_set_allocated:y3d.EPacking.uvname)
}

// int32 tile_Size = 3;
void EPacking::clear_tile_size() {
  tile_size_ = 0;
}
::google::protobuf::int32 EPacking::tile_size() const {
  // @@protoc_insertion_point(field_get:y3d.EPacking.tile_Size)
  return tile_size_;
}
void EPacking::set_tile_size(::google::protobuf::int32 value) {
  
  tile_size_ = value;
  // @@protoc_insertion_point(field_set:y3d.EPacking.tile_Size)
}

// .y3d.Pack3DMax packmax = 4;
bool EPacking::has_packmax() const {
  return pack_case() == kPackmax;
}
void EPacking::set_has_packmax() {
  _oneof_case_[0] = kPackmax;
}
void EPacking::clear_packmax() {
  if (has_packmax()) {
    delete pack_.packmax_;
    clear_has_pack();
  }
}
 const ::y3d::Pack3DMax& EPacking::packmax() const {
  // @@protoc_insertion_point(field_get:y3d.EPacking.packmax)
  return has_packmax()
      ? *pack_.packmax_
      : ::y3d::Pack3DMax::default_instance();
}
::y3d::Pack3DMax* EPacking::mutable_packmax() {
  if (!has_packmax()) {
    clear_pack();
    set_has_packmax();
    pack_.packmax_ = new ::y3d::Pack3DMax;
  }
  // @@protoc_insertion_point(field_mutable:y3d.EPacking.packmax)
  return pack_.packmax_;
}
::y3d::Pack3DMax* EPacking::release_packmax() {
  // @@protoc_insertion_point(field_release:y3d.EPacking.packmax)
  if (has_packmax()) {
    clear_has_pack();
    ::y3d::Pack3DMax* temp = pack_.packmax_;
    pack_.packmax_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void EPacking::set_allocated_packmax(::y3d::Pack3DMax* packmax) {
  clear_pack();
  if (packmax) {
    set_has_packmax();
    pack_.packmax_ = packmax;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.EPacking.packmax)
}

// .y3d.PackRect packrect = 5;
bool EPacking::has_packrect() const {
  return pack_case() == kPackrect;
}
void EPacking::set_has_packrect() {
  _oneof_case_[0] = kPackrect;
}
void EPacking::clear_packrect() {
  if (has_packrect()) {
    delete pack_.packrect_;
    clear_has_pack();
  }
}
 const ::y3d::PackRect& EPacking::packrect() const {
  // @@protoc_insertion_point(field_get:y3d.EPacking.packrect)
  return has_packrect()
      ? *pack_.packrect_
      : ::y3d::PackRect::default_instance();
}
::y3d::PackRect* EPacking::mutable_packrect() {
  if (!has_packrect()) {
    clear_pack();
    set_has_packrect();
    pack_.packrect_ = new ::y3d::PackRect;
  }
  // @@protoc_insertion_point(field_mutable:y3d.EPacking.packrect)
  return pack_.packrect_;
}
::y3d::PackRect* EPacking::release_packrect() {
  // @@protoc_insertion_point(field_release:y3d.EPacking.packrect)
  if (has_packrect()) {
    clear_has_pack();
    ::y3d::PackRect* temp = pack_.packrect_;
    pack_.packrect_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void EPacking::set_allocated_packrect(::y3d::PackRect* packrect) {
  clear_pack();
  if (packrect) {
    set_has_packrect();
    pack_.packrect_ = packrect;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.EPacking.packrect)
}

bool EPacking::has_pack() const {
  return pack_case() != PACK_NOT_SET;
}
void EPacking::clear_has_pack() {
  _oneof_case_[0] = PACK_NOT_SET;
}
EPacking::PackCase EPacking::pack_case() const {
  return EPacking::PackCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackRect::kDensityFieldNumber;
const int PackRect::kPaddingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackRect::PackRect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.PackRect)
}
PackRect::PackRect(const PackRect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&density_, &from.density_,
    reinterpret_cast<char*>(&padding_) -
    reinterpret_cast<char*>(&density_) + sizeof(padding_));
  // @@protoc_insertion_point(copy_constructor:y3d.PackRect)
}

void PackRect::SharedCtor() {
  ::memset(&density_, 0, reinterpret_cast<char*>(&padding_) -
    reinterpret_cast<char*>(&density_) + sizeof(padding_));
  _cached_size_ = 0;
}

PackRect::~PackRect() {
  // @@protoc_insertion_point(destructor:y3d.PackRect)
  SharedDtor();
}

void PackRect::SharedDtor() {
}

void PackRect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackRect::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[39].descriptor;
}

const PackRect& PackRect::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

PackRect* PackRect::New(::google::protobuf::Arena* arena) const {
  PackRect* n = new PackRect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackRect::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.PackRect)
  ::memset(&density_, 0, reinterpret_cast<char*>(&padding_) -
    reinterpret_cast<char*>(&density_) + sizeof(padding_));
}

bool PackRect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.PackRect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 density = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &density_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float padding = 2;
      case 2: {
        if (tag == 21u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &padding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.PackRect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.PackRect)
  return false;
#undef DO_
}

void PackRect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.PackRect)
  // int32 density = 1;
  if (this->density() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->density(), output);
  }

  // float padding = 2;
  if (this->padding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->padding(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.PackRect)
}

::google::protobuf::uint8* PackRect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.PackRect)
  // int32 density = 1;
  if (this->density() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->density(), target);
  }

  // float padding = 2;
  if (this->padding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->padding(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.PackRect)
  return target;
}

size_t PackRect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.PackRect)
  size_t total_size = 0;

  // int32 density = 1;
  if (this->density() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->density());
  }

  // float padding = 2;
  if (this->padding() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackRect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.PackRect)
  GOOGLE_DCHECK_NE(&from, this);
  const PackRect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackRect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.PackRect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.PackRect)
    MergeFrom(*source);
  }
}

void PackRect::MergeFrom(const PackRect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.PackRect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.density() != 0) {
    set_density(from.density());
  }
  if (from.padding() != 0) {
    set_padding(from.padding());
  }
}

void PackRect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.PackRect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackRect::CopyFrom(const PackRect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.PackRect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackRect::IsInitialized() const {
  return true;
}

void PackRect::Swap(PackRect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackRect::InternalSwap(PackRect* other) {
  std::swap(density_, other->density_);
  std::swap(padding_, other->padding_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackRect::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[39];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackRect

// int32 density = 1;
void PackRect::clear_density() {
  density_ = 0;
}
::google::protobuf::int32 PackRect::density() const {
  // @@protoc_insertion_point(field_get:y3d.PackRect.density)
  return density_;
}
void PackRect::set_density(::google::protobuf::int32 value) {
  
  density_ = value;
  // @@protoc_insertion_point(field_set:y3d.PackRect.density)
}

// float padding = 2;
void PackRect::clear_padding() {
  padding_ = 0;
}
float PackRect::padding() const {
  // @@protoc_insertion_point(field_get:y3d.PackRect.padding)
  return padding_;
}
void PackRect::set_padding(float value) {
  
  padding_ = value;
  // @@protoc_insertion_point(field_set:y3d.PackRect.padding)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pack3DMax::kNumTileFieldNumber;
const int Pack3DMax::kNormalizeFieldNumber;
const int Pack3DMax::kRotateClustersFieldNumber;
const int Pack3DMax::kFillHolesFieldNumber;
const int Pack3DMax::kPaddingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pack3DMax::Pack3DMax()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.Pack3DMax)
}
Pack3DMax::Pack3DMax(const Pack3DMax& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&numtile_, &from.numtile_,
    reinterpret_cast<char*>(&padding_) -
    reinterpret_cast<char*>(&numtile_) + sizeof(padding_));
  // @@protoc_insertion_point(copy_constructor:y3d.Pack3DMax)
}

void Pack3DMax::SharedCtor() {
  ::memset(&numtile_, 0, reinterpret_cast<char*>(&padding_) -
    reinterpret_cast<char*>(&numtile_) + sizeof(padding_));
  _cached_size_ = 0;
}

Pack3DMax::~Pack3DMax() {
  // @@protoc_insertion_point(destructor:y3d.Pack3DMax)
  SharedDtor();
}

void Pack3DMax::SharedDtor() {
}

void Pack3DMax::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pack3DMax::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[40].descriptor;
}

const Pack3DMax& Pack3DMax::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pack3DMax* Pack3DMax::New(::google::protobuf::Arena* arena) const {
  Pack3DMax* n = new Pack3DMax;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pack3DMax::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.Pack3DMax)
  ::memset(&numtile_, 0, reinterpret_cast<char*>(&padding_) -
    reinterpret_cast<char*>(&numtile_) + sizeof(padding_));
}

bool Pack3DMax::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.Pack3DMax)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 numTile = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numtile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool normalize = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &normalize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool rotate_clusters = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rotate_clusters_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool fill_holes = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fill_holes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool padding = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &padding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.Pack3DMax)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.Pack3DMax)
  return false;
#undef DO_
}

void Pack3DMax::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.Pack3DMax)
  // int32 numTile = 1;
  if (this->numtile() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->numtile(), output);
  }

  // bool normalize = 2;
  if (this->normalize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->normalize(), output);
  }

  // bool rotate_clusters = 3;
  if (this->rotate_clusters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->rotate_clusters(), output);
  }

  // bool fill_holes = 4;
  if (this->fill_holes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->fill_holes(), output);
  }

  // bool padding = 5;
  if (this->padding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->padding(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.Pack3DMax)
}

::google::protobuf::uint8* Pack3DMax::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.Pack3DMax)
  // int32 numTile = 1;
  if (this->numtile() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->numtile(), target);
  }

  // bool normalize = 2;
  if (this->normalize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->normalize(), target);
  }

  // bool rotate_clusters = 3;
  if (this->rotate_clusters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->rotate_clusters(), target);
  }

  // bool fill_holes = 4;
  if (this->fill_holes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->fill_holes(), target);
  }

  // bool padding = 5;
  if (this->padding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->padding(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.Pack3DMax)
  return target;
}

size_t Pack3DMax::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.Pack3DMax)
  size_t total_size = 0;

  // int32 numTile = 1;
  if (this->numtile() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numtile());
  }

  // bool normalize = 2;
  if (this->normalize() != 0) {
    total_size += 1 + 1;
  }

  // bool rotate_clusters = 3;
  if (this->rotate_clusters() != 0) {
    total_size += 1 + 1;
  }

  // bool fill_holes = 4;
  if (this->fill_holes() != 0) {
    total_size += 1 + 1;
  }

  // bool padding = 5;
  if (this->padding() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pack3DMax::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.Pack3DMax)
  GOOGLE_DCHECK_NE(&from, this);
  const Pack3DMax* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pack3DMax>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.Pack3DMax)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.Pack3DMax)
    MergeFrom(*source);
  }
}

void Pack3DMax::MergeFrom(const Pack3DMax& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.Pack3DMax)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.numtile() != 0) {
    set_numtile(from.numtile());
  }
  if (from.normalize() != 0) {
    set_normalize(from.normalize());
  }
  if (from.rotate_clusters() != 0) {
    set_rotate_clusters(from.rotate_clusters());
  }
  if (from.fill_holes() != 0) {
    set_fill_holes(from.fill_holes());
  }
  if (from.padding() != 0) {
    set_padding(from.padding());
  }
}

void Pack3DMax::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.Pack3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pack3DMax::CopyFrom(const Pack3DMax& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.Pack3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pack3DMax::IsInitialized() const {
  return true;
}

void Pack3DMax::Swap(Pack3DMax* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pack3DMax::InternalSwap(Pack3DMax* other) {
  std::swap(numtile_, other->numtile_);
  std::swap(normalize_, other->normalize_);
  std::swap(rotate_clusters_, other->rotate_clusters_);
  std::swap(fill_holes_, other->fill_holes_);
  std::swap(padding_, other->padding_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pack3DMax::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[40];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pack3DMax

// int32 numTile = 1;
void Pack3DMax::clear_numtile() {
  numtile_ = 0;
}
::google::protobuf::int32 Pack3DMax::numtile() const {
  // @@protoc_insertion_point(field_get:y3d.Pack3DMax.numTile)
  return numtile_;
}
void Pack3DMax::set_numtile(::google::protobuf::int32 value) {
  
  numtile_ = value;
  // @@protoc_insertion_point(field_set:y3d.Pack3DMax.numTile)
}

// bool normalize = 2;
void Pack3DMax::clear_normalize() {
  normalize_ = false;
}
bool Pack3DMax::normalize() const {
  // @@protoc_insertion_point(field_get:y3d.Pack3DMax.normalize)
  return normalize_;
}
void Pack3DMax::set_normalize(bool value) {
  
  normalize_ = value;
  // @@protoc_insertion_point(field_set:y3d.Pack3DMax.normalize)
}

// bool rotate_clusters = 3;
void Pack3DMax::clear_rotate_clusters() {
  rotate_clusters_ = false;
}
bool Pack3DMax::rotate_clusters() const {
  // @@protoc_insertion_point(field_get:y3d.Pack3DMax.rotate_clusters)
  return rotate_clusters_;
}
void Pack3DMax::set_rotate_clusters(bool value) {
  
  rotate_clusters_ = value;
  // @@protoc_insertion_point(field_set:y3d.Pack3DMax.rotate_clusters)
}

// bool fill_holes = 4;
void Pack3DMax::clear_fill_holes() {
  fill_holes_ = false;
}
bool Pack3DMax::fill_holes() const {
  // @@protoc_insertion_point(field_get:y3d.Pack3DMax.fill_holes)
  return fill_holes_;
}
void Pack3DMax::set_fill_holes(bool value) {
  
  fill_holes_ = value;
  // @@protoc_insertion_point(field_set:y3d.Pack3DMax.fill_holes)
}

// bool padding = 5;
void Pack3DMax::clear_padding() {
  padding_ = false;
}
bool Pack3DMax::padding() const {
  // @@protoc_insertion_point(field_get:y3d.Pack3DMax.padding)
  return padding_;
}
void Pack3DMax::set_padding(bool value) {
  
  padding_ = value;
  // @@protoc_insertion_point(field_set:y3d.Pack3DMax.padding)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ELowpoly::kOnameFieldNumber;
const int ELowpoly::kLp3DmaxFieldNumber;
const int ELowpoly::kLpBlenderFieldNumber;
const int ELowpoly::kLpMeshlabFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ELowpoly::ELowpoly()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ELowpoly)
}
ELowpoly::ELowpoly(const ELowpoly& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oname().size() > 0) {
    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  clear_has_lowtype();
  switch (from.lowtype_case()) {
    case kLp3Dmax: {
      mutable_lp_3dmax()->::y3d::LPoly3DMax::MergeFrom(from.lp_3dmax());
      break;
    }
    case kLpBlender: {
      mutable_lp_blender()->::y3d::LPolyBlender::MergeFrom(from.lp_blender());
      break;
    }
    case kLpMeshlab: {
      mutable_lp_meshlab()->::y3d::LPolyMeshlab::MergeFrom(from.lp_meshlab());
      break;
    }
    case LOWTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:y3d.ELowpoly)
}

void ELowpoly::SharedCtor() {
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lowtype();
  _cached_size_ = 0;
}

ELowpoly::~ELowpoly() {
  // @@protoc_insertion_point(destructor:y3d.ELowpoly)
  SharedDtor();
}

void ELowpoly::SharedDtor() {
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_lowtype()) {
    clear_lowtype();
  }
}

void ELowpoly::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ELowpoly::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[41].descriptor;
}

const ELowpoly& ELowpoly::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

ELowpoly* ELowpoly::New(::google::protobuf::Arena* arena) const {
  ELowpoly* n = new ELowpoly;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ELowpoly::clear_lowtype() {
// @@protoc_insertion_point(one_of_clear_start:y3d.ELowpoly)
  switch (lowtype_case()) {
    case kLp3Dmax: {
      delete lowtype_.lp_3dmax_;
      break;
    }
    case kLpBlender: {
      delete lowtype_.lp_blender_;
      break;
    }
    case kLpMeshlab: {
      delete lowtype_.lp_meshlab_;
      break;
    }
    case LOWTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = LOWTYPE_NOT_SET;
}


void ELowpoly::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ELowpoly)
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_lowtype();
}

bool ELowpoly::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ELowpoly)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ELowpoly.oname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.LPoly3DMax lp_3dmax = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lp_3dmax()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.LPolyBlender lp_blender = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lp_blender()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.LPolyMeshlab lp_meshlab = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lp_meshlab()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ELowpoly)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ELowpoly)
  return false;
#undef DO_
}

void ELowpoly::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ELowpoly)
  // string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ELowpoly.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oname(), output);
  }

  // .y3d.LPoly3DMax lp_3dmax = 2;
  if (has_lp_3dmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *lowtype_.lp_3dmax_, output);
  }

  // .y3d.LPolyBlender lp_blender = 3;
  if (has_lp_blender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *lowtype_.lp_blender_, output);
  }

  // .y3d.LPolyMeshlab lp_meshlab = 4;
  if (has_lp_meshlab()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *lowtype_.lp_meshlab_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ELowpoly)
}

::google::protobuf::uint8* ELowpoly::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ELowpoly)
  // string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ELowpoly.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oname(), target);
  }

  // .y3d.LPoly3DMax lp_3dmax = 2;
  if (has_lp_3dmax()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *lowtype_.lp_3dmax_, false, target);
  }

  // .y3d.LPolyBlender lp_blender = 3;
  if (has_lp_blender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *lowtype_.lp_blender_, false, target);
  }

  // .y3d.LPolyMeshlab lp_meshlab = 4;
  if (has_lp_meshlab()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *lowtype_.lp_meshlab_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ELowpoly)
  return target;
}

size_t ELowpoly::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ELowpoly)
  size_t total_size = 0;

  // string oname = 1;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  switch (lowtype_case()) {
    // .y3d.LPoly3DMax lp_3dmax = 2;
    case kLp3Dmax: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *lowtype_.lp_3dmax_);
      break;
    }
    // .y3d.LPolyBlender lp_blender = 3;
    case kLpBlender: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *lowtype_.lp_blender_);
      break;
    }
    // .y3d.LPolyMeshlab lp_meshlab = 4;
    case kLpMeshlab: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *lowtype_.lp_meshlab_);
      break;
    }
    case LOWTYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ELowpoly::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ELowpoly)
  GOOGLE_DCHECK_NE(&from, this);
  const ELowpoly* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ELowpoly>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ELowpoly)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ELowpoly)
    MergeFrom(*source);
  }
}

void ELowpoly::MergeFrom(const ELowpoly& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ELowpoly)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  switch (from.lowtype_case()) {
    case kLp3Dmax: {
      mutable_lp_3dmax()->::y3d::LPoly3DMax::MergeFrom(from.lp_3dmax());
      break;
    }
    case kLpBlender: {
      mutable_lp_blender()->::y3d::LPolyBlender::MergeFrom(from.lp_blender());
      break;
    }
    case kLpMeshlab: {
      mutable_lp_meshlab()->::y3d::LPolyMeshlab::MergeFrom(from.lp_meshlab());
      break;
    }
    case LOWTYPE_NOT_SET: {
      break;
    }
  }
}

void ELowpoly::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ELowpoly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ELowpoly::CopyFrom(const ELowpoly& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ELowpoly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ELowpoly::IsInitialized() const {
  return true;
}

void ELowpoly::Swap(ELowpoly* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ELowpoly::InternalSwap(ELowpoly* other) {
  oname_.Swap(&other->oname_);
  std::swap(lowtype_, other->lowtype_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ELowpoly::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[41];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ELowpoly

// string oname = 1;
void ELowpoly::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ELowpoly::oname() const {
  // @@protoc_insertion_point(field_get:y3d.ELowpoly.oname)
  return oname_.GetNoArena();
}
void ELowpoly::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ELowpoly.oname)
}
#if LANG_CXX11
void ELowpoly::set_oname(::std::string&& value) {
  
  oname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ELowpoly.oname)
}
#endif
void ELowpoly::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ELowpoly.oname)
}
void ELowpoly::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ELowpoly.oname)
}
::std::string* ELowpoly::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ELowpoly.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ELowpoly::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.ELowpoly.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ELowpoly::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.ELowpoly.oname)
}

// .y3d.LPoly3DMax lp_3dmax = 2;
bool ELowpoly::has_lp_3dmax() const {
  return lowtype_case() == kLp3Dmax;
}
void ELowpoly::set_has_lp_3dmax() {
  _oneof_case_[0] = kLp3Dmax;
}
void ELowpoly::clear_lp_3dmax() {
  if (has_lp_3dmax()) {
    delete lowtype_.lp_3dmax_;
    clear_has_lowtype();
  }
}
 const ::y3d::LPoly3DMax& ELowpoly::lp_3dmax() const {
  // @@protoc_insertion_point(field_get:y3d.ELowpoly.lp_3dmax)
  return has_lp_3dmax()
      ? *lowtype_.lp_3dmax_
      : ::y3d::LPoly3DMax::default_instance();
}
::y3d::LPoly3DMax* ELowpoly::mutable_lp_3dmax() {
  if (!has_lp_3dmax()) {
    clear_lowtype();
    set_has_lp_3dmax();
    lowtype_.lp_3dmax_ = new ::y3d::LPoly3DMax;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ELowpoly.lp_3dmax)
  return lowtype_.lp_3dmax_;
}
::y3d::LPoly3DMax* ELowpoly::release_lp_3dmax() {
  // @@protoc_insertion_point(field_release:y3d.ELowpoly.lp_3dmax)
  if (has_lp_3dmax()) {
    clear_has_lowtype();
    ::y3d::LPoly3DMax* temp = lowtype_.lp_3dmax_;
    lowtype_.lp_3dmax_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ELowpoly::set_allocated_lp_3dmax(::y3d::LPoly3DMax* lp_3dmax) {
  clear_lowtype();
  if (lp_3dmax) {
    set_has_lp_3dmax();
    lowtype_.lp_3dmax_ = lp_3dmax;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ELowpoly.lp_3dmax)
}

// .y3d.LPolyBlender lp_blender = 3;
bool ELowpoly::has_lp_blender() const {
  return lowtype_case() == kLpBlender;
}
void ELowpoly::set_has_lp_blender() {
  _oneof_case_[0] = kLpBlender;
}
void ELowpoly::clear_lp_blender() {
  if (has_lp_blender()) {
    delete lowtype_.lp_blender_;
    clear_has_lowtype();
  }
}
 const ::y3d::LPolyBlender& ELowpoly::lp_blender() const {
  // @@protoc_insertion_point(field_get:y3d.ELowpoly.lp_blender)
  return has_lp_blender()
      ? *lowtype_.lp_blender_
      : ::y3d::LPolyBlender::default_instance();
}
::y3d::LPolyBlender* ELowpoly::mutable_lp_blender() {
  if (!has_lp_blender()) {
    clear_lowtype();
    set_has_lp_blender();
    lowtype_.lp_blender_ = new ::y3d::LPolyBlender;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ELowpoly.lp_blender)
  return lowtype_.lp_blender_;
}
::y3d::LPolyBlender* ELowpoly::release_lp_blender() {
  // @@protoc_insertion_point(field_release:y3d.ELowpoly.lp_blender)
  if (has_lp_blender()) {
    clear_has_lowtype();
    ::y3d::LPolyBlender* temp = lowtype_.lp_blender_;
    lowtype_.lp_blender_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ELowpoly::set_allocated_lp_blender(::y3d::LPolyBlender* lp_blender) {
  clear_lowtype();
  if (lp_blender) {
    set_has_lp_blender();
    lowtype_.lp_blender_ = lp_blender;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ELowpoly.lp_blender)
}

// .y3d.LPolyMeshlab lp_meshlab = 4;
bool ELowpoly::has_lp_meshlab() const {
  return lowtype_case() == kLpMeshlab;
}
void ELowpoly::set_has_lp_meshlab() {
  _oneof_case_[0] = kLpMeshlab;
}
void ELowpoly::clear_lp_meshlab() {
  if (has_lp_meshlab()) {
    delete lowtype_.lp_meshlab_;
    clear_has_lowtype();
  }
}
 const ::y3d::LPolyMeshlab& ELowpoly::lp_meshlab() const {
  // @@protoc_insertion_point(field_get:y3d.ELowpoly.lp_meshlab)
  return has_lp_meshlab()
      ? *lowtype_.lp_meshlab_
      : ::y3d::LPolyMeshlab::default_instance();
}
::y3d::LPolyMeshlab* ELowpoly::mutable_lp_meshlab() {
  if (!has_lp_meshlab()) {
    clear_lowtype();
    set_has_lp_meshlab();
    lowtype_.lp_meshlab_ = new ::y3d::LPolyMeshlab;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ELowpoly.lp_meshlab)
  return lowtype_.lp_meshlab_;
}
::y3d::LPolyMeshlab* ELowpoly::release_lp_meshlab() {
  // @@protoc_insertion_point(field_release:y3d.ELowpoly.lp_meshlab)
  if (has_lp_meshlab()) {
    clear_has_lowtype();
    ::y3d::LPolyMeshlab* temp = lowtype_.lp_meshlab_;
    lowtype_.lp_meshlab_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ELowpoly::set_allocated_lp_meshlab(::y3d::LPolyMeshlab* lp_meshlab) {
  clear_lowtype();
  if (lp_meshlab) {
    set_has_lp_meshlab();
    lowtype_.lp_meshlab_ = lp_meshlab;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ELowpoly.lp_meshlab)
}

bool ELowpoly::has_lowtype() const {
  return lowtype_case() != LOWTYPE_NOT_SET;
}
void ELowpoly::clear_has_lowtype() {
  _oneof_case_[0] = LOWTYPE_NOT_SET;
}
ELowpoly::LowtypeCase ELowpoly::lowtype_case() const {
  return ELowpoly::LowtypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LPoly3DMax::kVertexPercentFieldNumber;
const int LPoly3DMax::kVertexCountFieldNumber;
const int LPoly3DMax::kOptimizationModeFieldNumber;
const int LPoly3DMax::kNormalsFieldNumber;
const int LPoly3DMax::kFavorCompactFacesFieldNumber;
const int LPoly3DMax::kPreventFlippedNormalsFieldNumber;
const int LPoly3DMax::kLockVertexPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LPoly3DMax::LPoly3DMax()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.LPoly3DMax)
}
LPoly3DMax::LPoly3DMax(const LPoly3DMax& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vertex_percent_, &from.vertex_percent_,
    reinterpret_cast<char*>(&lock_vertex_position_) -
    reinterpret_cast<char*>(&vertex_percent_) + sizeof(lock_vertex_position_));
  // @@protoc_insertion_point(copy_constructor:y3d.LPoly3DMax)
}

void LPoly3DMax::SharedCtor() {
  ::memset(&vertex_percent_, 0, reinterpret_cast<char*>(&lock_vertex_position_) -
    reinterpret_cast<char*>(&vertex_percent_) + sizeof(lock_vertex_position_));
  _cached_size_ = 0;
}

LPoly3DMax::~LPoly3DMax() {
  // @@protoc_insertion_point(destructor:y3d.LPoly3DMax)
  SharedDtor();
}

void LPoly3DMax::SharedDtor() {
}

void LPoly3DMax::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LPoly3DMax::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[42].descriptor;
}

const LPoly3DMax& LPoly3DMax::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

LPoly3DMax* LPoly3DMax::New(::google::protobuf::Arena* arena) const {
  LPoly3DMax* n = new LPoly3DMax;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LPoly3DMax::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.LPoly3DMax)
  ::memset(&vertex_percent_, 0, reinterpret_cast<char*>(&lock_vertex_position_) -
    reinterpret_cast<char*>(&vertex_percent_) + sizeof(lock_vertex_position_));
}

bool LPoly3DMax::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.LPoly3DMax)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float vertex_percent = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vertex_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vertex_count = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vertex_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.LPoly3DMax.OpMode optimization_mode = 3;
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_optimization_mode(static_cast< ::y3d::LPoly3DMax_OpMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.LPoly3DMax.NormalMode normals = 4;
      case 4: {
        if (tag == 32u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_normals(static_cast< ::y3d::LPoly3DMax_NormalMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool favor_compact_faces = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &favor_compact_faces_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool prevent_flipped_normals = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prevent_flipped_normals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool lock_vertex_position = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lock_vertex_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.LPoly3DMax)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.LPoly3DMax)
  return false;
#undef DO_
}

void LPoly3DMax::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.LPoly3DMax)
  // float vertex_percent = 1;
  if (this->vertex_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->vertex_percent(), output);
  }

  // int32 vertex_count = 2;
  if (this->vertex_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vertex_count(), output);
  }

  // .y3d.LPoly3DMax.OpMode optimization_mode = 3;
  if (this->optimization_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->optimization_mode(), output);
  }

  // .y3d.LPoly3DMax.NormalMode normals = 4;
  if (this->normals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->normals(), output);
  }

  // bool favor_compact_faces = 5;
  if (this->favor_compact_faces() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->favor_compact_faces(), output);
  }

  // bool prevent_flipped_normals = 6;
  if (this->prevent_flipped_normals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->prevent_flipped_normals(), output);
  }

  // bool lock_vertex_position = 7;
  if (this->lock_vertex_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->lock_vertex_position(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.LPoly3DMax)
}

::google::protobuf::uint8* LPoly3DMax::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.LPoly3DMax)
  // float vertex_percent = 1;
  if (this->vertex_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->vertex_percent(), target);
  }

  // int32 vertex_count = 2;
  if (this->vertex_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vertex_count(), target);
  }

  // .y3d.LPoly3DMax.OpMode optimization_mode = 3;
  if (this->optimization_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->optimization_mode(), target);
  }

  // .y3d.LPoly3DMax.NormalMode normals = 4;
  if (this->normals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->normals(), target);
  }

  // bool favor_compact_faces = 5;
  if (this->favor_compact_faces() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->favor_compact_faces(), target);
  }

  // bool prevent_flipped_normals = 6;
  if (this->prevent_flipped_normals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->prevent_flipped_normals(), target);
  }

  // bool lock_vertex_position = 7;
  if (this->lock_vertex_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->lock_vertex_position(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.LPoly3DMax)
  return target;
}

size_t LPoly3DMax::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.LPoly3DMax)
  size_t total_size = 0;

  // float vertex_percent = 1;
  if (this->vertex_percent() != 0) {
    total_size += 1 + 4;
  }

  // int32 vertex_count = 2;
  if (this->vertex_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vertex_count());
  }

  // .y3d.LPoly3DMax.OpMode optimization_mode = 3;
  if (this->optimization_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->optimization_mode());
  }

  // .y3d.LPoly3DMax.NormalMode normals = 4;
  if (this->normals() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->normals());
  }

  // bool favor_compact_faces = 5;
  if (this->favor_compact_faces() != 0) {
    total_size += 1 + 1;
  }

  // bool prevent_flipped_normals = 6;
  if (this->prevent_flipped_normals() != 0) {
    total_size += 1 + 1;
  }

  // bool lock_vertex_position = 7;
  if (this->lock_vertex_position() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LPoly3DMax::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.LPoly3DMax)
  GOOGLE_DCHECK_NE(&from, this);
  const LPoly3DMax* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LPoly3DMax>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.LPoly3DMax)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.LPoly3DMax)
    MergeFrom(*source);
  }
}

void LPoly3DMax::MergeFrom(const LPoly3DMax& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.LPoly3DMax)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vertex_percent() != 0) {
    set_vertex_percent(from.vertex_percent());
  }
  if (from.vertex_count() != 0) {
    set_vertex_count(from.vertex_count());
  }
  if (from.optimization_mode() != 0) {
    set_optimization_mode(from.optimization_mode());
  }
  if (from.normals() != 0) {
    set_normals(from.normals());
  }
  if (from.favor_compact_faces() != 0) {
    set_favor_compact_faces(from.favor_compact_faces());
  }
  if (from.prevent_flipped_normals() != 0) {
    set_prevent_flipped_normals(from.prevent_flipped_normals());
  }
  if (from.lock_vertex_position() != 0) {
    set_lock_vertex_position(from.lock_vertex_position());
  }
}

void LPoly3DMax::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.LPoly3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LPoly3DMax::CopyFrom(const LPoly3DMax& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.LPoly3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LPoly3DMax::IsInitialized() const {
  return true;
}

void LPoly3DMax::Swap(LPoly3DMax* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LPoly3DMax::InternalSwap(LPoly3DMax* other) {
  std::swap(vertex_percent_, other->vertex_percent_);
  std::swap(vertex_count_, other->vertex_count_);
  std::swap(optimization_mode_, other->optimization_mode_);
  std::swap(normals_, other->normals_);
  std::swap(favor_compact_faces_, other->favor_compact_faces_);
  std::swap(prevent_flipped_normals_, other->prevent_flipped_normals_);
  std::swap(lock_vertex_position_, other->lock_vertex_position_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LPoly3DMax::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[42];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LPoly3DMax

// float vertex_percent = 1;
void LPoly3DMax::clear_vertex_percent() {
  vertex_percent_ = 0;
}
float LPoly3DMax::vertex_percent() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.vertex_percent)
  return vertex_percent_;
}
void LPoly3DMax::set_vertex_percent(float value) {
  
  vertex_percent_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.vertex_percent)
}

// int32 vertex_count = 2;
void LPoly3DMax::clear_vertex_count() {
  vertex_count_ = 0;
}
::google::protobuf::int32 LPoly3DMax::vertex_count() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.vertex_count)
  return vertex_count_;
}
void LPoly3DMax::set_vertex_count(::google::protobuf::int32 value) {
  
  vertex_count_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.vertex_count)
}

// .y3d.LPoly3DMax.OpMode optimization_mode = 3;
void LPoly3DMax::clear_optimization_mode() {
  optimization_mode_ = 0;
}
::y3d::LPoly3DMax_OpMode LPoly3DMax::optimization_mode() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.optimization_mode)
  return static_cast< ::y3d::LPoly3DMax_OpMode >(optimization_mode_);
}
void LPoly3DMax::set_optimization_mode(::y3d::LPoly3DMax_OpMode value) {
  
  optimization_mode_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.optimization_mode)
}

// .y3d.LPoly3DMax.NormalMode normals = 4;
void LPoly3DMax::clear_normals() {
  normals_ = 0;
}
::y3d::LPoly3DMax_NormalMode LPoly3DMax::normals() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.normals)
  return static_cast< ::y3d::LPoly3DMax_NormalMode >(normals_);
}
void LPoly3DMax::set_normals(::y3d::LPoly3DMax_NormalMode value) {
  
  normals_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.normals)
}

// bool favor_compact_faces = 5;
void LPoly3DMax::clear_favor_compact_faces() {
  favor_compact_faces_ = false;
}
bool LPoly3DMax::favor_compact_faces() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.favor_compact_faces)
  return favor_compact_faces_;
}
void LPoly3DMax::set_favor_compact_faces(bool value) {
  
  favor_compact_faces_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.favor_compact_faces)
}

// bool prevent_flipped_normals = 6;
void LPoly3DMax::clear_prevent_flipped_normals() {
  prevent_flipped_normals_ = false;
}
bool LPoly3DMax::prevent_flipped_normals() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.prevent_flipped_normals)
  return prevent_flipped_normals_;
}
void LPoly3DMax::set_prevent_flipped_normals(bool value) {
  
  prevent_flipped_normals_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.prevent_flipped_normals)
}

// bool lock_vertex_position = 7;
void LPoly3DMax::clear_lock_vertex_position() {
  lock_vertex_position_ = false;
}
bool LPoly3DMax::lock_vertex_position() const {
  // @@protoc_insertion_point(field_get:y3d.LPoly3DMax.lock_vertex_position)
  return lock_vertex_position_;
}
void LPoly3DMax::set_lock_vertex_position(bool value) {
  
  lock_vertex_position_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPoly3DMax.lock_vertex_position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LPolyBlender::kRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LPolyBlender::LPolyBlender()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.LPolyBlender)
}
LPolyBlender::LPolyBlender(const LPolyBlender& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ratio_ = from.ratio_;
  // @@protoc_insertion_point(copy_constructor:y3d.LPolyBlender)
}

void LPolyBlender::SharedCtor() {
  ratio_ = 0;
  _cached_size_ = 0;
}

LPolyBlender::~LPolyBlender() {
  // @@protoc_insertion_point(destructor:y3d.LPolyBlender)
  SharedDtor();
}

void LPolyBlender::SharedDtor() {
}

void LPolyBlender::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LPolyBlender::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[43].descriptor;
}

const LPolyBlender& LPolyBlender::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

LPolyBlender* LPolyBlender::New(::google::protobuf::Arena* arena) const {
  LPolyBlender* n = new LPolyBlender;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LPolyBlender::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.LPolyBlender)
  ratio_ = 0;
}

bool LPolyBlender::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.LPolyBlender)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float ratio = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.LPolyBlender)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.LPolyBlender)
  return false;
#undef DO_
}

void LPolyBlender::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.LPolyBlender)
  // float ratio = 1;
  if (this->ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->ratio(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.LPolyBlender)
}

::google::protobuf::uint8* LPolyBlender::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.LPolyBlender)
  // float ratio = 1;
  if (this->ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->ratio(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.LPolyBlender)
  return target;
}

size_t LPolyBlender::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.LPolyBlender)
  size_t total_size = 0;

  // float ratio = 1;
  if (this->ratio() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LPolyBlender::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.LPolyBlender)
  GOOGLE_DCHECK_NE(&from, this);
  const LPolyBlender* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LPolyBlender>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.LPolyBlender)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.LPolyBlender)
    MergeFrom(*source);
  }
}

void LPolyBlender::MergeFrom(const LPolyBlender& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.LPolyBlender)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ratio() != 0) {
    set_ratio(from.ratio());
  }
}

void LPolyBlender::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.LPolyBlender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LPolyBlender::CopyFrom(const LPolyBlender& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.LPolyBlender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LPolyBlender::IsInitialized() const {
  return true;
}

void LPolyBlender::Swap(LPolyBlender* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LPolyBlender::InternalSwap(LPolyBlender* other) {
  std::swap(ratio_, other->ratio_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LPolyBlender::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[43];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LPolyBlender

// float ratio = 1;
void LPolyBlender::clear_ratio() {
  ratio_ = 0;
}
float LPolyBlender::ratio() const {
  // @@protoc_insertion_point(field_get:y3d.LPolyBlender.ratio)
  return ratio_;
}
void LPolyBlender::set_ratio(float value) {
  
  ratio_ = value;
  // @@protoc_insertion_point(field_set:y3d.LPolyBlender.ratio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LPolyMeshlab::LPolyMeshlab()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.LPolyMeshlab)
}
LPolyMeshlab::LPolyMeshlab(const LPolyMeshlab& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:y3d.LPolyMeshlab)
}

void LPolyMeshlab::SharedCtor() {
  _cached_size_ = 0;
}

LPolyMeshlab::~LPolyMeshlab() {
  // @@protoc_insertion_point(destructor:y3d.LPolyMeshlab)
  SharedDtor();
}

void LPolyMeshlab::SharedDtor() {
}

void LPolyMeshlab::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LPolyMeshlab::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[44].descriptor;
}

const LPolyMeshlab& LPolyMeshlab::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

LPolyMeshlab* LPolyMeshlab::New(::google::protobuf::Arena* arena) const {
  LPolyMeshlab* n = new LPolyMeshlab;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LPolyMeshlab::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.LPolyMeshlab)
}

bool LPolyMeshlab::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.LPolyMeshlab)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.LPolyMeshlab)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.LPolyMeshlab)
  return false;
#undef DO_
}

void LPolyMeshlab::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.LPolyMeshlab)
  // @@protoc_insertion_point(serialize_end:y3d.LPolyMeshlab)
}

::google::protobuf::uint8* LPolyMeshlab::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.LPolyMeshlab)
  // @@protoc_insertion_point(serialize_to_array_end:y3d.LPolyMeshlab)
  return target;
}

size_t LPolyMeshlab::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.LPolyMeshlab)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LPolyMeshlab::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.LPolyMeshlab)
  GOOGLE_DCHECK_NE(&from, this);
  const LPolyMeshlab* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LPolyMeshlab>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.LPolyMeshlab)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.LPolyMeshlab)
    MergeFrom(*source);
  }
}

void LPolyMeshlab::MergeFrom(const LPolyMeshlab& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.LPolyMeshlab)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void LPolyMeshlab::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.LPolyMeshlab)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LPolyMeshlab::CopyFrom(const LPolyMeshlab& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.LPolyMeshlab)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LPolyMeshlab::IsInitialized() const {
  return true;
}

void LPolyMeshlab::Swap(LPolyMeshlab* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LPolyMeshlab::InternalSwap(LPolyMeshlab* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LPolyMeshlab::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[44];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LPolyMeshlab

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENormal::kOnameFieldNumber;
const int ENormal::kLowpolyFieldNumber;
const int ENormal::kHighpolyFieldNumber;
const int ENormal::kTexSizeFieldNumber;
const int ENormal::kOutTexFieldNumber;
const int ENormal::kNormal3DmaxFieldNumber;
const int ENormal::kNormalXnormalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENormal::ENormal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ENormal)
}
ENormal::ENormal(const ENormal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oname().size() > 0) {
    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  lowpoly_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lowpoly().size() > 0) {
    lowpoly_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lowpoly_);
  }
  highpoly_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.highpoly().size() > 0) {
    highpoly_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.highpoly_);
  }
  out_tex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.out_tex().size() > 0) {
    out_tex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_tex_);
  }
  tex_size_ = from.tex_size_;
  clear_has_ntype();
  switch (from.ntype_case()) {
    case kNormal3Dmax: {
      mutable_normal_3dmax()->::y3d::Normal3DMax::MergeFrom(from.normal_3dmax());
      break;
    }
    case kNormalXnormal: {
      mutable_normal_xnormal()->::xnormal::Settings::MergeFrom(from.normal_xnormal());
      break;
    }
    case NTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:y3d.ENormal)
}

void ENormal::SharedCtor() {
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lowpoly_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  highpoly_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_tex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tex_size_ = 0u;
  clear_has_ntype();
  _cached_size_ = 0;
}

ENormal::~ENormal() {
  // @@protoc_insertion_point(destructor:y3d.ENormal)
  SharedDtor();
}

void ENormal::SharedDtor() {
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lowpoly_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  highpoly_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_tex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_ntype()) {
    clear_ntype();
  }
}

void ENormal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ENormal::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[45].descriptor;
}

const ENormal& ENormal::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

ENormal* ENormal::New(::google::protobuf::Arena* arena) const {
  ENormal* n = new ENormal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ENormal::clear_ntype() {
// @@protoc_insertion_point(one_of_clear_start:y3d.ENormal)
  switch (ntype_case()) {
    case kNormal3Dmax: {
      delete ntype_.normal_3dmax_;
      break;
    }
    case kNormalXnormal: {
      delete ntype_.normal_xnormal_;
      break;
    }
    case NTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NTYPE_NOT_SET;
}


void ENormal::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ENormal)
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lowpoly_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  highpoly_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_tex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tex_size_ = 0u;
  clear_ntype();
}

bool ENormal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ENormal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ENormal.oname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lowpoly = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lowpoly()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lowpoly().data(), this->lowpoly().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ENormal.lowpoly"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string highpoly = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_highpoly()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->highpoly().data(), this->highpoly().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ENormal.highpoly"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tex_size = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tex_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string out_tex = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_out_tex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->out_tex().data(), this->out_tex().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ENormal.out_tex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.Normal3DMax normal_3dmax = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_normal_3dmax()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xnormal.Settings normal_xnormal = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_normal_xnormal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ENormal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ENormal)
  return false;
#undef DO_
}

void ENormal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ENormal)
  // string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oname(), output);
  }

  // string lowpoly = 2;
  if (this->lowpoly().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lowpoly().data(), this->lowpoly().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.lowpoly");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->lowpoly(), output);
  }

  // string highpoly = 3;
  if (this->highpoly().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->highpoly().data(), this->highpoly().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.highpoly");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->highpoly(), output);
  }

  // uint32 tex_size = 4;
  if (this->tex_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->tex_size(), output);
  }

  // string out_tex = 5;
  if (this->out_tex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->out_tex().data(), this->out_tex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.out_tex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->out_tex(), output);
  }

  // .y3d.Normal3DMax normal_3dmax = 6;
  if (has_normal_3dmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *ntype_.normal_3dmax_, output);
  }

  // .xnormal.Settings normal_xnormal = 7;
  if (has_normal_xnormal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *ntype_.normal_xnormal_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ENormal)
}

::google::protobuf::uint8* ENormal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ENormal)
  // string oname = 1;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oname(), target);
  }

  // string lowpoly = 2;
  if (this->lowpoly().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lowpoly().data(), this->lowpoly().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.lowpoly");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->lowpoly(), target);
  }

  // string highpoly = 3;
  if (this->highpoly().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->highpoly().data(), this->highpoly().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.highpoly");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->highpoly(), target);
  }

  // uint32 tex_size = 4;
  if (this->tex_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->tex_size(), target);
  }

  // string out_tex = 5;
  if (this->out_tex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->out_tex().data(), this->out_tex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ENormal.out_tex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->out_tex(), target);
  }

  // .y3d.Normal3DMax normal_3dmax = 6;
  if (has_normal_3dmax()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *ntype_.normal_3dmax_, false, target);
  }

  // .xnormal.Settings normal_xnormal = 7;
  if (has_normal_xnormal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *ntype_.normal_xnormal_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ENormal)
  return target;
}

size_t ENormal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ENormal)
  size_t total_size = 0;

  // string oname = 1;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  // string lowpoly = 2;
  if (this->lowpoly().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lowpoly());
  }

  // string highpoly = 3;
  if (this->highpoly().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->highpoly());
  }

  // string out_tex = 5;
  if (this->out_tex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->out_tex());
  }

  // uint32 tex_size = 4;
  if (this->tex_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tex_size());
  }

  switch (ntype_case()) {
    // .y3d.Normal3DMax normal_3dmax = 6;
    case kNormal3Dmax: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *ntype_.normal_3dmax_);
      break;
    }
    // .xnormal.Settings normal_xnormal = 7;
    case kNormalXnormal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *ntype_.normal_xnormal_);
      break;
    }
    case NTYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ENormal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ENormal)
  GOOGLE_DCHECK_NE(&from, this);
  const ENormal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ENormal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ENormal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ENormal)
    MergeFrom(*source);
  }
}

void ENormal::MergeFrom(const ENormal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ENormal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  if (from.lowpoly().size() > 0) {

    lowpoly_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lowpoly_);
  }
  if (from.highpoly().size() > 0) {

    highpoly_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.highpoly_);
  }
  if (from.out_tex().size() > 0) {

    out_tex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_tex_);
  }
  if (from.tex_size() != 0) {
    set_tex_size(from.tex_size());
  }
  switch (from.ntype_case()) {
    case kNormal3Dmax: {
      mutable_normal_3dmax()->::y3d::Normal3DMax::MergeFrom(from.normal_3dmax());
      break;
    }
    case kNormalXnormal: {
      mutable_normal_xnormal()->::xnormal::Settings::MergeFrom(from.normal_xnormal());
      break;
    }
    case NTYPE_NOT_SET: {
      break;
    }
  }
}

void ENormal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ENormal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENormal::CopyFrom(const ENormal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ENormal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENormal::IsInitialized() const {
  return true;
}

void ENormal::Swap(ENormal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENormal::InternalSwap(ENormal* other) {
  oname_.Swap(&other->oname_);
  lowpoly_.Swap(&other->lowpoly_);
  highpoly_.Swap(&other->highpoly_);
  out_tex_.Swap(&other->out_tex_);
  std::swap(tex_size_, other->tex_size_);
  std::swap(ntype_, other->ntype_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ENormal::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[45];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ENormal

// string oname = 1;
void ENormal::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ENormal::oname() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.oname)
  return oname_.GetNoArena();
}
void ENormal::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ENormal.oname)
}
#if LANG_CXX11
void ENormal::set_oname(::std::string&& value) {
  
  oname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ENormal.oname)
}
#endif
void ENormal::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ENormal.oname)
}
void ENormal::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ENormal.oname)
}
::std::string* ENormal::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ENormal::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ENormal::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.oname)
}

// string lowpoly = 2;
void ENormal::clear_lowpoly() {
  lowpoly_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ENormal::lowpoly() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.lowpoly)
  return lowpoly_.GetNoArena();
}
void ENormal::set_lowpoly(const ::std::string& value) {
  
  lowpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ENormal.lowpoly)
}
#if LANG_CXX11
void ENormal::set_lowpoly(::std::string&& value) {
  
  lowpoly_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ENormal.lowpoly)
}
#endif
void ENormal::set_lowpoly(const char* value) {
  
  lowpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ENormal.lowpoly)
}
void ENormal::set_lowpoly(const char* value, size_t size) {
  
  lowpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ENormal.lowpoly)
}
::std::string* ENormal::mutable_lowpoly() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.lowpoly)
  return lowpoly_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ENormal::release_lowpoly() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.lowpoly)
  
  return lowpoly_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ENormal::set_allocated_lowpoly(::std::string* lowpoly) {
  if (lowpoly != NULL) {
    
  } else {
    
  }
  lowpoly_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lowpoly);
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.lowpoly)
}

// string highpoly = 3;
void ENormal::clear_highpoly() {
  highpoly_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ENormal::highpoly() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.highpoly)
  return highpoly_.GetNoArena();
}
void ENormal::set_highpoly(const ::std::string& value) {
  
  highpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ENormal.highpoly)
}
#if LANG_CXX11
void ENormal::set_highpoly(::std::string&& value) {
  
  highpoly_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ENormal.highpoly)
}
#endif
void ENormal::set_highpoly(const char* value) {
  
  highpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ENormal.highpoly)
}
void ENormal::set_highpoly(const char* value, size_t size) {
  
  highpoly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ENormal.highpoly)
}
::std::string* ENormal::mutable_highpoly() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.highpoly)
  return highpoly_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ENormal::release_highpoly() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.highpoly)
  
  return highpoly_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ENormal::set_allocated_highpoly(::std::string* highpoly) {
  if (highpoly != NULL) {
    
  } else {
    
  }
  highpoly_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), highpoly);
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.highpoly)
}

// uint32 tex_size = 4;
void ENormal::clear_tex_size() {
  tex_size_ = 0u;
}
::google::protobuf::uint32 ENormal::tex_size() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.tex_size)
  return tex_size_;
}
void ENormal::set_tex_size(::google::protobuf::uint32 value) {
  
  tex_size_ = value;
  // @@protoc_insertion_point(field_set:y3d.ENormal.tex_size)
}

// string out_tex = 5;
void ENormal::clear_out_tex() {
  out_tex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ENormal::out_tex() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.out_tex)
  return out_tex_.GetNoArena();
}
void ENormal::set_out_tex(const ::std::string& value) {
  
  out_tex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ENormal.out_tex)
}
#if LANG_CXX11
void ENormal::set_out_tex(::std::string&& value) {
  
  out_tex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ENormal.out_tex)
}
#endif
void ENormal::set_out_tex(const char* value) {
  
  out_tex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ENormal.out_tex)
}
void ENormal::set_out_tex(const char* value, size_t size) {
  
  out_tex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ENormal.out_tex)
}
::std::string* ENormal::mutable_out_tex() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.out_tex)
  return out_tex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ENormal::release_out_tex() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.out_tex)
  
  return out_tex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ENormal::set_allocated_out_tex(::std::string* out_tex) {
  if (out_tex != NULL) {
    
  } else {
    
  }
  out_tex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), out_tex);
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.out_tex)
}

// .y3d.Normal3DMax normal_3dmax = 6;
bool ENormal::has_normal_3dmax() const {
  return ntype_case() == kNormal3Dmax;
}
void ENormal::set_has_normal_3dmax() {
  _oneof_case_[0] = kNormal3Dmax;
}
void ENormal::clear_normal_3dmax() {
  if (has_normal_3dmax()) {
    delete ntype_.normal_3dmax_;
    clear_has_ntype();
  }
}
 const ::y3d::Normal3DMax& ENormal::normal_3dmax() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.normal_3dmax)
  return has_normal_3dmax()
      ? *ntype_.normal_3dmax_
      : ::y3d::Normal3DMax::default_instance();
}
::y3d::Normal3DMax* ENormal::mutable_normal_3dmax() {
  if (!has_normal_3dmax()) {
    clear_ntype();
    set_has_normal_3dmax();
    ntype_.normal_3dmax_ = new ::y3d::Normal3DMax;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.normal_3dmax)
  return ntype_.normal_3dmax_;
}
::y3d::Normal3DMax* ENormal::release_normal_3dmax() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.normal_3dmax)
  if (has_normal_3dmax()) {
    clear_has_ntype();
    ::y3d::Normal3DMax* temp = ntype_.normal_3dmax_;
    ntype_.normal_3dmax_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ENormal::set_allocated_normal_3dmax(::y3d::Normal3DMax* normal_3dmax) {
  clear_ntype();
  if (normal_3dmax) {
    set_has_normal_3dmax();
    ntype_.normal_3dmax_ = normal_3dmax;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.normal_3dmax)
}

// .xnormal.Settings normal_xnormal = 7;
bool ENormal::has_normal_xnormal() const {
  return ntype_case() == kNormalXnormal;
}
void ENormal::set_has_normal_xnormal() {
  _oneof_case_[0] = kNormalXnormal;
}
void ENormal::clear_normal_xnormal() {
  if (has_normal_xnormal()) {
    delete ntype_.normal_xnormal_;
    clear_has_ntype();
  }
}
 const ::xnormal::Settings& ENormal::normal_xnormal() const {
  // @@protoc_insertion_point(field_get:y3d.ENormal.normal_xnormal)
  return has_normal_xnormal()
      ? *ntype_.normal_xnormal_
      : ::xnormal::Settings::default_instance();
}
::xnormal::Settings* ENormal::mutable_normal_xnormal() {
  if (!has_normal_xnormal()) {
    clear_ntype();
    set_has_normal_xnormal();
    ntype_.normal_xnormal_ = new ::xnormal::Settings;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ENormal.normal_xnormal)
  return ntype_.normal_xnormal_;
}
::xnormal::Settings* ENormal::release_normal_xnormal() {
  // @@protoc_insertion_point(field_release:y3d.ENormal.normal_xnormal)
  if (has_normal_xnormal()) {
    clear_has_ntype();
    ::xnormal::Settings* temp = ntype_.normal_xnormal_;
    ntype_.normal_xnormal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ENormal::set_allocated_normal_xnormal(::xnormal::Settings* normal_xnormal) {
  clear_ntype();
  if (normal_xnormal) {
    set_has_normal_xnormal();
    ntype_.normal_xnormal_ = normal_xnormal;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ENormal.normal_xnormal)
}

bool ENormal::has_ntype() const {
  return ntype_case() != NTYPE_NOT_SET;
}
void ENormal::clear_has_ntype() {
  _oneof_case_[0] = NTYPE_NOT_SET;
}
ENormal::NtypeCase ENormal::ntype_case() const {
  return ENormal::NtypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Normal3DMax::Normal3DMax()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.Normal3DMax)
}
Normal3DMax::Normal3DMax(const Normal3DMax& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:y3d.Normal3DMax)
}

void Normal3DMax::SharedCtor() {
  _cached_size_ = 0;
}

Normal3DMax::~Normal3DMax() {
  // @@protoc_insertion_point(destructor:y3d.Normal3DMax)
  SharedDtor();
}

void Normal3DMax::SharedDtor() {
}

void Normal3DMax::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Normal3DMax::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[46].descriptor;
}

const Normal3DMax& Normal3DMax::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

Normal3DMax* Normal3DMax::New(::google::protobuf::Arena* arena) const {
  Normal3DMax* n = new Normal3DMax;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Normal3DMax::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.Normal3DMax)
}

bool Normal3DMax::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.Normal3DMax)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.Normal3DMax)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.Normal3DMax)
  return false;
#undef DO_
}

void Normal3DMax::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.Normal3DMax)
  // @@protoc_insertion_point(serialize_end:y3d.Normal3DMax)
}

::google::protobuf::uint8* Normal3DMax::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.Normal3DMax)
  // @@protoc_insertion_point(serialize_to_array_end:y3d.Normal3DMax)
  return target;
}

size_t Normal3DMax::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.Normal3DMax)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Normal3DMax::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.Normal3DMax)
  GOOGLE_DCHECK_NE(&from, this);
  const Normal3DMax* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Normal3DMax>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.Normal3DMax)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.Normal3DMax)
    MergeFrom(*source);
  }
}

void Normal3DMax::MergeFrom(const Normal3DMax& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.Normal3DMax)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void Normal3DMax::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.Normal3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Normal3DMax::CopyFrom(const Normal3DMax& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.Normal3DMax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Normal3DMax::IsInitialized() const {
  return true;
}

void Normal3DMax::Swap(Normal3DMax* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Normal3DMax::InternalSwap(Normal3DMax* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Normal3DMax::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[46];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Normal3DMax

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectInfo::kPnameFieldNumber;
const int ProjectInfo::kProjectPathFieldNumber;
const int ProjectInfo::kTsFieldNumber;
const int ProjectInfo::kOptimizeOpsFieldNumber;
const int ProjectInfo::kFviewFieldNumber;
const int ProjectInfo::kOptimizeRatioFieldNumber;
const int ProjectInfo::kOriginalPathFieldNumber;
const int ProjectInfo::kWorkersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectInfo::ProjectInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ProjectInfo)
}
ProjectInfo::ProjectInfo(const ProjectInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fview_(from.fview_),
      workers_(from.workers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pname().size() > 0) {
    pname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pname_);
  }
  project_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_path().size() > 0) {
    project_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_path_);
  }
  original_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.original_path().size() > 0) {
    original_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_path_);
  }
  if (from.has_ts()) {
    ts_ = new ::google::protobuf::Timestamp(*from.ts_);
  } else {
    ts_ = NULL;
  }
  if (from.has_optimize_ops()) {
    optimize_ops_ = new ::y3d::OptimizeOptions(*from.optimize_ops_);
  } else {
    optimize_ops_ = NULL;
  }
  optimize_ratio_ = from.optimize_ratio_;
  // @@protoc_insertion_point(copy_constructor:y3d.ProjectInfo)
}

void ProjectInfo::SharedCtor() {
  pname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, reinterpret_cast<char*>(&optimize_ratio_) -
    reinterpret_cast<char*>(&ts_) + sizeof(optimize_ratio_));
  _cached_size_ = 0;
}

ProjectInfo::~ProjectInfo() {
  // @@protoc_insertion_point(destructor:y3d.ProjectInfo)
  SharedDtor();
}

void ProjectInfo::SharedDtor() {
  pname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete ts_;
  }
  if (this != internal_default_instance()) {
    delete optimize_ops_;
  }
}

void ProjectInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectInfo::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[47].descriptor;
}

const ProjectInfo& ProjectInfo::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProjectInfo* ProjectInfo::New(::google::protobuf::Arena* arena) const {
  ProjectInfo* n = new ProjectInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ProjectInfo)
  fview_.Clear();
  workers_.Clear();
  pname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ts_ != NULL) {
    delete ts_;
  }
  ts_ = NULL;
  if (GetArenaNoVirtual() == NULL && optimize_ops_ != NULL) {
    delete optimize_ops_;
  }
  optimize_ops_ = NULL;
  optimize_ratio_ = 0;
}

bool ProjectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ProjectInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pname().data(), this->pname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ProjectInfo.pname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_path = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_path().data(), this->project_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ProjectInfo.project_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp ts = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.OptimizeOptions optimize_ops = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optimize_ops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.FilterView fview = 6;
      case 6: {
        if (tag == 50u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fview()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // float optimize_ratio = 7;
      case 7: {
        if (tag == 61u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optimize_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string original_path = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->original_path().data(), this->original_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ProjectInfo.original_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.YWorker workers = 9;
      case 9: {
        if (tag == 74u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_workers()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ProjectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ProjectInfo)
  return false;
#undef DO_
}

void ProjectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ProjectInfo)
  // string pname = 1;
  if (this->pname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pname().data(), this->pname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.pname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pname(), output);
  }

  // string project_path = 2;
  if (this->project_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_path().data(), this->project_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.project_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project_path(), output);
  }

  // .google.protobuf.Timestamp ts = 3;
  if (this->has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ts_, output);
  }

  // .y3d.OptimizeOptions optimize_ops = 5;
  if (this->has_optimize_ops()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->optimize_ops_, output);
  }

  // repeated .y3d.FilterView fview = 6;
  for (unsigned int i = 0, n = this->fview_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->fview(i), output);
  }

  // float optimize_ratio = 7;
  if (this->optimize_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->optimize_ratio(), output);
  }

  // string original_path = 8;
  if (this->original_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_path().data(), this->original_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.original_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->original_path(), output);
  }

  // repeated .y3d.YWorker workers = 9;
  for (unsigned int i = 0, n = this->workers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->workers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ProjectInfo)
}

::google::protobuf::uint8* ProjectInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ProjectInfo)
  // string pname = 1;
  if (this->pname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pname().data(), this->pname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.pname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pname(), target);
  }

  // string project_path = 2;
  if (this->project_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_path().data(), this->project_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.project_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project_path(), target);
  }

  // .google.protobuf.Timestamp ts = 3;
  if (this->has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ts_, false, target);
  }

  // .y3d.OptimizeOptions optimize_ops = 5;
  if (this->has_optimize_ops()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->optimize_ops_, false, target);
  }

  // repeated .y3d.FilterView fview = 6;
  for (unsigned int i = 0, n = this->fview_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->fview(i), false, target);
  }

  // float optimize_ratio = 7;
  if (this->optimize_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->optimize_ratio(), target);
  }

  // string original_path = 8;
  if (this->original_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_path().data(), this->original_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.original_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->original_path(), target);
  }

  // repeated .y3d.YWorker workers = 9;
  for (unsigned int i = 0, n = this->workers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->workers(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ProjectInfo)
  return target;
}

size_t ProjectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ProjectInfo)
  size_t total_size = 0;

  // repeated .y3d.FilterView fview = 6;
  {
    unsigned int count = this->fview_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fview(i));
    }
  }

  // repeated .y3d.YWorker workers = 9;
  {
    unsigned int count = this->workers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workers(i));
    }
  }

  // string pname = 1;
  if (this->pname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pname());
  }

  // string project_path = 2;
  if (this->project_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_path());
  }

  // string original_path = 8;
  if (this->original_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_path());
  }

  // .google.protobuf.Timestamp ts = 3;
  if (this->has_ts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ts_);
  }

  // .y3d.OptimizeOptions optimize_ops = 5;
  if (this->has_optimize_ops()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->optimize_ops_);
  }

  // float optimize_ratio = 7;
  if (this->optimize_ratio() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ProjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ProjectInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ProjectInfo)
    MergeFrom(*source);
  }
}

void ProjectInfo::MergeFrom(const ProjectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ProjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fview_.MergeFrom(from.fview_);
  workers_.MergeFrom(from.workers_);
  if (from.pname().size() > 0) {

    pname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pname_);
  }
  if (from.project_path().size() > 0) {

    project_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_path_);
  }
  if (from.original_path().size() > 0) {

    original_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_path_);
  }
  if (from.has_ts()) {
    mutable_ts()->::google::protobuf::Timestamp::MergeFrom(from.ts());
  }
  if (from.has_optimize_ops()) {
    mutable_optimize_ops()->::y3d::OptimizeOptions::MergeFrom(from.optimize_ops());
  }
  if (from.optimize_ratio() != 0) {
    set_optimize_ratio(from.optimize_ratio());
  }
}

void ProjectInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ProjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectInfo::CopyFrom(const ProjectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ProjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectInfo::IsInitialized() const {
  return true;
}

void ProjectInfo::Swap(ProjectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectInfo::InternalSwap(ProjectInfo* other) {
  fview_.UnsafeArenaSwap(&other->fview_);
  workers_.UnsafeArenaSwap(&other->workers_);
  pname_.Swap(&other->pname_);
  project_path_.Swap(&other->project_path_);
  original_path_.Swap(&other->original_path_);
  std::swap(ts_, other->ts_);
  std::swap(optimize_ops_, other->optimize_ops_);
  std::swap(optimize_ratio_, other->optimize_ratio_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectInfo::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[47];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectInfo

// string pname = 1;
void ProjectInfo::clear_pname() {
  pname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectInfo::pname() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.pname)
  return pname_.GetNoArena();
}
void ProjectInfo::set_pname(const ::std::string& value) {
  
  pname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ProjectInfo.pname)
}
#if LANG_CXX11
void ProjectInfo::set_pname(::std::string&& value) {
  
  pname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ProjectInfo.pname)
}
#endif
void ProjectInfo::set_pname(const char* value) {
  
  pname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ProjectInfo.pname)
}
void ProjectInfo::set_pname(const char* value, size_t size) {
  
  pname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ProjectInfo.pname)
}
::std::string* ProjectInfo::mutable_pname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.pname)
  return pname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectInfo::release_pname() {
  // @@protoc_insertion_point(field_release:y3d.ProjectInfo.pname)
  
  return pname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectInfo::set_allocated_pname(::std::string* pname) {
  if (pname != NULL) {
    
  } else {
    
  }
  pname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pname);
  // @@protoc_insertion_point(field_set_allocated:y3d.ProjectInfo.pname)
}

// string project_path = 2;
void ProjectInfo::clear_project_path() {
  project_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectInfo::project_path() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.project_path)
  return project_path_.GetNoArena();
}
void ProjectInfo::set_project_path(const ::std::string& value) {
  
  project_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ProjectInfo.project_path)
}
#if LANG_CXX11
void ProjectInfo::set_project_path(::std::string&& value) {
  
  project_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ProjectInfo.project_path)
}
#endif
void ProjectInfo::set_project_path(const char* value) {
  
  project_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ProjectInfo.project_path)
}
void ProjectInfo::set_project_path(const char* value, size_t size) {
  
  project_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ProjectInfo.project_path)
}
::std::string* ProjectInfo::mutable_project_path() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.project_path)
  return project_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectInfo::release_project_path() {
  // @@protoc_insertion_point(field_release:y3d.ProjectInfo.project_path)
  
  return project_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectInfo::set_allocated_project_path(::std::string* project_path) {
  if (project_path != NULL) {
    
  } else {
    
  }
  project_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_path);
  // @@protoc_insertion_point(field_set_allocated:y3d.ProjectInfo.project_path)
}

// .google.protobuf.Timestamp ts = 3;
bool ProjectInfo::has_ts() const {
  return this != internal_default_instance() && ts_ != NULL;
}
void ProjectInfo::clear_ts() {
  if (GetArenaNoVirtual() == NULL && ts_ != NULL) delete ts_;
  ts_ = NULL;
}
const ::google::protobuf::Timestamp& ProjectInfo::ts() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.ts)
  return ts_ != NULL ? *ts_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* ProjectInfo::mutable_ts() {
  
  if (ts_ == NULL) {
    ts_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.ts)
  return ts_;
}
::google::protobuf::Timestamp* ProjectInfo::release_ts() {
  // @@protoc_insertion_point(field_release:y3d.ProjectInfo.ts)
  
  ::google::protobuf::Timestamp* temp = ts_;
  ts_ = NULL;
  return temp;
}
void ProjectInfo::set_allocated_ts(::google::protobuf::Timestamp* ts) {
  delete ts_;
  if (ts != NULL && ts->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_ts = new ::google::protobuf::Timestamp;
    new_ts->CopyFrom(*ts);
    ts = new_ts;
  }
  ts_ = ts;
  if (ts) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ProjectInfo.ts)
}

// .y3d.OptimizeOptions optimize_ops = 5;
bool ProjectInfo::has_optimize_ops() const {
  return this != internal_default_instance() && optimize_ops_ != NULL;
}
void ProjectInfo::clear_optimize_ops() {
  if (GetArenaNoVirtual() == NULL && optimize_ops_ != NULL) delete optimize_ops_;
  optimize_ops_ = NULL;
}
const ::y3d::OptimizeOptions& ProjectInfo::optimize_ops() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.optimize_ops)
  return optimize_ops_ != NULL ? *optimize_ops_
                         : *::y3d::OptimizeOptions::internal_default_instance();
}
::y3d::OptimizeOptions* ProjectInfo::mutable_optimize_ops() {
  
  if (optimize_ops_ == NULL) {
    optimize_ops_ = new ::y3d::OptimizeOptions;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.optimize_ops)
  return optimize_ops_;
}
::y3d::OptimizeOptions* ProjectInfo::release_optimize_ops() {
  // @@protoc_insertion_point(field_release:y3d.ProjectInfo.optimize_ops)
  
  ::y3d::OptimizeOptions* temp = optimize_ops_;
  optimize_ops_ = NULL;
  return temp;
}
void ProjectInfo::set_allocated_optimize_ops(::y3d::OptimizeOptions* optimize_ops) {
  delete optimize_ops_;
  optimize_ops_ = optimize_ops;
  if (optimize_ops) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ProjectInfo.optimize_ops)
}

// repeated .y3d.FilterView fview = 6;
int ProjectInfo::fview_size() const {
  return fview_.size();
}
void ProjectInfo::clear_fview() {
  fview_.Clear();
}
const ::y3d::FilterView& ProjectInfo::fview(int index) const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.fview)
  return fview_.Get(index);
}
::y3d::FilterView* ProjectInfo::mutable_fview(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.fview)
  return fview_.Mutable(index);
}
::y3d::FilterView* ProjectInfo::add_fview() {
  // @@protoc_insertion_point(field_add:y3d.ProjectInfo.fview)
  return fview_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::FilterView >*
ProjectInfo::mutable_fview() {
  // @@protoc_insertion_point(field_mutable_list:y3d.ProjectInfo.fview)
  return &fview_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::FilterView >&
ProjectInfo::fview() const {
  // @@protoc_insertion_point(field_list:y3d.ProjectInfo.fview)
  return fview_;
}

// float optimize_ratio = 7;
void ProjectInfo::clear_optimize_ratio() {
  optimize_ratio_ = 0;
}
float ProjectInfo::optimize_ratio() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.optimize_ratio)
  return optimize_ratio_;
}
void ProjectInfo::set_optimize_ratio(float value) {
  
  optimize_ratio_ = value;
  // @@protoc_insertion_point(field_set:y3d.ProjectInfo.optimize_ratio)
}

// string original_path = 8;
void ProjectInfo::clear_original_path() {
  original_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectInfo::original_path() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.original_path)
  return original_path_.GetNoArena();
}
void ProjectInfo::set_original_path(const ::std::string& value) {
  
  original_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ProjectInfo.original_path)
}
#if LANG_CXX11
void ProjectInfo::set_original_path(::std::string&& value) {
  
  original_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ProjectInfo.original_path)
}
#endif
void ProjectInfo::set_original_path(const char* value) {
  
  original_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ProjectInfo.original_path)
}
void ProjectInfo::set_original_path(const char* value, size_t size) {
  
  original_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ProjectInfo.original_path)
}
::std::string* ProjectInfo::mutable_original_path() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.original_path)
  return original_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectInfo::release_original_path() {
  // @@protoc_insertion_point(field_release:y3d.ProjectInfo.original_path)
  
  return original_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectInfo::set_allocated_original_path(::std::string* original_path) {
  if (original_path != NULL) {
    
  } else {
    
  }
  original_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original_path);
  // @@protoc_insertion_point(field_set_allocated:y3d.ProjectInfo.original_path)
}

// repeated .y3d.YWorker workers = 9;
int ProjectInfo::workers_size() const {
  return workers_.size();
}
void ProjectInfo::clear_workers() {
  workers_.Clear();
}
const ::y3d::YWorker& ProjectInfo::workers(int index) const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.workers)
  return workers_.Get(index);
}
::y3d::YWorker* ProjectInfo::mutable_workers(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.workers)
  return workers_.Mutable(index);
}
::y3d::YWorker* ProjectInfo::add_workers() {
  // @@protoc_insertion_point(field_add:y3d.ProjectInfo.workers)
  return workers_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YWorker >*
ProjectInfo::mutable_workers() {
  // @@protoc_insertion_point(field_mutable_list:y3d.ProjectInfo.workers)
  return &workers_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YWorker >&
ProjectInfo::workers() const {
  // @@protoc_insertion_point(field_list:y3d.ProjectInfo.workers)
  return workers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SettingData::kAsetNameFieldNumber;
const int SettingData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SettingData::SettingData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.SettingData)
}
SettingData::SettingData(const SettingData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& SettingData_DataEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[48].descriptor;
  data_.SetAssignDescriptorCallback(
      protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce);
  data_.SetEntryDescriptor(
      &SettingData_DataEntry_descriptor);
  data_.MergeFrom(from.data_);
  aset_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.aset_name().size() > 0) {
    aset_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aset_name_);
  }
  // @@protoc_insertion_point(copy_constructor:y3d.SettingData)
}

void SettingData::SharedCtor() {
  const ::google::protobuf::Descriptor*& SettingData_DataEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[48].descriptor;
  data_.SetAssignDescriptorCallback(
      protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce);
  data_.SetEntryDescriptor(
      &SettingData_DataEntry_descriptor);
  aset_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SettingData::~SettingData() {
  // @@protoc_insertion_point(destructor:y3d.SettingData)
  SharedDtor();
}

void SettingData::SharedDtor() {
  aset_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SettingData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SettingData::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[49].descriptor;
}

const SettingData& SettingData::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

SettingData* SettingData::New(::google::protobuf::Arena* arena) const {
  SettingData* n = new SettingData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SettingData::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.SettingData)
  data_.Clear();
  aset_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SettingData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.SettingData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string aset_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aset_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->aset_name().data(), this->aset_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.SettingData.aset_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.protobuf.Any> data = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          SettingData_DataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::protobuf::Any,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Any > > parser(&data_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.SettingData.DataEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.SettingData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.SettingData)
  return false;
#undef DO_
}

void SettingData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.SettingData)
  // string aset_name = 1;
  if (this->aset_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aset_name().data(), this->aset_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.SettingData.aset_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->aset_name(), output);
  }

  // map<string, .google.protobuf.Any> data = 2;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.SettingData.DataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->data().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SettingData_DataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SettingData_DataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:y3d.SettingData)
}

::google::protobuf::uint8* SettingData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.SettingData)
  // string aset_name = 1;
  if (this->aset_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aset_name().data(), this->aset_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.SettingData.aset_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->aset_name(), target);
  }

  // map<string, .google.protobuf.Any> data = 2;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.SettingData.DataEntry.key");
      }
    };

    if (deterministic &&
        this->data().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SettingData_DataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SettingData_DataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.SettingData)
  return target;
}

size_t SettingData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.SettingData)
  size_t total_size = 0;

  // map<string, .google.protobuf.Any> data = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  {
    ::google::protobuf::scoped_ptr<SettingData_DataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
        it = this->data().begin();
        it != this->data().end(); ++it) {
      entry.reset(data_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string aset_name = 1;
  if (this->aset_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->aset_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SettingData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.SettingData)
  GOOGLE_DCHECK_NE(&from, this);
  const SettingData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SettingData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.SettingData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.SettingData)
    MergeFrom(*source);
  }
}

void SettingData::MergeFrom(const SettingData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.SettingData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  if (from.aset_name().size() > 0) {

    aset_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aset_name_);
  }
}

void SettingData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.SettingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettingData::CopyFrom(const SettingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.SettingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettingData::IsInitialized() const {
  return true;
}

void SettingData::Swap(SettingData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SettingData::InternalSwap(SettingData* other) {
  data_.Swap(&other->data_);
  aset_name_.Swap(&other->aset_name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SettingData::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[49];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SettingData

// string aset_name = 1;
void SettingData::clear_aset_name() {
  aset_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SettingData::aset_name() const {
  // @@protoc_insertion_point(field_get:y3d.SettingData.aset_name)
  return aset_name_.GetNoArena();
}
void SettingData::set_aset_name(const ::std::string& value) {
  
  aset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.SettingData.aset_name)
}
#if LANG_CXX11
void SettingData::set_aset_name(::std::string&& value) {
  
  aset_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.SettingData.aset_name)
}
#endif
void SettingData::set_aset_name(const char* value) {
  
  aset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.SettingData.aset_name)
}
void SettingData::set_aset_name(const char* value, size_t size) {
  
  aset_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.SettingData.aset_name)
}
::std::string* SettingData::mutable_aset_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.SettingData.aset_name)
  return aset_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SettingData::release_aset_name() {
  // @@protoc_insertion_point(field_release:y3d.SettingData.aset_name)
  
  return aset_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SettingData::set_allocated_aset_name(::std::string* aset_name) {
  if (aset_name != NULL) {
    
  } else {
    
  }
  aset_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aset_name);
  // @@protoc_insertion_point(field_set_allocated:y3d.SettingData.aset_name)
}

// map<string, .google.protobuf.Any> data = 2;
int SettingData::data_size() const {
  return data_.size();
}
void SettingData::clear_data() {
  data_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >&
SettingData::data() const {
  // @@protoc_insertion_point(field_map:y3d.SettingData.data)
  return data_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >*
SettingData::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:y3d.SettingData.data)
  return data_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSetting::kExtraFieldNumber;
const int PSetting::kMaxRecentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSetting::PSetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.PSetting)
}
PSetting::PSetting(const PSetting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_extra()) {
    extra_ = new ::y3d::SettingData(*from.extra_);
  } else {
    extra_ = NULL;
  }
  max_recent_ = from.max_recent_;
  // @@protoc_insertion_point(copy_constructor:y3d.PSetting)
}

void PSetting::SharedCtor() {
  ::memset(&extra_, 0, reinterpret_cast<char*>(&max_recent_) -
    reinterpret_cast<char*>(&extra_) + sizeof(max_recent_));
  _cached_size_ = 0;
}

PSetting::~PSetting() {
  // @@protoc_insertion_point(destructor:y3d.PSetting)
  SharedDtor();
}

void PSetting::SharedDtor() {
  if (this != internal_default_instance()) {
    delete extra_;
  }
}

void PSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSetting::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[50].descriptor;
}

const PSetting& PSetting::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

PSetting* PSetting::New(::google::protobuf::Arena* arena) const {
  PSetting* n = new PSetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.PSetting)
  if (GetArenaNoVirtual() == NULL && extra_ != NULL) {
    delete extra_;
  }
  extra_ = NULL;
  max_recent_ = 0;
}

bool PSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.PSetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.SettingData extra = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_recent = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_recent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.PSetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.PSetting)
  return false;
#undef DO_
}

void PSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.PSetting)
  // .y3d.SettingData extra = 1;
  if (this->has_extra()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->extra_, output);
  }

  // int32 max_recent = 2;
  if (this->max_recent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_recent(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.PSetting)
}

::google::protobuf::uint8* PSetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.PSetting)
  // .y3d.SettingData extra = 1;
  if (this->has_extra()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->extra_, false, target);
  }

  // int32 max_recent = 2;
  if (this->max_recent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_recent(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.PSetting)
  return target;
}

size_t PSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.PSetting)
  size_t total_size = 0;

  // .y3d.SettingData extra = 1;
  if (this->has_extra()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->extra_);
  }

  // int32 max_recent = 2;
  if (this->max_recent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_recent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.PSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const PSetting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.PSetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.PSetting)
    MergeFrom(*source);
  }
}

void PSetting::MergeFrom(const PSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.PSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_extra()) {
    mutable_extra()->::y3d::SettingData::MergeFrom(from.extra());
  }
  if (from.max_recent() != 0) {
    set_max_recent(from.max_recent());
  }
}

void PSetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.PSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSetting::CopyFrom(const PSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.PSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSetting::IsInitialized() const {
  return true;
}

void PSetting::Swap(PSetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSetting::InternalSwap(PSetting* other) {
  std::swap(extra_, other->extra_);
  std::swap(max_recent_, other->max_recent_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSetting::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[50];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PSetting

// .y3d.SettingData extra = 1;
bool PSetting::has_extra() const {
  return this != internal_default_instance() && extra_ != NULL;
}
void PSetting::clear_extra() {
  if (GetArenaNoVirtual() == NULL && extra_ != NULL) delete extra_;
  extra_ = NULL;
}
const ::y3d::SettingData& PSetting::extra() const {
  // @@protoc_insertion_point(field_get:y3d.PSetting.extra)
  return extra_ != NULL ? *extra_
                         : *::y3d::SettingData::internal_default_instance();
}
::y3d::SettingData* PSetting::mutable_extra() {
  
  if (extra_ == NULL) {
    extra_ = new ::y3d::SettingData;
  }
  // @@protoc_insertion_point(field_mutable:y3d.PSetting.extra)
  return extra_;
}
::y3d::SettingData* PSetting::release_extra() {
  // @@protoc_insertion_point(field_release:y3d.PSetting.extra)
  
  ::y3d::SettingData* temp = extra_;
  extra_ = NULL;
  return temp;
}
void PSetting::set_allocated_extra(::y3d::SettingData* extra) {
  delete extra_;
  extra_ = extra;
  if (extra) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.PSetting.extra)
}

// int32 max_recent = 2;
void PSetting::clear_max_recent() {
  max_recent_ = 0;
}
::google::protobuf::int32 PSetting::max_recent() const {
  // @@protoc_insertion_point(field_get:y3d.PSetting.max_recent)
  return max_recent_;
}
void PSetting::set_max_recent(::google::protobuf::int32 value) {
  
  max_recent_ = value;
  // @@protoc_insertion_point(field_set:y3d.PSetting.max_recent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YSystem::kWorkingFolderFieldNumber;
const int YSystem::kDefaultInfoFieldNumber;
const int YSystem::kDefaultSettingFieldNumber;
const int YSystem::kProjectsFieldNumber;
const int YSystem::kAppsFieldNumber;
const int YSystem::kMasterServerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YSystem::YSystem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YSystem)
}
YSystem::YSystem(const YSystem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      projects_(from.projects_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& YSystem_AppsEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[51].descriptor;
  apps_.SetAssignDescriptorCallback(
      protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce);
  apps_.SetEntryDescriptor(
      &YSystem_AppsEntry_descriptor);
  apps_.MergeFrom(from.apps_);
  working_folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.working_folder().size() > 0) {
    working_folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.working_folder_);
  }
  if (from.has_default_info()) {
    default_info_ = new ::y3d::ProjectInfo(*from.default_info_);
  } else {
    default_info_ = NULL;
  }
  if (from.has_default_setting()) {
    default_setting_ = new ::y3d::PSetting(*from.default_setting_);
  } else {
    default_setting_ = NULL;
  }
  if (from.has_master_server()) {
    master_server_ = new ::y3d::YMasterServer(*from.master_server_);
  } else {
    master_server_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:y3d.YSystem)
}

void YSystem::SharedCtor() {
  const ::google::protobuf::Descriptor*& YSystem_AppsEntry_descriptor = protobuf_y3d_2eproto::file_level_metadata[51].descriptor;
  apps_.SetAssignDescriptorCallback(
      protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce);
  apps_.SetEntryDescriptor(
      &YSystem_AppsEntry_descriptor);
  working_folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&default_info_, 0, reinterpret_cast<char*>(&master_server_) -
    reinterpret_cast<char*>(&default_info_) + sizeof(master_server_));
  _cached_size_ = 0;
}

YSystem::~YSystem() {
  // @@protoc_insertion_point(destructor:y3d.YSystem)
  SharedDtor();
}

void YSystem::SharedDtor() {
  working_folder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete default_info_;
  }
  if (this != internal_default_instance()) {
    delete default_setting_;
  }
  if (this != internal_default_instance()) {
    delete master_server_;
  }
}

void YSystem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YSystem::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[52].descriptor;
}

const YSystem& YSystem::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YSystem* YSystem::New(::google::protobuf::Arena* arena) const {
  YSystem* n = new YSystem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YSystem::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YSystem)
  projects_.Clear();
  apps_.Clear();
  working_folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && default_info_ != NULL) {
    delete default_info_;
  }
  default_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && default_setting_ != NULL) {
    delete default_setting_;
  }
  default_setting_ = NULL;
  if (GetArenaNoVirtual() == NULL && master_server_ != NULL) {
    delete master_server_;
  }
  master_server_ = NULL;
}

bool YSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YSystem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string working_folder = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_working_folder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->working_folder().data(), this->working_folder().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YSystem.working_folder"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.ProjectInfo default_info = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_default_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.PSetting default_setting = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_default_setting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.ProjectInfo projects = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_projects()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, .y3d.WorkerApp> apps = 5;
      case 5: {
        if (tag == 42u) {
          DO_(input->IncrementRecursionDepth());
          YSystem_AppsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::y3d::WorkerApp,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::y3d::WorkerApp > > parser(&apps_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YSystem.AppsEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .y3d.YMasterServer master_server = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_master_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YSystem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YSystem)
  return false;
#undef DO_
}

void YSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YSystem)
  // string working_folder = 1;
  if (this->working_folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->working_folder().data(), this->working_folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YSystem.working_folder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->working_folder(), output);
  }

  // .y3d.ProjectInfo default_info = 2;
  if (this->has_default_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->default_info_, output);
  }

  // .y3d.PSetting default_setting = 3;
  if (this->has_default_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->default_setting_, output);
  }

  // repeated .y3d.ProjectInfo projects = 4;
  for (unsigned int i = 0, n = this->projects_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->projects(i), output);
  }

  // map<string, .y3d.WorkerApp> apps = 5;
  if (!this->apps().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::y3d::WorkerApp >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YSystem.AppsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->apps().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->apps().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::y3d::WorkerApp >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::y3d::WorkerApp >::const_iterator
          it = this->apps().begin();
          it != this->apps().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YSystem_AppsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(apps_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YSystem_AppsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::y3d::WorkerApp >::const_iterator
          it = this->apps().begin();
          it != this->apps().end(); ++it) {
        entry.reset(apps_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .y3d.YMasterServer master_server = 6;
  if (this->has_master_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->master_server_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YSystem)
}

::google::protobuf::uint8* YSystem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YSystem)
  // string working_folder = 1;
  if (this->working_folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->working_folder().data(), this->working_folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YSystem.working_folder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->working_folder(), target);
  }

  // .y3d.ProjectInfo default_info = 2;
  if (this->has_default_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->default_info_, false, target);
  }

  // .y3d.PSetting default_setting = 3;
  if (this->has_default_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->default_setting_, false, target);
  }

  // repeated .y3d.ProjectInfo projects = 4;
  for (unsigned int i = 0, n = this->projects_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->projects(i), false, target);
  }

  // map<string, .y3d.WorkerApp> apps = 5;
  if (!this->apps().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::y3d::WorkerApp >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YSystem.AppsEntry.key");
      }
    };

    if (deterministic &&
        this->apps().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->apps().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::y3d::WorkerApp >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::y3d::WorkerApp >::const_iterator
          it = this->apps().begin();
          it != this->apps().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YSystem_AppsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(apps_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YSystem_AppsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::y3d::WorkerApp >::const_iterator
          it = this->apps().begin();
          it != this->apps().end(); ++it) {
        entry.reset(apps_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .y3d.YMasterServer master_server = 6;
  if (this->has_master_server()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->master_server_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YSystem)
  return target;
}

size_t YSystem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YSystem)
  size_t total_size = 0;

  // repeated .y3d.ProjectInfo projects = 4;
  {
    unsigned int count = this->projects_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->projects(i));
    }
  }

  // map<string, .y3d.WorkerApp> apps = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->apps_size());
  {
    ::google::protobuf::scoped_ptr<YSystem_AppsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::y3d::WorkerApp >::const_iterator
        it = this->apps().begin();
        it != this->apps().end(); ++it) {
      entry.reset(apps_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string working_folder = 1;
  if (this->working_folder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->working_folder());
  }

  // .y3d.ProjectInfo default_info = 2;
  if (this->has_default_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->default_info_);
  }

  // .y3d.PSetting default_setting = 3;
  if (this->has_default_setting()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->default_setting_);
  }

  // .y3d.YMasterServer master_server = 6;
  if (this->has_master_server()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->master_server_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YSystem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YSystem)
  GOOGLE_DCHECK_NE(&from, this);
  const YSystem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YSystem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YSystem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YSystem)
    MergeFrom(*source);
  }
}

void YSystem::MergeFrom(const YSystem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YSystem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  projects_.MergeFrom(from.projects_);
  apps_.MergeFrom(from.apps_);
  if (from.working_folder().size() > 0) {

    working_folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.working_folder_);
  }
  if (from.has_default_info()) {
    mutable_default_info()->::y3d::ProjectInfo::MergeFrom(from.default_info());
  }
  if (from.has_default_setting()) {
    mutable_default_setting()->::y3d::PSetting::MergeFrom(from.default_setting());
  }
  if (from.has_master_server()) {
    mutable_master_server()->::y3d::YMasterServer::MergeFrom(from.master_server());
  }
}

void YSystem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YSystem::CopyFrom(const YSystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YSystem::IsInitialized() const {
  return true;
}

void YSystem::Swap(YSystem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YSystem::InternalSwap(YSystem* other) {
  projects_.UnsafeArenaSwap(&other->projects_);
  apps_.Swap(&other->apps_);
  working_folder_.Swap(&other->working_folder_);
  std::swap(default_info_, other->default_info_);
  std::swap(default_setting_, other->default_setting_);
  std::swap(master_server_, other->master_server_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YSystem::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[52];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YSystem

// string working_folder = 1;
void YSystem::clear_working_folder() {
  working_folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YSystem::working_folder() const {
  // @@protoc_insertion_point(field_get:y3d.YSystem.working_folder)
  return working_folder_.GetNoArena();
}
void YSystem::set_working_folder(const ::std::string& value) {
  
  working_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YSystem.working_folder)
}
#if LANG_CXX11
void YSystem::set_working_folder(::std::string&& value) {
  
  working_folder_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YSystem.working_folder)
}
#endif
void YSystem::set_working_folder(const char* value) {
  
  working_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YSystem.working_folder)
}
void YSystem::set_working_folder(const char* value, size_t size) {
  
  working_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YSystem.working_folder)
}
::std::string* YSystem::mutable_working_folder() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YSystem.working_folder)
  return working_folder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YSystem::release_working_folder() {
  // @@protoc_insertion_point(field_release:y3d.YSystem.working_folder)
  
  return working_folder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YSystem::set_allocated_working_folder(::std::string* working_folder) {
  if (working_folder != NULL) {
    
  } else {
    
  }
  working_folder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), working_folder);
  // @@protoc_insertion_point(field_set_allocated:y3d.YSystem.working_folder)
}

// .y3d.ProjectInfo default_info = 2;
bool YSystem::has_default_info() const {
  return this != internal_default_instance() && default_info_ != NULL;
}
void YSystem::clear_default_info() {
  if (GetArenaNoVirtual() == NULL && default_info_ != NULL) delete default_info_;
  default_info_ = NULL;
}
const ::y3d::ProjectInfo& YSystem::default_info() const {
  // @@protoc_insertion_point(field_get:y3d.YSystem.default_info)
  return default_info_ != NULL ? *default_info_
                         : *::y3d::ProjectInfo::internal_default_instance();
}
::y3d::ProjectInfo* YSystem::mutable_default_info() {
  
  if (default_info_ == NULL) {
    default_info_ = new ::y3d::ProjectInfo;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YSystem.default_info)
  return default_info_;
}
::y3d::ProjectInfo* YSystem::release_default_info() {
  // @@protoc_insertion_point(field_release:y3d.YSystem.default_info)
  
  ::y3d::ProjectInfo* temp = default_info_;
  default_info_ = NULL;
  return temp;
}
void YSystem::set_allocated_default_info(::y3d::ProjectInfo* default_info) {
  delete default_info_;
  default_info_ = default_info;
  if (default_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YSystem.default_info)
}

// .y3d.PSetting default_setting = 3;
bool YSystem::has_default_setting() const {
  return this != internal_default_instance() && default_setting_ != NULL;
}
void YSystem::clear_default_setting() {
  if (GetArenaNoVirtual() == NULL && default_setting_ != NULL) delete default_setting_;
  default_setting_ = NULL;
}
const ::y3d::PSetting& YSystem::default_setting() const {
  // @@protoc_insertion_point(field_get:y3d.YSystem.default_setting)
  return default_setting_ != NULL ? *default_setting_
                         : *::y3d::PSetting::internal_default_instance();
}
::y3d::PSetting* YSystem::mutable_default_setting() {
  
  if (default_setting_ == NULL) {
    default_setting_ = new ::y3d::PSetting;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YSystem.default_setting)
  return default_setting_;
}
::y3d::PSetting* YSystem::release_default_setting() {
  // @@protoc_insertion_point(field_release:y3d.YSystem.default_setting)
  
  ::y3d::PSetting* temp = default_setting_;
  default_setting_ = NULL;
  return temp;
}
void YSystem::set_allocated_default_setting(::y3d::PSetting* default_setting) {
  delete default_setting_;
  default_setting_ = default_setting;
  if (default_setting) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YSystem.default_setting)
}

// repeated .y3d.ProjectInfo projects = 4;
int YSystem::projects_size() const {
  return projects_.size();
}
void YSystem::clear_projects() {
  projects_.Clear();
}
const ::y3d::ProjectInfo& YSystem::projects(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YSystem.projects)
  return projects_.Get(index);
}
::y3d::ProjectInfo* YSystem::mutable_projects(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YSystem.projects)
  return projects_.Mutable(index);
}
::y3d::ProjectInfo* YSystem::add_projects() {
  // @@protoc_insertion_point(field_add:y3d.YSystem.projects)
  return projects_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::ProjectInfo >*
YSystem::mutable_projects() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YSystem.projects)
  return &projects_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::ProjectInfo >&
YSystem::projects() const {
  // @@protoc_insertion_point(field_list:y3d.YSystem.projects)
  return projects_;
}

// map<string, .y3d.WorkerApp> apps = 5;
int YSystem::apps_size() const {
  return apps_.size();
}
void YSystem::clear_apps() {
  apps_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::y3d::WorkerApp >&
YSystem::apps() const {
  // @@protoc_insertion_point(field_map:y3d.YSystem.apps)
  return apps_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::y3d::WorkerApp >*
YSystem::mutable_apps() {
  // @@protoc_insertion_point(field_mutable_map:y3d.YSystem.apps)
  return apps_.MutableMap();
}

// .y3d.YMasterServer master_server = 6;
bool YSystem::has_master_server() const {
  return this != internal_default_instance() && master_server_ != NULL;
}
void YSystem::clear_master_server() {
  if (GetArenaNoVirtual() == NULL && master_server_ != NULL) delete master_server_;
  master_server_ = NULL;
}
const ::y3d::YMasterServer& YSystem::master_server() const {
  // @@protoc_insertion_point(field_get:y3d.YSystem.master_server)
  return master_server_ != NULL ? *master_server_
                         : *::y3d::YMasterServer::internal_default_instance();
}
::y3d::YMasterServer* YSystem::mutable_master_server() {
  
  if (master_server_ == NULL) {
    master_server_ = new ::y3d::YMasterServer;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YSystem.master_server)
  return master_server_;
}
::y3d::YMasterServer* YSystem::release_master_server() {
  // @@protoc_insertion_point(field_release:y3d.YSystem.master_server)
  
  ::y3d::YMasterServer* temp = master_server_;
  master_server_ = NULL;
  return temp;
}
void YSystem::set_allocated_master_server(::y3d::YMasterServer* master_server) {
  delete master_server_;
  master_server_ = master_server;
  if (master_server) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YSystem.master_server)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewProjectParam::kFnameFieldNumber;
const int NewProjectParam::kFolderFieldNumber;
const int NewProjectParam::kProjectPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewProjectParam::NewProjectParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.NewProjectParam)
}
NewProjectParam::NewProjectParam(const NewProjectParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fname().size() > 0) {
    fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
  }
  folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.folder().size() > 0) {
    folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_);
  }
  project_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_path().size() > 0) {
    project_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_path_);
  }
  // @@protoc_insertion_point(copy_constructor:y3d.NewProjectParam)
}

void NewProjectParam::SharedCtor() {
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

NewProjectParam::~NewProjectParam() {
  // @@protoc_insertion_point(destructor:y3d.NewProjectParam)
  SharedDtor();
}

void NewProjectParam::SharedDtor() {
  fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewProjectParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewProjectParam::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[53].descriptor;
}

const NewProjectParam& NewProjectParam::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewProjectParam* NewProjectParam::New(::google::protobuf::Arena* arena) const {
  NewProjectParam* n = new NewProjectParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewProjectParam::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.NewProjectParam)
  fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NewProjectParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.NewProjectParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fname().data(), this->fname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.NewProjectParam.fname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string folder = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_folder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->folder().data(), this->folder().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.NewProjectParam.folder"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_path = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_path().data(), this->project_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.NewProjectParam.project_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.NewProjectParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.NewProjectParam)
  return false;
#undef DO_
}

void NewProjectParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.NewProjectParam)
  // string fname = 1;
  if (this->fname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fname().data(), this->fname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.NewProjectParam.fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fname(), output);
  }

  // string folder = 2;
  if (this->folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder().data(), this->folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.NewProjectParam.folder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->folder(), output);
  }

  // string project_path = 3;
  if (this->project_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_path().data(), this->project_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.NewProjectParam.project_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->project_path(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.NewProjectParam)
}

::google::protobuf::uint8* NewProjectParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.NewProjectParam)
  // string fname = 1;
  if (this->fname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fname().data(), this->fname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.NewProjectParam.fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fname(), target);
  }

  // string folder = 2;
  if (this->folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->folder().data(), this->folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.NewProjectParam.folder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->folder(), target);
  }

  // string project_path = 3;
  if (this->project_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_path().data(), this->project_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.NewProjectParam.project_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->project_path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.NewProjectParam)
  return target;
}

size_t NewProjectParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.NewProjectParam)
  size_t total_size = 0;

  // string fname = 1;
  if (this->fname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fname());
  }

  // string folder = 2;
  if (this->folder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->folder());
  }

  // string project_path = 3;
  if (this->project_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewProjectParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.NewProjectParam)
  GOOGLE_DCHECK_NE(&from, this);
  const NewProjectParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewProjectParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.NewProjectParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.NewProjectParam)
    MergeFrom(*source);
  }
}

void NewProjectParam::MergeFrom(const NewProjectParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.NewProjectParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.fname().size() > 0) {

    fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
  }
  if (from.folder().size() > 0) {

    folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.folder_);
  }
  if (from.project_path().size() > 0) {

    project_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_path_);
  }
}

void NewProjectParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.NewProjectParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewProjectParam::CopyFrom(const NewProjectParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.NewProjectParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewProjectParam::IsInitialized() const {
  return true;
}

void NewProjectParam::Swap(NewProjectParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewProjectParam::InternalSwap(NewProjectParam* other) {
  fname_.Swap(&other->fname_);
  folder_.Swap(&other->folder_);
  project_path_.Swap(&other->project_path_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewProjectParam::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[53];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewProjectParam

// string fname = 1;
void NewProjectParam::clear_fname() {
  fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NewProjectParam::fname() const {
  // @@protoc_insertion_point(field_get:y3d.NewProjectParam.fname)
  return fname_.GetNoArena();
}
void NewProjectParam::set_fname(const ::std::string& value) {
  
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.NewProjectParam.fname)
}
#if LANG_CXX11
void NewProjectParam::set_fname(::std::string&& value) {
  
  fname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.NewProjectParam.fname)
}
#endif
void NewProjectParam::set_fname(const char* value) {
  
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.NewProjectParam.fname)
}
void NewProjectParam::set_fname(const char* value, size_t size) {
  
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.NewProjectParam.fname)
}
::std::string* NewProjectParam::mutable_fname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.NewProjectParam.fname)
  return fname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewProjectParam::release_fname() {
  // @@protoc_insertion_point(field_release:y3d.NewProjectParam.fname)
  
  return fname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewProjectParam::set_allocated_fname(::std::string* fname) {
  if (fname != NULL) {
    
  } else {
    
  }
  fname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fname);
  // @@protoc_insertion_point(field_set_allocated:y3d.NewProjectParam.fname)
}

// string folder = 2;
void NewProjectParam::clear_folder() {
  folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NewProjectParam::folder() const {
  // @@protoc_insertion_point(field_get:y3d.NewProjectParam.folder)
  return folder_.GetNoArena();
}
void NewProjectParam::set_folder(const ::std::string& value) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.NewProjectParam.folder)
}
#if LANG_CXX11
void NewProjectParam::set_folder(::std::string&& value) {
  
  folder_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.NewProjectParam.folder)
}
#endif
void NewProjectParam::set_folder(const char* value) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.NewProjectParam.folder)
}
void NewProjectParam::set_folder(const char* value, size_t size) {
  
  folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.NewProjectParam.folder)
}
::std::string* NewProjectParam::mutable_folder() {
  
  // @@protoc_insertion_point(field_mutable:y3d.NewProjectParam.folder)
  return folder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewProjectParam::release_folder() {
  // @@protoc_insertion_point(field_release:y3d.NewProjectParam.folder)
  
  return folder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewProjectParam::set_allocated_folder(::std::string* folder) {
  if (folder != NULL) {
    
  } else {
    
  }
  folder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), folder);
  // @@protoc_insertion_point(field_set_allocated:y3d.NewProjectParam.folder)
}

// string project_path = 3;
void NewProjectParam::clear_project_path() {
  project_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NewProjectParam::project_path() const {
  // @@protoc_insertion_point(field_get:y3d.NewProjectParam.project_path)
  return project_path_.GetNoArena();
}
void NewProjectParam::set_project_path(const ::std::string& value) {
  
  project_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.NewProjectParam.project_path)
}
#if LANG_CXX11
void NewProjectParam::set_project_path(::std::string&& value) {
  
  project_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.NewProjectParam.project_path)
}
#endif
void NewProjectParam::set_project_path(const char* value) {
  
  project_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.NewProjectParam.project_path)
}
void NewProjectParam::set_project_path(const char* value, size_t size) {
  
  project_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.NewProjectParam.project_path)
}
::std::string* NewProjectParam::mutable_project_path() {
  
  // @@protoc_insertion_point(field_mutable:y3d.NewProjectParam.project_path)
  return project_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewProjectParam::release_project_path() {
  // @@protoc_insertion_point(field_release:y3d.NewProjectParam.project_path)
  
  return project_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewProjectParam::set_allocated_project_path(::std::string* project_path) {
  if (project_path != NULL) {
    
  } else {
    
  }
  project_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_path);
  // @@protoc_insertion_point(field_set_allocated:y3d.NewProjectParam.project_path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseNProject::kPInfoFieldNumber;
const int ResponseNProject::kYalFieldNumber;
const int ResponseNProject::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseNProject::ResponseNProject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ResponseNProject)
}
ResponseNProject::ResponseNProject(const ResponseNProject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err().size() > 0) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.has_pinfo()) {
    pinfo_ = new ::y3d::ProjectInfo(*from.pinfo_);
  } else {
    pinfo_ = NULL;
  }
  if (from.has_yal()) {
    yal_ = new ::y3d::YAreaList(*from.yal_);
  } else {
    yal_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:y3d.ResponseNProject)
}

void ResponseNProject::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pinfo_, 0, reinterpret_cast<char*>(&yal_) -
    reinterpret_cast<char*>(&pinfo_) + sizeof(yal_));
  _cached_size_ = 0;
}

ResponseNProject::~ResponseNProject() {
  // @@protoc_insertion_point(destructor:y3d.ResponseNProject)
  SharedDtor();
}

void ResponseNProject::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete pinfo_;
  }
  if (this != internal_default_instance()) {
    delete yal_;
  }
}

void ResponseNProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseNProject::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[54].descriptor;
}

const ResponseNProject& ResponseNProject::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseNProject* ResponseNProject::New(::google::protobuf::Arena* arena) const {
  ResponseNProject* n = new ResponseNProject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseNProject::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ResponseNProject)
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pinfo_ != NULL) {
    delete pinfo_;
  }
  pinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && yal_ != NULL) {
    delete yal_;
  }
  yal_ = NULL;
}

bool ResponseNProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ResponseNProject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.ProjectInfo pInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YAreaList yal = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string err = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ResponseNProject.err"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ResponseNProject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ResponseNProject)
  return false;
#undef DO_
}

void ResponseNProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ResponseNProject)
  // .y3d.ProjectInfo pInfo = 1;
  if (this->has_pinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pinfo_, output);
  }

  // .y3d.YAreaList yal = 2;
  if (this->has_yal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->yal_, output);
  }

  // string err = 4;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResponseNProject.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ResponseNProject)
}

::google::protobuf::uint8* ResponseNProject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ResponseNProject)
  // .y3d.ProjectInfo pInfo = 1;
  if (this->has_pinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pinfo_, false, target);
  }

  // .y3d.YAreaList yal = 2;
  if (this->has_yal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->yal_, false, target);
  }

  // string err = 4;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ResponseNProject.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ResponseNProject)
  return target;
}

size_t ResponseNProject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ResponseNProject)
  size_t total_size = 0;

  // string err = 4;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  // .y3d.ProjectInfo pInfo = 1;
  if (this->has_pinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pinfo_);
  }

  // .y3d.YAreaList yal = 2;
  if (this->has_yal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->yal_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseNProject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ResponseNProject)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseNProject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseNProject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ResponseNProject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ResponseNProject)
    MergeFrom(*source);
  }
}

void ResponseNProject::MergeFrom(const ResponseNProject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ResponseNProject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.has_pinfo()) {
    mutable_pinfo()->::y3d::ProjectInfo::MergeFrom(from.pinfo());
  }
  if (from.has_yal()) {
    mutable_yal()->::y3d::YAreaList::MergeFrom(from.yal());
  }
}

void ResponseNProject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ResponseNProject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseNProject::CopyFrom(const ResponseNProject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ResponseNProject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseNProject::IsInitialized() const {
  return true;
}

void ResponseNProject::Swap(ResponseNProject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseNProject::InternalSwap(ResponseNProject* other) {
  err_.Swap(&other->err_);
  std::swap(pinfo_, other->pinfo_);
  std::swap(yal_, other->yal_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseNProject::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[54];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseNProject

// .y3d.ProjectInfo pInfo = 1;
bool ResponseNProject::has_pinfo() const {
  return this != internal_default_instance() && pinfo_ != NULL;
}
void ResponseNProject::clear_pinfo() {
  if (GetArenaNoVirtual() == NULL && pinfo_ != NULL) delete pinfo_;
  pinfo_ = NULL;
}
const ::y3d::ProjectInfo& ResponseNProject::pinfo() const {
  // @@protoc_insertion_point(field_get:y3d.ResponseNProject.pInfo)
  return pinfo_ != NULL ? *pinfo_
                         : *::y3d::ProjectInfo::internal_default_instance();
}
::y3d::ProjectInfo* ResponseNProject::mutable_pinfo() {
  
  if (pinfo_ == NULL) {
    pinfo_ = new ::y3d::ProjectInfo;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ResponseNProject.pInfo)
  return pinfo_;
}
::y3d::ProjectInfo* ResponseNProject::release_pinfo() {
  // @@protoc_insertion_point(field_release:y3d.ResponseNProject.pInfo)
  
  ::y3d::ProjectInfo* temp = pinfo_;
  pinfo_ = NULL;
  return temp;
}
void ResponseNProject::set_allocated_pinfo(::y3d::ProjectInfo* pinfo) {
  delete pinfo_;
  pinfo_ = pinfo;
  if (pinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ResponseNProject.pInfo)
}

// .y3d.YAreaList yal = 2;
bool ResponseNProject::has_yal() const {
  return this != internal_default_instance() && yal_ != NULL;
}
void ResponseNProject::clear_yal() {
  if (GetArenaNoVirtual() == NULL && yal_ != NULL) delete yal_;
  yal_ = NULL;
}
const ::y3d::YAreaList& ResponseNProject::yal() const {
  // @@protoc_insertion_point(field_get:y3d.ResponseNProject.yal)
  return yal_ != NULL ? *yal_
                         : *::y3d::YAreaList::internal_default_instance();
}
::y3d::YAreaList* ResponseNProject::mutable_yal() {
  
  if (yal_ == NULL) {
    yal_ = new ::y3d::YAreaList;
  }
  // @@protoc_insertion_point(field_mutable:y3d.ResponseNProject.yal)
  return yal_;
}
::y3d::YAreaList* ResponseNProject::release_yal() {
  // @@protoc_insertion_point(field_release:y3d.ResponseNProject.yal)
  
  ::y3d::YAreaList* temp = yal_;
  yal_ = NULL;
  return temp;
}
void ResponseNProject::set_allocated_yal(::y3d::YAreaList* yal) {
  delete yal_;
  yal_ = yal;
  if (yal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.ResponseNProject.yal)
}

// string err = 4;
void ResponseNProject::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseNProject::err() const {
  // @@protoc_insertion_point(field_get:y3d.ResponseNProject.err)
  return err_.GetNoArena();
}
void ResponseNProject::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ResponseNProject.err)
}
#if LANG_CXX11
void ResponseNProject::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.ResponseNProject.err)
}
#endif
void ResponseNProject::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ResponseNProject.err)
}
void ResponseNProject::set_err(const char* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ResponseNProject.err)
}
::std::string* ResponseNProject::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ResponseNProject.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseNProject::release_err() {
  // @@protoc_insertion_point(field_release:y3d.ResponseNProject.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseNProject::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:y3d.ResponseNProject.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YJobAction::kUnwrapFieldNumber;
const int YJobAction::kPackFieldNumber;
const int YJobAction::kLowpolyFieldNumber;
const int YJobAction::kBakeNormalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YJobAction::YJobAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YJobAction)
}
YJobAction::YJobAction(const YJobAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_action();
  switch (from.action_case()) {
    case kUnwrap: {
      mutable_unwrap()->::y3d::EUnwrap::MergeFrom(from.unwrap());
      break;
    }
    case kPack: {
      mutable_pack()->::y3d::EPacking::MergeFrom(from.pack());
      break;
    }
    case kLowpoly: {
      mutable_lowpoly()->::y3d::ELowpoly::MergeFrom(from.lowpoly());
      break;
    }
    case kBakeNormal: {
      mutable_bake_normal()->::y3d::ENormal::MergeFrom(from.bake_normal());
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:y3d.YJobAction)
}

void YJobAction::SharedCtor() {
  clear_has_action();
  _cached_size_ = 0;
}

YJobAction::~YJobAction() {
  // @@protoc_insertion_point(destructor:y3d.YJobAction)
  SharedDtor();
}

void YJobAction::SharedDtor() {
  if (has_action()) {
    clear_action();
  }
}

void YJobAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YJobAction::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[55].descriptor;
}

const YJobAction& YJobAction::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YJobAction* YJobAction::New(::google::protobuf::Arena* arena) const {
  YJobAction* n = new YJobAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YJobAction::clear_action() {
// @@protoc_insertion_point(one_of_clear_start:y3d.YJobAction)
  switch (action_case()) {
    case kUnwrap: {
      delete action_.unwrap_;
      break;
    }
    case kPack: {
      delete action_.pack_;
      break;
    }
    case kLowpoly: {
      delete action_.lowpoly_;
      break;
    }
    case kBakeNormal: {
      delete action_.bake_normal_;
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ACTION_NOT_SET;
}


void YJobAction::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YJobAction)
  clear_action();
}

bool YJobAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YJobAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.EUnwrap unwrap = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unwrap()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.EPacking pack = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.ELowpoly lowpoly = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lowpoly()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.ENormal bake_normal = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bake_normal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YJobAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YJobAction)
  return false;
#undef DO_
}

void YJobAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YJobAction)
  // .y3d.EUnwrap unwrap = 1;
  if (has_unwrap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *action_.unwrap_, output);
  }

  // .y3d.EPacking pack = 2;
  if (has_pack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *action_.pack_, output);
  }

  // .y3d.ELowpoly lowpoly = 3;
  if (has_lowpoly()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *action_.lowpoly_, output);
  }

  // .y3d.ENormal bake_normal = 4;
  if (has_bake_normal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *action_.bake_normal_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YJobAction)
}

::google::protobuf::uint8* YJobAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YJobAction)
  // .y3d.EUnwrap unwrap = 1;
  if (has_unwrap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *action_.unwrap_, false, target);
  }

  // .y3d.EPacking pack = 2;
  if (has_pack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *action_.pack_, false, target);
  }

  // .y3d.ELowpoly lowpoly = 3;
  if (has_lowpoly()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *action_.lowpoly_, false, target);
  }

  // .y3d.ENormal bake_normal = 4;
  if (has_bake_normal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *action_.bake_normal_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YJobAction)
  return target;
}

size_t YJobAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YJobAction)
  size_t total_size = 0;

  switch (action_case()) {
    // .y3d.EUnwrap unwrap = 1;
    case kUnwrap: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *action_.unwrap_);
      break;
    }
    // .y3d.EPacking pack = 2;
    case kPack: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *action_.pack_);
      break;
    }
    // .y3d.ELowpoly lowpoly = 3;
    case kLowpoly: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *action_.lowpoly_);
      break;
    }
    // .y3d.ENormal bake_normal = 4;
    case kBakeNormal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *action_.bake_normal_);
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YJobAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YJobAction)
  GOOGLE_DCHECK_NE(&from, this);
  const YJobAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YJobAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YJobAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YJobAction)
    MergeFrom(*source);
  }
}

void YJobAction::MergeFrom(const YJobAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YJobAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  switch (from.action_case()) {
    case kUnwrap: {
      mutable_unwrap()->::y3d::EUnwrap::MergeFrom(from.unwrap());
      break;
    }
    case kPack: {
      mutable_pack()->::y3d::EPacking::MergeFrom(from.pack());
      break;
    }
    case kLowpoly: {
      mutable_lowpoly()->::y3d::ELowpoly::MergeFrom(from.lowpoly());
      break;
    }
    case kBakeNormal: {
      mutable_bake_normal()->::y3d::ENormal::MergeFrom(from.bake_normal());
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
}

void YJobAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YJobAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YJobAction::CopyFrom(const YJobAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YJobAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YJobAction::IsInitialized() const {
  return true;
}

void YJobAction::Swap(YJobAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YJobAction::InternalSwap(YJobAction* other) {
  std::swap(action_, other->action_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YJobAction::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[55];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YJobAction

// .y3d.EUnwrap unwrap = 1;
bool YJobAction::has_unwrap() const {
  return action_case() == kUnwrap;
}
void YJobAction::set_has_unwrap() {
  _oneof_case_[0] = kUnwrap;
}
void YJobAction::clear_unwrap() {
  if (has_unwrap()) {
    delete action_.unwrap_;
    clear_has_action();
  }
}
 const ::y3d::EUnwrap& YJobAction::unwrap() const {
  // @@protoc_insertion_point(field_get:y3d.YJobAction.unwrap)
  return has_unwrap()
      ? *action_.unwrap_
      : ::y3d::EUnwrap::default_instance();
}
::y3d::EUnwrap* YJobAction::mutable_unwrap() {
  if (!has_unwrap()) {
    clear_action();
    set_has_unwrap();
    action_.unwrap_ = new ::y3d::EUnwrap;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YJobAction.unwrap)
  return action_.unwrap_;
}
::y3d::EUnwrap* YJobAction::release_unwrap() {
  // @@protoc_insertion_point(field_release:y3d.YJobAction.unwrap)
  if (has_unwrap()) {
    clear_has_action();
    ::y3d::EUnwrap* temp = action_.unwrap_;
    action_.unwrap_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YJobAction::set_allocated_unwrap(::y3d::EUnwrap* unwrap) {
  clear_action();
  if (unwrap) {
    set_has_unwrap();
    action_.unwrap_ = unwrap;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YJobAction.unwrap)
}

// .y3d.EPacking pack = 2;
bool YJobAction::has_pack() const {
  return action_case() == kPack;
}
void YJobAction::set_has_pack() {
  _oneof_case_[0] = kPack;
}
void YJobAction::clear_pack() {
  if (has_pack()) {
    delete action_.pack_;
    clear_has_action();
  }
}
 const ::y3d::EPacking& YJobAction::pack() const {
  // @@protoc_insertion_point(field_get:y3d.YJobAction.pack)
  return has_pack()
      ? *action_.pack_
      : ::y3d::EPacking::default_instance();
}
::y3d::EPacking* YJobAction::mutable_pack() {
  if (!has_pack()) {
    clear_action();
    set_has_pack();
    action_.pack_ = new ::y3d::EPacking;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YJobAction.pack)
  return action_.pack_;
}
::y3d::EPacking* YJobAction::release_pack() {
  // @@protoc_insertion_point(field_release:y3d.YJobAction.pack)
  if (has_pack()) {
    clear_has_action();
    ::y3d::EPacking* temp = action_.pack_;
    action_.pack_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YJobAction::set_allocated_pack(::y3d::EPacking* pack) {
  clear_action();
  if (pack) {
    set_has_pack();
    action_.pack_ = pack;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YJobAction.pack)
}

// .y3d.ELowpoly lowpoly = 3;
bool YJobAction::has_lowpoly() const {
  return action_case() == kLowpoly;
}
void YJobAction::set_has_lowpoly() {
  _oneof_case_[0] = kLowpoly;
}
void YJobAction::clear_lowpoly() {
  if (has_lowpoly()) {
    delete action_.lowpoly_;
    clear_has_action();
  }
}
 const ::y3d::ELowpoly& YJobAction::lowpoly() const {
  // @@protoc_insertion_point(field_get:y3d.YJobAction.lowpoly)
  return has_lowpoly()
      ? *action_.lowpoly_
      : ::y3d::ELowpoly::default_instance();
}
::y3d::ELowpoly* YJobAction::mutable_lowpoly() {
  if (!has_lowpoly()) {
    clear_action();
    set_has_lowpoly();
    action_.lowpoly_ = new ::y3d::ELowpoly;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YJobAction.lowpoly)
  return action_.lowpoly_;
}
::y3d::ELowpoly* YJobAction::release_lowpoly() {
  // @@protoc_insertion_point(field_release:y3d.YJobAction.lowpoly)
  if (has_lowpoly()) {
    clear_has_action();
    ::y3d::ELowpoly* temp = action_.lowpoly_;
    action_.lowpoly_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YJobAction::set_allocated_lowpoly(::y3d::ELowpoly* lowpoly) {
  clear_action();
  if (lowpoly) {
    set_has_lowpoly();
    action_.lowpoly_ = lowpoly;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YJobAction.lowpoly)
}

// .y3d.ENormal bake_normal = 4;
bool YJobAction::has_bake_normal() const {
  return action_case() == kBakeNormal;
}
void YJobAction::set_has_bake_normal() {
  _oneof_case_[0] = kBakeNormal;
}
void YJobAction::clear_bake_normal() {
  if (has_bake_normal()) {
    delete action_.bake_normal_;
    clear_has_action();
  }
}
 const ::y3d::ENormal& YJobAction::bake_normal() const {
  // @@protoc_insertion_point(field_get:y3d.YJobAction.bake_normal)
  return has_bake_normal()
      ? *action_.bake_normal_
      : ::y3d::ENormal::default_instance();
}
::y3d::ENormal* YJobAction::mutable_bake_normal() {
  if (!has_bake_normal()) {
    clear_action();
    set_has_bake_normal();
    action_.bake_normal_ = new ::y3d::ENormal;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YJobAction.bake_normal)
  return action_.bake_normal_;
}
::y3d::ENormal* YJobAction::release_bake_normal() {
  // @@protoc_insertion_point(field_release:y3d.YJobAction.bake_normal)
  if (has_bake_normal()) {
    clear_has_action();
    ::y3d::ENormal* temp = action_.bake_normal_;
    action_.bake_normal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YJobAction::set_allocated_bake_normal(::y3d::ENormal* bake_normal) {
  clear_action();
  if (bake_normal) {
    set_has_bake_normal();
    action_.bake_normal_ = bake_normal;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YJobAction.bake_normal)
}

bool YJobAction::has_action() const {
  return action_case() != ACTION_NOT_SET;
}
void YJobAction::clear_has_action() {
  _oneof_case_[0] = ACTION_NOT_SET;
}
YJobAction::ActionCase YJobAction::action_case() const {
  return YJobAction::ActionCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YItemMesh::kBakeMatFieldNumber;
const int YItemMesh::kMapFieldNumber;
const int YItemMesh::kMeshFieldNumber;
const int YItemMesh::kMeshesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YItemMesh::YItemMesh()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YItemMesh)
}
YItemMesh::YItemMesh(const YItemMesh& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      meshes_(from.meshes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bake_mat()) {
    bake_mat_ = new ::y3d::YMat(*from.bake_mat_);
  } else {
    bake_mat_ = NULL;
  }
  if (from.has_map()) {
    map_ = new ::y3d::YBaseMap(*from.map_);
  } else {
    map_ = NULL;
  }
  if (from.has_mesh()) {
    mesh_ = new ::y3d::YMesh(*from.mesh_);
  } else {
    mesh_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:y3d.YItemMesh)
}

void YItemMesh::SharedCtor() {
  ::memset(&bake_mat_, 0, reinterpret_cast<char*>(&mesh_) -
    reinterpret_cast<char*>(&bake_mat_) + sizeof(mesh_));
  _cached_size_ = 0;
}

YItemMesh::~YItemMesh() {
  // @@protoc_insertion_point(destructor:y3d.YItemMesh)
  SharedDtor();
}

void YItemMesh::SharedDtor() {
  if (this != internal_default_instance()) {
    delete bake_mat_;
  }
  if (this != internal_default_instance()) {
    delete map_;
  }
  if (this != internal_default_instance()) {
    delete mesh_;
  }
}

void YItemMesh::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YItemMesh::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[56].descriptor;
}

const YItemMesh& YItemMesh::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YItemMesh* YItemMesh::New(::google::protobuf::Arena* arena) const {
  YItemMesh* n = new YItemMesh;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YItemMesh::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YItemMesh)
  meshes_.Clear();
  if (GetArenaNoVirtual() == NULL && bake_mat_ != NULL) {
    delete bake_mat_;
  }
  bake_mat_ = NULL;
  if (GetArenaNoVirtual() == NULL && map_ != NULL) {
    delete map_;
  }
  map_ = NULL;
  if (GetArenaNoVirtual() == NULL && mesh_ != NULL) {
    delete mesh_;
  }
  mesh_ = NULL;
}

bool YItemMesh::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YItemMesh)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.YMat bake_mat = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bake_mat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YBaseMap map = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YMesh mesh = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mesh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.YMesh meshes = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_meshes()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YItemMesh)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YItemMesh)
  return false;
#undef DO_
}

void YItemMesh::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YItemMesh)
  // .y3d.YMat bake_mat = 1;
  if (this->has_bake_mat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bake_mat_, output);
  }

  // .y3d.YBaseMap map = 2;
  if (this->has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->map_, output);
  }

  // .y3d.YMesh mesh = 3;
  if (this->has_mesh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mesh_, output);
  }

  // repeated .y3d.YMesh meshes = 4;
  for (unsigned int i = 0, n = this->meshes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->meshes(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YItemMesh)
}

::google::protobuf::uint8* YItemMesh::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YItemMesh)
  // .y3d.YMat bake_mat = 1;
  if (this->has_bake_mat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->bake_mat_, false, target);
  }

  // .y3d.YBaseMap map = 2;
  if (this->has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->map_, false, target);
  }

  // .y3d.YMesh mesh = 3;
  if (this->has_mesh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->mesh_, false, target);
  }

  // repeated .y3d.YMesh meshes = 4;
  for (unsigned int i = 0, n = this->meshes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->meshes(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YItemMesh)
  return target;
}

size_t YItemMesh::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YItemMesh)
  size_t total_size = 0;

  // repeated .y3d.YMesh meshes = 4;
  {
    unsigned int count = this->meshes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->meshes(i));
    }
  }

  // .y3d.YMat bake_mat = 1;
  if (this->has_bake_mat()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bake_mat_);
  }

  // .y3d.YBaseMap map = 2;
  if (this->has_map()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->map_);
  }

  // .y3d.YMesh mesh = 3;
  if (this->has_mesh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mesh_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YItemMesh::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YItemMesh)
  GOOGLE_DCHECK_NE(&from, this);
  const YItemMesh* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YItemMesh>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YItemMesh)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YItemMesh)
    MergeFrom(*source);
  }
}

void YItemMesh::MergeFrom(const YItemMesh& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YItemMesh)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meshes_.MergeFrom(from.meshes_);
  if (from.has_bake_mat()) {
    mutable_bake_mat()->::y3d::YMat::MergeFrom(from.bake_mat());
  }
  if (from.has_map()) {
    mutable_map()->::y3d::YBaseMap::MergeFrom(from.map());
  }
  if (from.has_mesh()) {
    mutable_mesh()->::y3d::YMesh::MergeFrom(from.mesh());
  }
}

void YItemMesh::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YItemMesh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YItemMesh::CopyFrom(const YItemMesh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YItemMesh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YItemMesh::IsInitialized() const {
  return true;
}

void YItemMesh::Swap(YItemMesh* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YItemMesh::InternalSwap(YItemMesh* other) {
  meshes_.UnsafeArenaSwap(&other->meshes_);
  std::swap(bake_mat_, other->bake_mat_);
  std::swap(map_, other->map_);
  std::swap(mesh_, other->mesh_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YItemMesh::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[56];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YItemMesh

// .y3d.YMat bake_mat = 1;
bool YItemMesh::has_bake_mat() const {
  return this != internal_default_instance() && bake_mat_ != NULL;
}
void YItemMesh::clear_bake_mat() {
  if (GetArenaNoVirtual() == NULL && bake_mat_ != NULL) delete bake_mat_;
  bake_mat_ = NULL;
}
const ::y3d::YMat& YItemMesh::bake_mat() const {
  // @@protoc_insertion_point(field_get:y3d.YItemMesh.bake_mat)
  return bake_mat_ != NULL ? *bake_mat_
                         : *::y3d::YMat::internal_default_instance();
}
::y3d::YMat* YItemMesh::mutable_bake_mat() {
  
  if (bake_mat_ == NULL) {
    bake_mat_ = new ::y3d::YMat;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YItemMesh.bake_mat)
  return bake_mat_;
}
::y3d::YMat* YItemMesh::release_bake_mat() {
  // @@protoc_insertion_point(field_release:y3d.YItemMesh.bake_mat)
  
  ::y3d::YMat* temp = bake_mat_;
  bake_mat_ = NULL;
  return temp;
}
void YItemMesh::set_allocated_bake_mat(::y3d::YMat* bake_mat) {
  delete bake_mat_;
  bake_mat_ = bake_mat;
  if (bake_mat) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YItemMesh.bake_mat)
}

// .y3d.YBaseMap map = 2;
bool YItemMesh::has_map() const {
  return this != internal_default_instance() && map_ != NULL;
}
void YItemMesh::clear_map() {
  if (GetArenaNoVirtual() == NULL && map_ != NULL) delete map_;
  map_ = NULL;
}
const ::y3d::YBaseMap& YItemMesh::map() const {
  // @@protoc_insertion_point(field_get:y3d.YItemMesh.map)
  return map_ != NULL ? *map_
                         : *::y3d::YBaseMap::internal_default_instance();
}
::y3d::YBaseMap* YItemMesh::mutable_map() {
  
  if (map_ == NULL) {
    map_ = new ::y3d::YBaseMap;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YItemMesh.map)
  return map_;
}
::y3d::YBaseMap* YItemMesh::release_map() {
  // @@protoc_insertion_point(field_release:y3d.YItemMesh.map)
  
  ::y3d::YBaseMap* temp = map_;
  map_ = NULL;
  return temp;
}
void YItemMesh::set_allocated_map(::y3d::YBaseMap* map) {
  delete map_;
  map_ = map;
  if (map) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YItemMesh.map)
}

// .y3d.YMesh mesh = 3;
bool YItemMesh::has_mesh() const {
  return this != internal_default_instance() && mesh_ != NULL;
}
void YItemMesh::clear_mesh() {
  if (GetArenaNoVirtual() == NULL && mesh_ != NULL) delete mesh_;
  mesh_ = NULL;
}
const ::y3d::YMesh& YItemMesh::mesh() const {
  // @@protoc_insertion_point(field_get:y3d.YItemMesh.mesh)
  return mesh_ != NULL ? *mesh_
                         : *::y3d::YMesh::internal_default_instance();
}
::y3d::YMesh* YItemMesh::mutable_mesh() {
  
  if (mesh_ == NULL) {
    mesh_ = new ::y3d::YMesh;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YItemMesh.mesh)
  return mesh_;
}
::y3d::YMesh* YItemMesh::release_mesh() {
  // @@protoc_insertion_point(field_release:y3d.YItemMesh.mesh)
  
  ::y3d::YMesh* temp = mesh_;
  mesh_ = NULL;
  return temp;
}
void YItemMesh::set_allocated_mesh(::y3d::YMesh* mesh) {
  delete mesh_;
  mesh_ = mesh;
  if (mesh) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YItemMesh.mesh)
}

// repeated .y3d.YMesh meshes = 4;
int YItemMesh::meshes_size() const {
  return meshes_.size();
}
void YItemMesh::clear_meshes() {
  meshes_.Clear();
}
const ::y3d::YMesh& YItemMesh::meshes(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YItemMesh.meshes)
  return meshes_.Get(index);
}
::y3d::YMesh* YItemMesh::mutable_meshes(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YItemMesh.meshes)
  return meshes_.Mutable(index);
}
::y3d::YMesh* YItemMesh::add_meshes() {
  // @@protoc_insertion_point(field_add:y3d.YItemMesh.meshes)
  return meshes_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YMesh >*
YItemMesh::mutable_meshes() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YItemMesh.meshes)
  return &meshes_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YMesh >&
YItemMesh::meshes() const {
  // @@protoc_insertion_point(field_list:y3d.YItemMesh.meshes)
  return meshes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestObject::kActiveFieldNumber;
const int TestObject::kOriginalMatFieldNumber;
const int TestObject::kTnameFieldNumber;
const int TestObject::kOnameFieldNumber;
const int TestObject::kSavePathFieldNumber;
const int TestObject::kOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestObject::TestObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.TestObject)
}
TestObject::TestObject(const TestObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tname().size() > 0) {
    tname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tname_);
  }
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oname().size() > 0) {
    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  save_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.save_path().size() > 0) {
    save_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.save_path_);
  }
  if (from.has_original_mat()) {
    original_mat_ = new ::y3d::YMat(*from.original_mat_);
  } else {
    original_mat_ = NULL;
  }
  if (from.has_out()) {
    out_ = new ::y3d::YItemMesh(*from.out_);
  } else {
    out_ = NULL;
  }
  active_ = from.active_;
  // @@protoc_insertion_point(copy_constructor:y3d.TestObject)
}

void TestObject::SharedCtor() {
  tname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&original_mat_, 0, reinterpret_cast<char*>(&active_) -
    reinterpret_cast<char*>(&original_mat_) + sizeof(active_));
  _cached_size_ = 0;
}

TestObject::~TestObject() {
  // @@protoc_insertion_point(destructor:y3d.TestObject)
  SharedDtor();
}

void TestObject::SharedDtor() {
  tname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete original_mat_;
  }
  if (this != internal_default_instance()) {
    delete out_;
  }
}

void TestObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestObject::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[57].descriptor;
}

const TestObject& TestObject::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestObject* TestObject::New(::google::protobuf::Arena* arena) const {
  TestObject* n = new TestObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestObject::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.TestObject)
  tname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && original_mat_ != NULL) {
    delete original_mat_;
  }
  original_mat_ = NULL;
  if (GetArenaNoVirtual() == NULL && out_ != NULL) {
    delete out_;
  }
  out_ = NULL;
  active_ = false;
}

bool TestObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.TestObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool active = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YMat original_mat = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_original_mat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tname = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tname().data(), this->tname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.TestObject.tname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oname = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oname().data(), this->oname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.TestObject.oname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string save_path = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_save_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->save_path().data(), this->save_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.TestObject.save_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YItemMesh out = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.TestObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.TestObject)
  return false;
#undef DO_
}

void TestObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.TestObject)
  // bool active = 1;
  if (this->active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // .y3d.YMat original_mat = 2;
  if (this->has_original_mat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->original_mat_, output);
  }

  // string tname = 3;
  if (this->tname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tname().data(), this->tname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestObject.tname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tname(), output);
  }

  // string oname = 4;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestObject.oname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->oname(), output);
  }

  // string save_path = 9;
  if (this->save_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->save_path().data(), this->save_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestObject.save_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->save_path(), output);
  }

  // .y3d.YItemMesh out = 10;
  if (this->has_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->out_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.TestObject)
}

::google::protobuf::uint8* TestObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.TestObject)
  // bool active = 1;
  if (this->active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // .y3d.YMat original_mat = 2;
  if (this->has_original_mat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->original_mat_, false, target);
  }

  // string tname = 3;
  if (this->tname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tname().data(), this->tname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestObject.tname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tname(), target);
  }

  // string oname = 4;
  if (this->oname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oname().data(), this->oname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestObject.oname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->oname(), target);
  }

  // string save_path = 9;
  if (this->save_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->save_path().data(), this->save_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TestObject.save_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->save_path(), target);
  }

  // .y3d.YItemMesh out = 10;
  if (this->has_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->out_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.TestObject)
  return target;
}

size_t TestObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.TestObject)
  size_t total_size = 0;

  // string tname = 3;
  if (this->tname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tname());
  }

  // string oname = 4;
  if (this->oname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oname());
  }

  // string save_path = 9;
  if (this->save_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->save_path());
  }

  // .y3d.YMat original_mat = 2;
  if (this->has_original_mat()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->original_mat_);
  }

  // .y3d.YItemMesh out = 10;
  if (this->has_out()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->out_);
  }

  // bool active = 1;
  if (this->active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.TestObject)
  GOOGLE_DCHECK_NE(&from, this);
  const TestObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.TestObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.TestObject)
    MergeFrom(*source);
  }
}

void TestObject::MergeFrom(const TestObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.TestObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.tname().size() > 0) {

    tname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tname_);
  }
  if (from.oname().size() > 0) {

    oname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oname_);
  }
  if (from.save_path().size() > 0) {

    save_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.save_path_);
  }
  if (from.has_original_mat()) {
    mutable_original_mat()->::y3d::YMat::MergeFrom(from.original_mat());
  }
  if (from.has_out()) {
    mutable_out()->::y3d::YItemMesh::MergeFrom(from.out());
  }
  if (from.active() != 0) {
    set_active(from.active());
  }
}

void TestObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.TestObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestObject::CopyFrom(const TestObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.TestObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestObject::IsInitialized() const {
  return true;
}

void TestObject::Swap(TestObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestObject::InternalSwap(TestObject* other) {
  tname_.Swap(&other->tname_);
  oname_.Swap(&other->oname_);
  save_path_.Swap(&other->save_path_);
  std::swap(original_mat_, other->original_mat_);
  std::swap(out_, other->out_);
  std::swap(active_, other->active_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestObject::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[57];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestObject

// bool active = 1;
void TestObject::clear_active() {
  active_ = false;
}
bool TestObject::active() const {
  // @@protoc_insertion_point(field_get:y3d.TestObject.active)
  return active_;
}
void TestObject::set_active(bool value) {
  
  active_ = value;
  // @@protoc_insertion_point(field_set:y3d.TestObject.active)
}

// .y3d.YMat original_mat = 2;
bool TestObject::has_original_mat() const {
  return this != internal_default_instance() && original_mat_ != NULL;
}
void TestObject::clear_original_mat() {
  if (GetArenaNoVirtual() == NULL && original_mat_ != NULL) delete original_mat_;
  original_mat_ = NULL;
}
const ::y3d::YMat& TestObject::original_mat() const {
  // @@protoc_insertion_point(field_get:y3d.TestObject.original_mat)
  return original_mat_ != NULL ? *original_mat_
                         : *::y3d::YMat::internal_default_instance();
}
::y3d::YMat* TestObject::mutable_original_mat() {
  
  if (original_mat_ == NULL) {
    original_mat_ = new ::y3d::YMat;
  }
  // @@protoc_insertion_point(field_mutable:y3d.TestObject.original_mat)
  return original_mat_;
}
::y3d::YMat* TestObject::release_original_mat() {
  // @@protoc_insertion_point(field_release:y3d.TestObject.original_mat)
  
  ::y3d::YMat* temp = original_mat_;
  original_mat_ = NULL;
  return temp;
}
void TestObject::set_allocated_original_mat(::y3d::YMat* original_mat) {
  delete original_mat_;
  original_mat_ = original_mat;
  if (original_mat) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.TestObject.original_mat)
}

// string tname = 3;
void TestObject::clear_tname() {
  tname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TestObject::tname() const {
  // @@protoc_insertion_point(field_get:y3d.TestObject.tname)
  return tname_.GetNoArena();
}
void TestObject::set_tname(const ::std::string& value) {
  
  tname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.TestObject.tname)
}
#if LANG_CXX11
void TestObject::set_tname(::std::string&& value) {
  
  tname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.TestObject.tname)
}
#endif
void TestObject::set_tname(const char* value) {
  
  tname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.TestObject.tname)
}
void TestObject::set_tname(const char* value, size_t size) {
  
  tname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.TestObject.tname)
}
::std::string* TestObject::mutable_tname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.TestObject.tname)
  return tname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestObject::release_tname() {
  // @@protoc_insertion_point(field_release:y3d.TestObject.tname)
  
  return tname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestObject::set_allocated_tname(::std::string* tname) {
  if (tname != NULL) {
    
  } else {
    
  }
  tname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tname);
  // @@protoc_insertion_point(field_set_allocated:y3d.TestObject.tname)
}

// string oname = 4;
void TestObject::clear_oname() {
  oname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TestObject::oname() const {
  // @@protoc_insertion_point(field_get:y3d.TestObject.oname)
  return oname_.GetNoArena();
}
void TestObject::set_oname(const ::std::string& value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.TestObject.oname)
}
#if LANG_CXX11
void TestObject::set_oname(::std::string&& value) {
  
  oname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.TestObject.oname)
}
#endif
void TestObject::set_oname(const char* value) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.TestObject.oname)
}
void TestObject::set_oname(const char* value, size_t size) {
  
  oname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.TestObject.oname)
}
::std::string* TestObject::mutable_oname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.TestObject.oname)
  return oname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestObject::release_oname() {
  // @@protoc_insertion_point(field_release:y3d.TestObject.oname)
  
  return oname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestObject::set_allocated_oname(::std::string* oname) {
  if (oname != NULL) {
    
  } else {
    
  }
  oname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oname);
  // @@protoc_insertion_point(field_set_allocated:y3d.TestObject.oname)
}

// string save_path = 9;
void TestObject::clear_save_path() {
  save_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TestObject::save_path() const {
  // @@protoc_insertion_point(field_get:y3d.TestObject.save_path)
  return save_path_.GetNoArena();
}
void TestObject::set_save_path(const ::std::string& value) {
  
  save_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.TestObject.save_path)
}
#if LANG_CXX11
void TestObject::set_save_path(::std::string&& value) {
  
  save_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.TestObject.save_path)
}
#endif
void TestObject::set_save_path(const char* value) {
  
  save_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.TestObject.save_path)
}
void TestObject::set_save_path(const char* value, size_t size) {
  
  save_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.TestObject.save_path)
}
::std::string* TestObject::mutable_save_path() {
  
  // @@protoc_insertion_point(field_mutable:y3d.TestObject.save_path)
  return save_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestObject::release_save_path() {
  // @@protoc_insertion_point(field_release:y3d.TestObject.save_path)
  
  return save_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestObject::set_allocated_save_path(::std::string* save_path) {
  if (save_path != NULL) {
    
  } else {
    
  }
  save_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save_path);
  // @@protoc_insertion_point(field_set_allocated:y3d.TestObject.save_path)
}

// .y3d.YItemMesh out = 10;
bool TestObject::has_out() const {
  return this != internal_default_instance() && out_ != NULL;
}
void TestObject::clear_out() {
  if (GetArenaNoVirtual() == NULL && out_ != NULL) delete out_;
  out_ = NULL;
}
const ::y3d::YItemMesh& TestObject::out() const {
  // @@protoc_insertion_point(field_get:y3d.TestObject.out)
  return out_ != NULL ? *out_
                         : *::y3d::YItemMesh::internal_default_instance();
}
::y3d::YItemMesh* TestObject::mutable_out() {
  
  if (out_ == NULL) {
    out_ = new ::y3d::YItemMesh;
  }
  // @@protoc_insertion_point(field_mutable:y3d.TestObject.out)
  return out_;
}
::y3d::YItemMesh* TestObject::release_out() {
  // @@protoc_insertion_point(field_release:y3d.TestObject.out)
  
  ::y3d::YItemMesh* temp = out_;
  out_ = NULL;
  return temp;
}
void TestObject::set_allocated_out(::y3d::YItemMesh* out) {
  delete out_;
  out_ = out;
  if (out) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.TestObject.out)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YJob::kJnameFieldNumber;
const int YJob::kActFieldNumber;
const int YJob::kObjFieldNumber;
const int YJob::kObjsFieldNumber;
const int YJob::kOutFieldNumber;
const int YJob::kTestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YJob::YJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YJob)
}
YJob::YJob(const YJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      act_(from.act_),
      objs_(from.objs_),
      tests_(from.tests_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jname().size() > 0) {
    jname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jname_);
  }
  if (from.has_obj()) {
    obj_ = new ::y3d::YObject(*from.obj_);
  } else {
    obj_ = NULL;
  }
  if (from.has_out()) {
    out_ = new ::y3d::YItemMesh(*from.out_);
  } else {
    out_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:y3d.YJob)
}

void YJob::SharedCtor() {
  jname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&obj_, 0, reinterpret_cast<char*>(&out_) -
    reinterpret_cast<char*>(&obj_) + sizeof(out_));
  _cached_size_ = 0;
}

YJob::~YJob() {
  // @@protoc_insertion_point(destructor:y3d.YJob)
  SharedDtor();
}

void YJob::SharedDtor() {
  jname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete obj_;
  }
  if (this != internal_default_instance()) {
    delete out_;
  }
}

void YJob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YJob::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[58].descriptor;
}

const YJob& YJob::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YJob* YJob::New(::google::protobuf::Arena* arena) const {
  YJob* n = new YJob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YJob::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YJob)
  act_.Clear();
  objs_.Clear();
  tests_.Clear();
  jname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && obj_ != NULL) {
    delete obj_;
  }
  obj_ = NULL;
  if (GetArenaNoVirtual() == NULL && out_ != NULL) {
    delete out_;
  }
  out_ = NULL;
}

bool YJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YJob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string jname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jname().data(), this->jname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YJob.jname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.YJobAction act = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_act()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .y3d.YObject obj = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_obj()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.YObject objs = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .y3d.YItemMesh out = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.TestObject tests = 7;
      case 7: {
        if (tag == 58u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tests()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YJob)
  return false;
#undef DO_
}

void YJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YJob)
  // string jname = 1;
  if (this->jname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jname().data(), this->jname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YJob.jname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->jname(), output);
  }

  // repeated .y3d.YJobAction act = 2;
  for (unsigned int i = 0, n = this->act_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->act(i), output);
  }

  // .y3d.YObject obj = 3;
  if (this->has_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->obj_, output);
  }

  // repeated .y3d.YObject objs = 4;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->objs(i), output);
  }

  // .y3d.YItemMesh out = 5;
  if (this->has_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->out_, output);
  }

  // repeated .y3d.TestObject tests = 7;
  for (unsigned int i = 0, n = this->tests_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->tests(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YJob)
}

::google::protobuf::uint8* YJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YJob)
  // string jname = 1;
  if (this->jname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jname().data(), this->jname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YJob.jname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->jname(), target);
  }

  // repeated .y3d.YJobAction act = 2;
  for (unsigned int i = 0, n = this->act_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->act(i), false, target);
  }

  // .y3d.YObject obj = 3;
  if (this->has_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->obj_, false, target);
  }

  // repeated .y3d.YObject objs = 4;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->objs(i), false, target);
  }

  // .y3d.YItemMesh out = 5;
  if (this->has_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->out_, false, target);
  }

  // repeated .y3d.TestObject tests = 7;
  for (unsigned int i = 0, n = this->tests_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->tests(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YJob)
  return target;
}

size_t YJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YJob)
  size_t total_size = 0;

  // repeated .y3d.YJobAction act = 2;
  {
    unsigned int count = this->act_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->act(i));
    }
  }

  // repeated .y3d.YObject objs = 4;
  {
    unsigned int count = this->objs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objs(i));
    }
  }

  // repeated .y3d.TestObject tests = 7;
  {
    unsigned int count = this->tests_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tests(i));
    }
  }

  // string jname = 1;
  if (this->jname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jname());
  }

  // .y3d.YObject obj = 3;
  if (this->has_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->obj_);
  }

  // .y3d.YItemMesh out = 5;
  if (this->has_out()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->out_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YJob)
  GOOGLE_DCHECK_NE(&from, this);
  const YJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YJob)
    MergeFrom(*source);
  }
}

void YJob::MergeFrom(const YJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  act_.MergeFrom(from.act_);
  objs_.MergeFrom(from.objs_);
  tests_.MergeFrom(from.tests_);
  if (from.jname().size() > 0) {

    jname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jname_);
  }
  if (from.has_obj()) {
    mutable_obj()->::y3d::YObject::MergeFrom(from.obj());
  }
  if (from.has_out()) {
    mutable_out()->::y3d::YItemMesh::MergeFrom(from.out());
  }
}

void YJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YJob::CopyFrom(const YJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YJob::IsInitialized() const {
  return true;
}

void YJob::Swap(YJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YJob::InternalSwap(YJob* other) {
  act_.UnsafeArenaSwap(&other->act_);
  objs_.UnsafeArenaSwap(&other->objs_);
  tests_.UnsafeArenaSwap(&other->tests_);
  jname_.Swap(&other->jname_);
  std::swap(obj_, other->obj_);
  std::swap(out_, other->out_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YJob::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[58];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YJob

// string jname = 1;
void YJob::clear_jname() {
  jname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YJob::jname() const {
  // @@protoc_insertion_point(field_get:y3d.YJob.jname)
  return jname_.GetNoArena();
}
void YJob::set_jname(const ::std::string& value) {
  
  jname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YJob.jname)
}
#if LANG_CXX11
void YJob::set_jname(::std::string&& value) {
  
  jname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YJob.jname)
}
#endif
void YJob::set_jname(const char* value) {
  
  jname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YJob.jname)
}
void YJob::set_jname(const char* value, size_t size) {
  
  jname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YJob.jname)
}
::std::string* YJob::mutable_jname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YJob.jname)
  return jname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YJob::release_jname() {
  // @@protoc_insertion_point(field_release:y3d.YJob.jname)
  
  return jname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YJob::set_allocated_jname(::std::string* jname) {
  if (jname != NULL) {
    
  } else {
    
  }
  jname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jname);
  // @@protoc_insertion_point(field_set_allocated:y3d.YJob.jname)
}

// repeated .y3d.YJobAction act = 2;
int YJob::act_size() const {
  return act_.size();
}
void YJob::clear_act() {
  act_.Clear();
}
const ::y3d::YJobAction& YJob::act(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YJob.act)
  return act_.Get(index);
}
::y3d::YJobAction* YJob::mutable_act(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YJob.act)
  return act_.Mutable(index);
}
::y3d::YJobAction* YJob::add_act() {
  // @@protoc_insertion_point(field_add:y3d.YJob.act)
  return act_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YJobAction >*
YJob::mutable_act() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YJob.act)
  return &act_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YJobAction >&
YJob::act() const {
  // @@protoc_insertion_point(field_list:y3d.YJob.act)
  return act_;
}

// .y3d.YObject obj = 3;
bool YJob::has_obj() const {
  return this != internal_default_instance() && obj_ != NULL;
}
void YJob::clear_obj() {
  if (GetArenaNoVirtual() == NULL && obj_ != NULL) delete obj_;
  obj_ = NULL;
}
const ::y3d::YObject& YJob::obj() const {
  // @@protoc_insertion_point(field_get:y3d.YJob.obj)
  return obj_ != NULL ? *obj_
                         : *::y3d::YObject::internal_default_instance();
}
::y3d::YObject* YJob::mutable_obj() {
  
  if (obj_ == NULL) {
    obj_ = new ::y3d::YObject;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YJob.obj)
  return obj_;
}
::y3d::YObject* YJob::release_obj() {
  // @@protoc_insertion_point(field_release:y3d.YJob.obj)
  
  ::y3d::YObject* temp = obj_;
  obj_ = NULL;
  return temp;
}
void YJob::set_allocated_obj(::y3d::YObject* obj) {
  delete obj_;
  obj_ = obj;
  if (obj) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YJob.obj)
}

// repeated .y3d.YObject objs = 4;
int YJob::objs_size() const {
  return objs_.size();
}
void YJob::clear_objs() {
  objs_.Clear();
}
const ::y3d::YObject& YJob::objs(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YJob.objs)
  return objs_.Get(index);
}
::y3d::YObject* YJob::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YJob.objs)
  return objs_.Mutable(index);
}
::y3d::YObject* YJob::add_objs() {
  // @@protoc_insertion_point(field_add:y3d.YJob.objs)
  return objs_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YObject >*
YJob::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YJob.objs)
  return &objs_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YObject >&
YJob::objs() const {
  // @@protoc_insertion_point(field_list:y3d.YJob.objs)
  return objs_;
}

// .y3d.YItemMesh out = 5;
bool YJob::has_out() const {
  return this != internal_default_instance() && out_ != NULL;
}
void YJob::clear_out() {
  if (GetArenaNoVirtual() == NULL && out_ != NULL) delete out_;
  out_ = NULL;
}
const ::y3d::YItemMesh& YJob::out() const {
  // @@protoc_insertion_point(field_get:y3d.YJob.out)
  return out_ != NULL ? *out_
                         : *::y3d::YItemMesh::internal_default_instance();
}
::y3d::YItemMesh* YJob::mutable_out() {
  
  if (out_ == NULL) {
    out_ = new ::y3d::YItemMesh;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YJob.out)
  return out_;
}
::y3d::YItemMesh* YJob::release_out() {
  // @@protoc_insertion_point(field_release:y3d.YJob.out)
  
  ::y3d::YItemMesh* temp = out_;
  out_ = NULL;
  return temp;
}
void YJob::set_allocated_out(::y3d::YItemMesh* out) {
  delete out_;
  out_ = out;
  if (out) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YJob.out)
}

// repeated .y3d.TestObject tests = 7;
int YJob::tests_size() const {
  return tests_.size();
}
void YJob::clear_tests() {
  tests_.Clear();
}
const ::y3d::TestObject& YJob::tests(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YJob.tests)
  return tests_.Get(index);
}
::y3d::TestObject* YJob::mutable_tests(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YJob.tests)
  return tests_.Mutable(index);
}
::y3d::TestObject* YJob::add_tests() {
  // @@protoc_insertion_point(field_add:y3d.YJob.tests)
  return tests_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::TestObject >*
YJob::mutable_tests() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YJob.tests)
  return &tests_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::TestObject >&
YJob::tests() const {
  // @@protoc_insertion_point(field_list:y3d.YJob.tests)
  return tests_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YWorker::kWidFieldNumber;
const int YWorker::kWnameFieldNumber;
const int YWorker::kIpAddressFieldNumber;
const int YWorker::kAssetFolderFieldNumber;
const int YWorker::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YWorker::YWorker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YWorker)
}
YWorker::YWorker(const YWorker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  wname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wname().size() > 0) {
    wname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wname_);
  }
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_address().size() > 0) {
    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  asset_folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.asset_folder().size() > 0) {
    asset_folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_folder_);
  }
  ::memcpy(&wid_, &from.wid_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&wid_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:y3d.YWorker)
}

void YWorker::SharedCtor() {
  wname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&wid_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&wid_) + sizeof(status_));
  _cached_size_ = 0;
}

YWorker::~YWorker() {
  // @@protoc_insertion_point(destructor:y3d.YWorker)
  SharedDtor();
}

void YWorker::SharedDtor() {
  wname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_folder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YWorker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YWorker::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[59].descriptor;
}

const YWorker& YWorker::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YWorker* YWorker::New(::google::protobuf::Arena* arena) const {
  YWorker* n = new YWorker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YWorker::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YWorker)
  wname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&wid_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&wid_) + sizeof(status_));
}

bool YWorker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YWorker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 wid = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wname = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wname().data(), this->wname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YWorker.wname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_address = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), this->ip_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YWorker.ip_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string asset_folder = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_asset_folder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->asset_folder().data(), this->asset_folder().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YWorker.asset_folder"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YWorker.ServingStatus status = 5;
      case 5: {
        if (tag == 40u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::y3d::YWorker_ServingStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YWorker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YWorker)
  return false;
#undef DO_
}

void YWorker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YWorker)
  // int32 wid = 1;
  if (this->wid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wid(), output);
  }

  // string wname = 2;
  if (this->wname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wname().data(), this->wname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YWorker.wname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->wname(), output);
  }

  // string ip_address = 3;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YWorker.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip_address(), output);
  }

  // string asset_folder = 4;
  if (this->asset_folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asset_folder().data(), this->asset_folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YWorker.asset_folder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->asset_folder(), output);
  }

  // .y3d.YWorker.ServingStatus status = 5;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YWorker)
}

::google::protobuf::uint8* YWorker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YWorker)
  // int32 wid = 1;
  if (this->wid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wid(), target);
  }

  // string wname = 2;
  if (this->wname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wname().data(), this->wname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YWorker.wname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->wname(), target);
  }

  // string ip_address = 3;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YWorker.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip_address(), target);
  }

  // string asset_folder = 4;
  if (this->asset_folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asset_folder().data(), this->asset_folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YWorker.asset_folder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->asset_folder(), target);
  }

  // .y3d.YWorker.ServingStatus status = 5;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YWorker)
  return target;
}

size_t YWorker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YWorker)
  size_t total_size = 0;

  // string wname = 2;
  if (this->wname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wname());
  }

  // string ip_address = 3;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  // string asset_folder = 4;
  if (this->asset_folder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asset_folder());
  }

  // int32 wid = 1;
  if (this->wid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wid());
  }

  // .y3d.YWorker.ServingStatus status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YWorker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YWorker)
  GOOGLE_DCHECK_NE(&from, this);
  const YWorker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YWorker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YWorker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YWorker)
    MergeFrom(*source);
  }
}

void YWorker::MergeFrom(const YWorker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YWorker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.wname().size() > 0) {

    wname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wname_);
  }
  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  if (from.asset_folder().size() > 0) {

    asset_folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_folder_);
  }
  if (from.wid() != 0) {
    set_wid(from.wid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void YWorker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YWorker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YWorker::CopyFrom(const YWorker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YWorker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YWorker::IsInitialized() const {
  return true;
}

void YWorker::Swap(YWorker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YWorker::InternalSwap(YWorker* other) {
  wname_.Swap(&other->wname_);
  ip_address_.Swap(&other->ip_address_);
  asset_folder_.Swap(&other->asset_folder_);
  std::swap(wid_, other->wid_);
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YWorker::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[59];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YWorker

// int32 wid = 1;
void YWorker::clear_wid() {
  wid_ = 0;
}
::google::protobuf::int32 YWorker::wid() const {
  // @@protoc_insertion_point(field_get:y3d.YWorker.wid)
  return wid_;
}
void YWorker::set_wid(::google::protobuf::int32 value) {
  
  wid_ = value;
  // @@protoc_insertion_point(field_set:y3d.YWorker.wid)
}

// string wname = 2;
void YWorker::clear_wname() {
  wname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YWorker::wname() const {
  // @@protoc_insertion_point(field_get:y3d.YWorker.wname)
  return wname_.GetNoArena();
}
void YWorker::set_wname(const ::std::string& value) {
  
  wname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YWorker.wname)
}
#if LANG_CXX11
void YWorker::set_wname(::std::string&& value) {
  
  wname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YWorker.wname)
}
#endif
void YWorker::set_wname(const char* value) {
  
  wname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YWorker.wname)
}
void YWorker::set_wname(const char* value, size_t size) {
  
  wname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YWorker.wname)
}
::std::string* YWorker::mutable_wname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YWorker.wname)
  return wname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YWorker::release_wname() {
  // @@protoc_insertion_point(field_release:y3d.YWorker.wname)
  
  return wname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YWorker::set_allocated_wname(::std::string* wname) {
  if (wname != NULL) {
    
  } else {
    
  }
  wname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wname);
  // @@protoc_insertion_point(field_set_allocated:y3d.YWorker.wname)
}

// string ip_address = 3;
void YWorker::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YWorker::ip_address() const {
  // @@protoc_insertion_point(field_get:y3d.YWorker.ip_address)
  return ip_address_.GetNoArena();
}
void YWorker::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YWorker.ip_address)
}
#if LANG_CXX11
void YWorker::set_ip_address(::std::string&& value) {
  
  ip_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YWorker.ip_address)
}
#endif
void YWorker::set_ip_address(const char* value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YWorker.ip_address)
}
void YWorker::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YWorker.ip_address)
}
::std::string* YWorker::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YWorker.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YWorker::release_ip_address() {
  // @@protoc_insertion_point(field_release:y3d.YWorker.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YWorker::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:y3d.YWorker.ip_address)
}

// string asset_folder = 4;
void YWorker::clear_asset_folder() {
  asset_folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YWorker::asset_folder() const {
  // @@protoc_insertion_point(field_get:y3d.YWorker.asset_folder)
  return asset_folder_.GetNoArena();
}
void YWorker::set_asset_folder(const ::std::string& value) {
  
  asset_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YWorker.asset_folder)
}
#if LANG_CXX11
void YWorker::set_asset_folder(::std::string&& value) {
  
  asset_folder_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YWorker.asset_folder)
}
#endif
void YWorker::set_asset_folder(const char* value) {
  
  asset_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YWorker.asset_folder)
}
void YWorker::set_asset_folder(const char* value, size_t size) {
  
  asset_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YWorker.asset_folder)
}
::std::string* YWorker::mutable_asset_folder() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YWorker.asset_folder)
  return asset_folder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YWorker::release_asset_folder() {
  // @@protoc_insertion_point(field_release:y3d.YWorker.asset_folder)
  
  return asset_folder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YWorker::set_allocated_asset_folder(::std::string* asset_folder) {
  if (asset_folder != NULL) {
    
  } else {
    
  }
  asset_folder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asset_folder);
  // @@protoc_insertion_point(field_set_allocated:y3d.YWorker.asset_folder)
}

// .y3d.YWorker.ServingStatus status = 5;
void YWorker::clear_status() {
  status_ = 0;
}
::y3d::YWorker_ServingStatus YWorker::status() const {
  // @@protoc_insertion_point(field_get:y3d.YWorker.status)
  return static_cast< ::y3d::YWorker_ServingStatus >(status_);
}
void YWorker::set_status(::y3d::YWorker_ServingStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:y3d.YWorker.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YWorkerList::kMasterFieldNumber;
const int YWorkerList::kWorkersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YWorkerList::YWorkerList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YWorkerList)
}
YWorkerList::YWorkerList(const YWorkerList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      workers_(from.workers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_master()) {
    master_ = new ::y3d::YWorker(*from.master_);
  } else {
    master_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:y3d.YWorkerList)
}

void YWorkerList::SharedCtor() {
  master_ = NULL;
  _cached_size_ = 0;
}

YWorkerList::~YWorkerList() {
  // @@protoc_insertion_point(destructor:y3d.YWorkerList)
  SharedDtor();
}

void YWorkerList::SharedDtor() {
  if (this != internal_default_instance()) {
    delete master_;
  }
}

void YWorkerList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YWorkerList::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[60].descriptor;
}

const YWorkerList& YWorkerList::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YWorkerList* YWorkerList::New(::google::protobuf::Arena* arena) const {
  YWorkerList* n = new YWorkerList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YWorkerList::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YWorkerList)
  workers_.Clear();
  if (GetArenaNoVirtual() == NULL && master_ != NULL) {
    delete master_;
  }
  master_ = NULL;
}

bool YWorkerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YWorkerList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.YWorker master = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_master()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.YWorker workers = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_workers()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YWorkerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YWorkerList)
  return false;
#undef DO_
}

void YWorkerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YWorkerList)
  // .y3d.YWorker master = 1;
  if (this->has_master()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->master_, output);
  }

  // repeated .y3d.YWorker workers = 2;
  for (unsigned int i = 0, n = this->workers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->workers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YWorkerList)
}

::google::protobuf::uint8* YWorkerList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YWorkerList)
  // .y3d.YWorker master = 1;
  if (this->has_master()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->master_, false, target);
  }

  // repeated .y3d.YWorker workers = 2;
  for (unsigned int i = 0, n = this->workers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->workers(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YWorkerList)
  return target;
}

size_t YWorkerList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YWorkerList)
  size_t total_size = 0;

  // repeated .y3d.YWorker workers = 2;
  {
    unsigned int count = this->workers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workers(i));
    }
  }

  // .y3d.YWorker master = 1;
  if (this->has_master()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->master_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YWorkerList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YWorkerList)
  GOOGLE_DCHECK_NE(&from, this);
  const YWorkerList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YWorkerList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YWorkerList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YWorkerList)
    MergeFrom(*source);
  }
}

void YWorkerList::MergeFrom(const YWorkerList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YWorkerList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  workers_.MergeFrom(from.workers_);
  if (from.has_master()) {
    mutable_master()->::y3d::YWorker::MergeFrom(from.master());
  }
}

void YWorkerList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YWorkerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YWorkerList::CopyFrom(const YWorkerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YWorkerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YWorkerList::IsInitialized() const {
  return true;
}

void YWorkerList::Swap(YWorkerList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YWorkerList::InternalSwap(YWorkerList* other) {
  workers_.UnsafeArenaSwap(&other->workers_);
  std::swap(master_, other->master_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YWorkerList::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[60];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YWorkerList

// .y3d.YWorker master = 1;
bool YWorkerList::has_master() const {
  return this != internal_default_instance() && master_ != NULL;
}
void YWorkerList::clear_master() {
  if (GetArenaNoVirtual() == NULL && master_ != NULL) delete master_;
  master_ = NULL;
}
const ::y3d::YWorker& YWorkerList::master() const {
  // @@protoc_insertion_point(field_get:y3d.YWorkerList.master)
  return master_ != NULL ? *master_
                         : *::y3d::YWorker::internal_default_instance();
}
::y3d::YWorker* YWorkerList::mutable_master() {
  
  if (master_ == NULL) {
    master_ = new ::y3d::YWorker;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YWorkerList.master)
  return master_;
}
::y3d::YWorker* YWorkerList::release_master() {
  // @@protoc_insertion_point(field_release:y3d.YWorkerList.master)
  
  ::y3d::YWorker* temp = master_;
  master_ = NULL;
  return temp;
}
void YWorkerList::set_allocated_master(::y3d::YWorker* master) {
  delete master_;
  master_ = master;
  if (master) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YWorkerList.master)
}

// repeated .y3d.YWorker workers = 2;
int YWorkerList::workers_size() const {
  return workers_.size();
}
void YWorkerList::clear_workers() {
  workers_.Clear();
}
const ::y3d::YWorker& YWorkerList::workers(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YWorkerList.workers)
  return workers_.Get(index);
}
::y3d::YWorker* YWorkerList::mutable_workers(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YWorkerList.workers)
  return workers_.Mutable(index);
}
::y3d::YWorker* YWorkerList::add_workers() {
  // @@protoc_insertion_point(field_add:y3d.YWorkerList.workers)
  return workers_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YWorker >*
YWorkerList::mutable_workers() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YWorkerList.workers)
  return &workers_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YWorker >&
YWorkerList::workers() const {
  // @@protoc_insertion_point(field_list:y3d.YWorkerList.workers)
  return workers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YWorkerRequest::kCallInAppFieldNumber;
const int YWorkerRequest::kSlientFieldNumber;
const int YWorkerRequest::kAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YWorkerRequest::YWorkerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YWorkerRequest)
}
YWorkerRequest::YWorkerRequest(const YWorkerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_app()) {
    app_ = new ::y3d::WorkerApp(*from.app_);
  } else {
    app_ = NULL;
  }
  ::memcpy(&call_in_app_, &from.call_in_app_,
    reinterpret_cast<char*>(&slient_) -
    reinterpret_cast<char*>(&call_in_app_) + sizeof(slient_));
  // @@protoc_insertion_point(copy_constructor:y3d.YWorkerRequest)
}

void YWorkerRequest::SharedCtor() {
  ::memset(&app_, 0, reinterpret_cast<char*>(&slient_) -
    reinterpret_cast<char*>(&app_) + sizeof(slient_));
  _cached_size_ = 0;
}

YWorkerRequest::~YWorkerRequest() {
  // @@protoc_insertion_point(destructor:y3d.YWorkerRequest)
  SharedDtor();
}

void YWorkerRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete app_;
  }
}

void YWorkerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YWorkerRequest::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[61].descriptor;
}

const YWorkerRequest& YWorkerRequest::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YWorkerRequest* YWorkerRequest::New(::google::protobuf::Arena* arena) const {
  YWorkerRequest* n = new YWorkerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YWorkerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YWorkerRequest)
  if (GetArenaNoVirtual() == NULL && app_ != NULL) {
    delete app_;
  }
  app_ = NULL;
  ::memset(&call_in_app_, 0, reinterpret_cast<char*>(&slient_) -
    reinterpret_cast<char*>(&call_in_app_) + sizeof(slient_));
}

bool YWorkerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YWorkerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool call_in_app = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &call_in_app_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool slient = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &slient_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.WorkerApp app = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_app()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YWorkerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YWorkerRequest)
  return false;
#undef DO_
}

void YWorkerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YWorkerRequest)
  // bool call_in_app = 1;
  if (this->call_in_app() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->call_in_app(), output);
  }

  // bool slient = 2;
  if (this->slient() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->slient(), output);
  }

  // .y3d.WorkerApp app = 3;
  if (this->has_app()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->app_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YWorkerRequest)
}

::google::protobuf::uint8* YWorkerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YWorkerRequest)
  // bool call_in_app = 1;
  if (this->call_in_app() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->call_in_app(), target);
  }

  // bool slient = 2;
  if (this->slient() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->slient(), target);
  }

  // .y3d.WorkerApp app = 3;
  if (this->has_app()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->app_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YWorkerRequest)
  return target;
}

size_t YWorkerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YWorkerRequest)
  size_t total_size = 0;

  // .y3d.WorkerApp app = 3;
  if (this->has_app()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->app_);
  }

  // bool call_in_app = 1;
  if (this->call_in_app() != 0) {
    total_size += 1 + 1;
  }

  // bool slient = 2;
  if (this->slient() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YWorkerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YWorkerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YWorkerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YWorkerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YWorkerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YWorkerRequest)
    MergeFrom(*source);
  }
}

void YWorkerRequest::MergeFrom(const YWorkerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YWorkerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_app()) {
    mutable_app()->::y3d::WorkerApp::MergeFrom(from.app());
  }
  if (from.call_in_app() != 0) {
    set_call_in_app(from.call_in_app());
  }
  if (from.slient() != 0) {
    set_slient(from.slient());
  }
}

void YWorkerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YWorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YWorkerRequest::CopyFrom(const YWorkerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YWorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YWorkerRequest::IsInitialized() const {
  return true;
}

void YWorkerRequest::Swap(YWorkerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YWorkerRequest::InternalSwap(YWorkerRequest* other) {
  std::swap(app_, other->app_);
  std::swap(call_in_app_, other->call_in_app_);
  std::swap(slient_, other->slient_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YWorkerRequest::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[61];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YWorkerRequest

// bool call_in_app = 1;
void YWorkerRequest::clear_call_in_app() {
  call_in_app_ = false;
}
bool YWorkerRequest::call_in_app() const {
  // @@protoc_insertion_point(field_get:y3d.YWorkerRequest.call_in_app)
  return call_in_app_;
}
void YWorkerRequest::set_call_in_app(bool value) {
  
  call_in_app_ = value;
  // @@protoc_insertion_point(field_set:y3d.YWorkerRequest.call_in_app)
}

// bool slient = 2;
void YWorkerRequest::clear_slient() {
  slient_ = false;
}
bool YWorkerRequest::slient() const {
  // @@protoc_insertion_point(field_get:y3d.YWorkerRequest.slient)
  return slient_;
}
void YWorkerRequest::set_slient(bool value) {
  
  slient_ = value;
  // @@protoc_insertion_point(field_set:y3d.YWorkerRequest.slient)
}

// .y3d.WorkerApp app = 3;
bool YWorkerRequest::has_app() const {
  return this != internal_default_instance() && app_ != NULL;
}
void YWorkerRequest::clear_app() {
  if (GetArenaNoVirtual() == NULL && app_ != NULL) delete app_;
  app_ = NULL;
}
const ::y3d::WorkerApp& YWorkerRequest::app() const {
  // @@protoc_insertion_point(field_get:y3d.YWorkerRequest.app)
  return app_ != NULL ? *app_
                         : *::y3d::WorkerApp::internal_default_instance();
}
::y3d::WorkerApp* YWorkerRequest::mutable_app() {
  
  if (app_ == NULL) {
    app_ = new ::y3d::WorkerApp;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YWorkerRequest.app)
  return app_;
}
::y3d::WorkerApp* YWorkerRequest::release_app() {
  // @@protoc_insertion_point(field_release:y3d.YWorkerRequest.app)
  
  ::y3d::WorkerApp* temp = app_;
  app_ = NULL;
  return temp;
}
void YWorkerRequest::set_allocated_app(::y3d::WorkerApp* app) {
  delete app_;
  app_ = app;
  if (app) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YWorkerRequest.app)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkerApp::kWnameFieldNumber;
const int WorkerApp::kPathRunFieldNumber;
const int WorkerApp::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkerApp::WorkerApp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.WorkerApp)
}
WorkerApp::WorkerApp(const WorkerApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  wname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wname().size() > 0) {
    wname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wname_);
  }
  path_run_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path_run().size() > 0) {
    path_run_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_run_);
  }
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra().size() > 0) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  // @@protoc_insertion_point(copy_constructor:y3d.WorkerApp)
}

void WorkerApp::SharedCtor() {
  wname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_run_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

WorkerApp::~WorkerApp() {
  // @@protoc_insertion_point(destructor:y3d.WorkerApp)
  SharedDtor();
}

void WorkerApp::SharedDtor() {
  wname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_run_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WorkerApp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkerApp::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[62].descriptor;
}

const WorkerApp& WorkerApp::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorkerApp* WorkerApp::New(::google::protobuf::Arena* arena) const {
  WorkerApp* n = new WorkerApp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkerApp::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.WorkerApp)
  wname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_run_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool WorkerApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.WorkerApp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string wname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wname().data(), this->wname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.WorkerApp.wname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path_run = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path_run()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path_run().data(), this->path_run().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.WorkerApp.path_run"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extra = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extra()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extra().data(), this->extra().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.WorkerApp.extra"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.WorkerApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.WorkerApp)
  return false;
#undef DO_
}

void WorkerApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.WorkerApp)
  // string wname = 1;
  if (this->wname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wname().data(), this->wname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.WorkerApp.wname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->wname(), output);
  }

  // string path_run = 2;
  if (this->path_run().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path_run().data(), this->path_run().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.WorkerApp.path_run");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path_run(), output);
  }

  // string extra = 3;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra().data(), this->extra().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.WorkerApp.extra");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->extra(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.WorkerApp)
}

::google::protobuf::uint8* WorkerApp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.WorkerApp)
  // string wname = 1;
  if (this->wname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wname().data(), this->wname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.WorkerApp.wname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->wname(), target);
  }

  // string path_run = 2;
  if (this->path_run().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path_run().data(), this->path_run().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.WorkerApp.path_run");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path_run(), target);
  }

  // string extra = 3;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra().data(), this->extra().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.WorkerApp.extra");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->extra(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.WorkerApp)
  return target;
}

size_t WorkerApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.WorkerApp)
  size_t total_size = 0;

  // string wname = 1;
  if (this->wname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wname());
  }

  // string path_run = 2;
  if (this->path_run().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path_run());
  }

  // string extra = 3;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extra());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkerApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.WorkerApp)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerApp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkerApp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.WorkerApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.WorkerApp)
    MergeFrom(*source);
  }
}

void WorkerApp::MergeFrom(const WorkerApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.WorkerApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.wname().size() > 0) {

    wname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wname_);
  }
  if (from.path_run().size() > 0) {

    path_run_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_run_);
  }
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
}

void WorkerApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.WorkerApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerApp::CopyFrom(const WorkerApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.WorkerApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerApp::IsInitialized() const {
  return true;
}

void WorkerApp::Swap(WorkerApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkerApp::InternalSwap(WorkerApp* other) {
  wname_.Swap(&other->wname_);
  path_run_.Swap(&other->path_run_);
  extra_.Swap(&other->extra_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkerApp::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[62];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorkerApp

// string wname = 1;
void WorkerApp::clear_wname() {
  wname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WorkerApp::wname() const {
  // @@protoc_insertion_point(field_get:y3d.WorkerApp.wname)
  return wname_.GetNoArena();
}
void WorkerApp::set_wname(const ::std::string& value) {
  
  wname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.WorkerApp.wname)
}
#if LANG_CXX11
void WorkerApp::set_wname(::std::string&& value) {
  
  wname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.WorkerApp.wname)
}
#endif
void WorkerApp::set_wname(const char* value) {
  
  wname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.WorkerApp.wname)
}
void WorkerApp::set_wname(const char* value, size_t size) {
  
  wname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.WorkerApp.wname)
}
::std::string* WorkerApp::mutable_wname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.WorkerApp.wname)
  return wname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WorkerApp::release_wname() {
  // @@protoc_insertion_point(field_release:y3d.WorkerApp.wname)
  
  return wname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WorkerApp::set_allocated_wname(::std::string* wname) {
  if (wname != NULL) {
    
  } else {
    
  }
  wname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wname);
  // @@protoc_insertion_point(field_set_allocated:y3d.WorkerApp.wname)
}

// string path_run = 2;
void WorkerApp::clear_path_run() {
  path_run_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WorkerApp::path_run() const {
  // @@protoc_insertion_point(field_get:y3d.WorkerApp.path_run)
  return path_run_.GetNoArena();
}
void WorkerApp::set_path_run(const ::std::string& value) {
  
  path_run_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.WorkerApp.path_run)
}
#if LANG_CXX11
void WorkerApp::set_path_run(::std::string&& value) {
  
  path_run_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.WorkerApp.path_run)
}
#endif
void WorkerApp::set_path_run(const char* value) {
  
  path_run_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.WorkerApp.path_run)
}
void WorkerApp::set_path_run(const char* value, size_t size) {
  
  path_run_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.WorkerApp.path_run)
}
::std::string* WorkerApp::mutable_path_run() {
  
  // @@protoc_insertion_point(field_mutable:y3d.WorkerApp.path_run)
  return path_run_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WorkerApp::release_path_run() {
  // @@protoc_insertion_point(field_release:y3d.WorkerApp.path_run)
  
  return path_run_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WorkerApp::set_allocated_path_run(::std::string* path_run) {
  if (path_run != NULL) {
    
  } else {
    
  }
  path_run_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path_run);
  // @@protoc_insertion_point(field_set_allocated:y3d.WorkerApp.path_run)
}

// string extra = 3;
void WorkerApp::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WorkerApp::extra() const {
  // @@protoc_insertion_point(field_get:y3d.WorkerApp.extra)
  return extra_.GetNoArena();
}
void WorkerApp::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.WorkerApp.extra)
}
#if LANG_CXX11
void WorkerApp::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.WorkerApp.extra)
}
#endif
void WorkerApp::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.WorkerApp.extra)
}
void WorkerApp::set_extra(const char* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.WorkerApp.extra)
}
::std::string* WorkerApp::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:y3d.WorkerApp.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WorkerApp::release_extra() {
  // @@protoc_insertion_point(field_release:y3d.WorkerApp.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WorkerApp::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:y3d.WorkerApp.extra)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YWorkerResponse::kWlistFieldNumber;
const int YWorkerResponse::kNewWorkerFieldNumber;
const int YWorkerResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YWorkerResponse::YWorkerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YWorkerResponse)
}
YWorkerResponse::YWorkerResponse(const YWorkerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_wlist()) {
    wlist_ = new ::y3d::YWorkerList(*from.wlist_);
  } else {
    wlist_ = NULL;
  }
  if (from.has_new_worker()) {
    new_worker_ = new ::y3d::YWorker(*from.new_worker_);
  } else {
    new_worker_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:y3d.YWorkerResponse)
}

void YWorkerResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&wlist_, 0, reinterpret_cast<char*>(&new_worker_) -
    reinterpret_cast<char*>(&wlist_) + sizeof(new_worker_));
  _cached_size_ = 0;
}

YWorkerResponse::~YWorkerResponse() {
  // @@protoc_insertion_point(destructor:y3d.YWorkerResponse)
  SharedDtor();
}

void YWorkerResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete wlist_;
  }
  if (this != internal_default_instance()) {
    delete new_worker_;
  }
}

void YWorkerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YWorkerResponse::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[63].descriptor;
}

const YWorkerResponse& YWorkerResponse::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YWorkerResponse* YWorkerResponse::New(::google::protobuf::Arena* arena) const {
  YWorkerResponse* n = new YWorkerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YWorkerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YWorkerResponse)
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && wlist_ != NULL) {
    delete wlist_;
  }
  wlist_ = NULL;
  if (GetArenaNoVirtual() == NULL && new_worker_ != NULL) {
    delete new_worker_;
  }
  new_worker_ = NULL;
}

bool YWorkerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YWorkerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.YWorkerList wlist = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.YWorker new_worker = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_new_worker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YWorkerResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YWorkerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YWorkerResponse)
  return false;
#undef DO_
}

void YWorkerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YWorkerResponse)
  // .y3d.YWorkerList wlist = 1;
  if (this->has_wlist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->wlist_, output);
  }

  // .y3d.YWorker new_worker = 2;
  if (this->has_new_worker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->new_worker_, output);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YWorkerResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YWorkerResponse)
}

::google::protobuf::uint8* YWorkerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YWorkerResponse)
  // .y3d.YWorkerList wlist = 1;
  if (this->has_wlist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->wlist_, false, target);
  }

  // .y3d.YWorker new_worker = 2;
  if (this->has_new_worker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->new_worker_, false, target);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YWorkerResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YWorkerResponse)
  return target;
}

size_t YWorkerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YWorkerResponse)
  size_t total_size = 0;

  // string error = 3;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .y3d.YWorkerList wlist = 1;
  if (this->has_wlist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->wlist_);
  }

  // .y3d.YWorker new_worker = 2;
  if (this->has_new_worker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->new_worker_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YWorkerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YWorkerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YWorkerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YWorkerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YWorkerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YWorkerResponse)
    MergeFrom(*source);
  }
}

void YWorkerResponse::MergeFrom(const YWorkerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YWorkerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_wlist()) {
    mutable_wlist()->::y3d::YWorkerList::MergeFrom(from.wlist());
  }
  if (from.has_new_worker()) {
    mutable_new_worker()->::y3d::YWorker::MergeFrom(from.new_worker());
  }
}

void YWorkerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YWorkerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YWorkerResponse::CopyFrom(const YWorkerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YWorkerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YWorkerResponse::IsInitialized() const {
  return true;
}

void YWorkerResponse::Swap(YWorkerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YWorkerResponse::InternalSwap(YWorkerResponse* other) {
  error_.Swap(&other->error_);
  std::swap(wlist_, other->wlist_);
  std::swap(new_worker_, other->new_worker_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YWorkerResponse::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[63];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YWorkerResponse

// .y3d.YWorkerList wlist = 1;
bool YWorkerResponse::has_wlist() const {
  return this != internal_default_instance() && wlist_ != NULL;
}
void YWorkerResponse::clear_wlist() {
  if (GetArenaNoVirtual() == NULL && wlist_ != NULL) delete wlist_;
  wlist_ = NULL;
}
const ::y3d::YWorkerList& YWorkerResponse::wlist() const {
  // @@protoc_insertion_point(field_get:y3d.YWorkerResponse.wlist)
  return wlist_ != NULL ? *wlist_
                         : *::y3d::YWorkerList::internal_default_instance();
}
::y3d::YWorkerList* YWorkerResponse::mutable_wlist() {
  
  if (wlist_ == NULL) {
    wlist_ = new ::y3d::YWorkerList;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YWorkerResponse.wlist)
  return wlist_;
}
::y3d::YWorkerList* YWorkerResponse::release_wlist() {
  // @@protoc_insertion_point(field_release:y3d.YWorkerResponse.wlist)
  
  ::y3d::YWorkerList* temp = wlist_;
  wlist_ = NULL;
  return temp;
}
void YWorkerResponse::set_allocated_wlist(::y3d::YWorkerList* wlist) {
  delete wlist_;
  wlist_ = wlist;
  if (wlist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YWorkerResponse.wlist)
}

// .y3d.YWorker new_worker = 2;
bool YWorkerResponse::has_new_worker() const {
  return this != internal_default_instance() && new_worker_ != NULL;
}
void YWorkerResponse::clear_new_worker() {
  if (GetArenaNoVirtual() == NULL && new_worker_ != NULL) delete new_worker_;
  new_worker_ = NULL;
}
const ::y3d::YWorker& YWorkerResponse::new_worker() const {
  // @@protoc_insertion_point(field_get:y3d.YWorkerResponse.new_worker)
  return new_worker_ != NULL ? *new_worker_
                         : *::y3d::YWorker::internal_default_instance();
}
::y3d::YWorker* YWorkerResponse::mutable_new_worker() {
  
  if (new_worker_ == NULL) {
    new_worker_ = new ::y3d::YWorker;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YWorkerResponse.new_worker)
  return new_worker_;
}
::y3d::YWorker* YWorkerResponse::release_new_worker() {
  // @@protoc_insertion_point(field_release:y3d.YWorkerResponse.new_worker)
  
  ::y3d::YWorker* temp = new_worker_;
  new_worker_ = NULL;
  return temp;
}
void YWorkerResponse::set_allocated_new_worker(::y3d::YWorker* new_worker) {
  delete new_worker_;
  new_worker_ = new_worker;
  if (new_worker) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YWorkerResponse.new_worker)
}

// string error = 3;
void YWorkerResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YWorkerResponse::error() const {
  // @@protoc_insertion_point(field_get:y3d.YWorkerResponse.error)
  return error_.GetNoArena();
}
void YWorkerResponse::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YWorkerResponse.error)
}
#if LANG_CXX11
void YWorkerResponse::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YWorkerResponse.error)
}
#endif
void YWorkerResponse::set_error(const char* value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YWorkerResponse.error)
}
void YWorkerResponse::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YWorkerResponse.error)
}
::std::string* YWorkerResponse::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YWorkerResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YWorkerResponse::release_error() {
  // @@protoc_insertion_point(field_release:y3d.YWorkerResponse.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YWorkerResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:y3d.YWorkerResponse.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YMasterServer::kMnameFieldNumber;
const int YMasterServer::kAddressFieldNumber;
const int YMasterServer::kPortFieldNumber;
const int YMasterServer::kSharedFolderFieldNumber;
const int YMasterServer::kMainWorkersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YMasterServer::YMasterServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_y3d_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YMasterServer)
}
YMasterServer::YMasterServer(const YMasterServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      main_workers_(from.main_workers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mname().size() > 0) {
    mname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mname_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  shared_folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shared_folder().size() > 0) {
    shared_folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_folder_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:y3d.YMasterServer)
}

void YMasterServer::SharedCtor() {
  mname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _cached_size_ = 0;
}

YMasterServer::~YMasterServer() {
  // @@protoc_insertion_point(destructor:y3d.YMasterServer)
  SharedDtor();
}

void YMasterServer::SharedDtor() {
  mname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_folder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YMasterServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YMasterServer::descriptor() {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[64].descriptor;
}

const YMasterServer& YMasterServer::default_instance() {
  protobuf_y3d_2eproto::InitDefaults();
  return *internal_default_instance();
}

YMasterServer* YMasterServer::New(::google::protobuf::Arena* arena) const {
  YMasterServer* n = new YMasterServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YMasterServer::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YMasterServer)
  main_workers_.Clear();
  mname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

bool YMasterServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YMasterServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mname().data(), this->mname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YMasterServer.mname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YMasterServer.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shared_folder = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shared_folder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shared_folder().data(), this->shared_folder().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YMasterServer.shared_folder"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.YWorker main_workers = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_main_workers()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // int32 port = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YMasterServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YMasterServer)
  return false;
#undef DO_
}

void YMasterServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YMasterServer)
  // string mname = 1;
  if (this->mname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mname().data(), this->mname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMasterServer.mname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mname(), output);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMasterServer.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  // string shared_folder = 3;
  if (this->shared_folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_folder().data(), this->shared_folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMasterServer.shared_folder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->shared_folder(), output);
  }

  // repeated .y3d.YWorker main_workers = 4;
  for (unsigned int i = 0, n = this->main_workers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->main_workers(i), output);
  }

  // int32 port = 5;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->port(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YMasterServer)
}

::google::protobuf::uint8* YMasterServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YMasterServer)
  // string mname = 1;
  if (this->mname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mname().data(), this->mname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMasterServer.mname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mname(), target);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMasterServer.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  // string shared_folder = 3;
  if (this->shared_folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_folder().data(), this->shared_folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMasterServer.shared_folder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->shared_folder(), target);
  }

  // repeated .y3d.YWorker main_workers = 4;
  for (unsigned int i = 0, n = this->main_workers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->main_workers(i), false, target);
  }

  // int32 port = 5;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YMasterServer)
  return target;
}

size_t YMasterServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YMasterServer)
  size_t total_size = 0;

  // repeated .y3d.YWorker main_workers = 4;
  {
    unsigned int count = this->main_workers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->main_workers(i));
    }
  }

  // string mname = 1;
  if (this->mname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mname());
  }

  // string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string shared_folder = 3;
  if (this->shared_folder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shared_folder());
  }

  // int32 port = 5;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YMasterServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YMasterServer)
  GOOGLE_DCHECK_NE(&from, this);
  const YMasterServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YMasterServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YMasterServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YMasterServer)
    MergeFrom(*source);
  }
}

void YMasterServer::MergeFrom(const YMasterServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YMasterServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  main_workers_.MergeFrom(from.main_workers_);
  if (from.mname().size() > 0) {

    mname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mname_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.shared_folder().size() > 0) {

    shared_folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_folder_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void YMasterServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YMasterServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YMasterServer::CopyFrom(const YMasterServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YMasterServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YMasterServer::IsInitialized() const {
  return true;
}

void YMasterServer::Swap(YMasterServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YMasterServer::InternalSwap(YMasterServer* other) {
  main_workers_.UnsafeArenaSwap(&other->main_workers_);
  mname_.Swap(&other->mname_);
  address_.Swap(&other->address_);
  shared_folder_.Swap(&other->shared_folder_);
  std::swap(port_, other->port_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YMasterServer::GetMetadata() const {
  protobuf_y3d_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_y3d_2eproto::file_level_metadata[64];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YMasterServer

// string mname = 1;
void YMasterServer::clear_mname() {
  mname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YMasterServer::mname() const {
  // @@protoc_insertion_point(field_get:y3d.YMasterServer.mname)
  return mname_.GetNoArena();
}
void YMasterServer::set_mname(const ::std::string& value) {
  
  mname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YMasterServer.mname)
}
#if LANG_CXX11
void YMasterServer::set_mname(::std::string&& value) {
  
  mname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YMasterServer.mname)
}
#endif
void YMasterServer::set_mname(const char* value) {
  
  mname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YMasterServer.mname)
}
void YMasterServer::set_mname(const char* value, size_t size) {
  
  mname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YMasterServer.mname)
}
::std::string* YMasterServer::mutable_mname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YMasterServer.mname)
  return mname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YMasterServer::release_mname() {
  // @@protoc_insertion_point(field_release:y3d.YMasterServer.mname)
  
  return mname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YMasterServer::set_allocated_mname(::std::string* mname) {
  if (mname != NULL) {
    
  } else {
    
  }
  mname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mname);
  // @@protoc_insertion_point(field_set_allocated:y3d.YMasterServer.mname)
}

// string address = 2;
void YMasterServer::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YMasterServer::address() const {
  // @@protoc_insertion_point(field_get:y3d.YMasterServer.address)
  return address_.GetNoArena();
}
void YMasterServer::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YMasterServer.address)
}
#if LANG_CXX11
void YMasterServer::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YMasterServer.address)
}
#endif
void YMasterServer::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YMasterServer.address)
}
void YMasterServer::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YMasterServer.address)
}
::std::string* YMasterServer::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YMasterServer.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YMasterServer::release_address() {
  // @@protoc_insertion_point(field_release:y3d.YMasterServer.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YMasterServer::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:y3d.YMasterServer.address)
}

// int32 port = 5;
void YMasterServer::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 YMasterServer::port() const {
  // @@protoc_insertion_point(field_get:y3d.YMasterServer.port)
  return port_;
}
void YMasterServer::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:y3d.YMasterServer.port)
}

// string shared_folder = 3;
void YMasterServer::clear_shared_folder() {
  shared_folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YMasterServer::shared_folder() const {
  // @@protoc_insertion_point(field_get:y3d.YMasterServer.shared_folder)
  return shared_folder_.GetNoArena();
}
void YMasterServer::set_shared_folder(const ::std::string& value) {
  
  shared_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YMasterServer.shared_folder)
}
#if LANG_CXX11
void YMasterServer::set_shared_folder(::std::string&& value) {
  
  shared_folder_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.YMasterServer.shared_folder)
}
#endif
void YMasterServer::set_shared_folder(const char* value) {
  
  shared_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YMasterServer.shared_folder)
}
void YMasterServer::set_shared_folder(const char* value, size_t size) {
  
  shared_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YMasterServer.shared_folder)
}
::std::string* YMasterServer::mutable_shared_folder() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YMasterServer.shared_folder)
  return shared_folder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YMasterServer::release_shared_folder() {
  // @@protoc_insertion_point(field_release:y3d.YMasterServer.shared_folder)
  
  return shared_folder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YMasterServer::set_allocated_shared_folder(::std::string* shared_folder) {
  if (shared_folder != NULL) {
    
  } else {
    
  }
  shared_folder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_folder);
  // @@protoc_insertion_point(field_set_allocated:y3d.YMasterServer.shared_folder)
}

// repeated .y3d.YWorker main_workers = 4;
int YMasterServer::main_workers_size() const {
  return main_workers_.size();
}
void YMasterServer::clear_main_workers() {
  main_workers_.Clear();
}
const ::y3d::YWorker& YMasterServer::main_workers(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YMasterServer.main_workers)
  return main_workers_.Get(index);
}
::y3d::YWorker* YMasterServer::mutable_main_workers(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YMasterServer.main_workers)
  return main_workers_.Mutable(index);
}
::y3d::YWorker* YMasterServer::add_main_workers() {
  // @@protoc_insertion_point(field_add:y3d.YMasterServer.main_workers)
  return main_workers_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YWorker >*
YMasterServer::mutable_main_workers() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YMasterServer.main_workers)
  return &main_workers_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YWorker >&
YMasterServer::main_workers() const {
  // @@protoc_insertion_point(field_list:y3d.YMasterServer.main_workers)
  return main_workers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace y3d

// @@protoc_insertion_point(global_scope)

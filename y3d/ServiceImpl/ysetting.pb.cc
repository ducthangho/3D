// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ysetting.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ysetting.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace y3d {
class CustomAttrDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CustomAttr> {
  public:
  const ::y3d::TString* str_;
  const ::y3d::TOptionString* optionstring_;
  const ::y3d::TOptionInt* optionint_;
  const ::y3d::TOptionFloat* optionfloat_;
  const ::y3d::TColor* color_;
} _CustomAttr_default_instance_;
class TStringDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TString> {
} _TString_default_instance_;
class TIntDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TInt> {
} _TInt_default_instance_;
class TOptionStringDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TOptionString> {
} _TOptionString_default_instance_;
class TOptionIntDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TOptionInt> {
} _TOptionInt_default_instance_;
class TOptionFloatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TOptionFloat> {
} _TOptionFloat_default_instance_;
class TColorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TColor> {
} _TColor_default_instance_;
class AttrSetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AttrSet> {
} _AttrSet_default_instance_;

namespace protobuf_ysetting_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomAttr, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomAttr, name_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_CustomAttr_default_instance_), str_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_CustomAttr_default_instance_), optionstring_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_CustomAttr_default_instance_), optionint_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_CustomAttr_default_instance_), optionfloat_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_CustomAttr_default_instance_), color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomAttr, dataType_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TString, com_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TString, regex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TString, mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInt, com_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInt, minvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TInt, maxvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOptionString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOptionString, com_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOptionString, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOptionInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOptionInt, com_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOptionInt, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOptionFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOptionFloat, com_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOptionFloat, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TColor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TColor, com_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TColor, ctype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrSet, sname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrSet, attrs_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CustomAttr)},
  { 11, -1, sizeof(TString)},
  { 18, -1, sizeof(TInt)},
  { 25, -1, sizeof(TOptionString)},
  { 31, -1, sizeof(TOptionInt)},
  { 37, -1, sizeof(TOptionFloat)},
  { 43, -1, sizeof(TColor)},
  { 49, -1, sizeof(AttrSet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CustomAttr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TInt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TOptionString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TOptionInt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TOptionFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TColor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AttrSet_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ysetting.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace

void TableStruct::Shutdown() {
  _CustomAttr_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TString_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _TInt_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _TOptionString_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _TOptionInt_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _TOptionFloat_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _TColor_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _AttrSet_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  ::y3d::protobuf_y3d_2eproto::InitDefaults();
  _CustomAttr_default_instance_.DefaultConstruct();
  _TString_default_instance_.DefaultConstruct();
  _TInt_default_instance_.DefaultConstruct();
  _TOptionString_default_instance_.DefaultConstruct();
  _TOptionInt_default_instance_.DefaultConstruct();
  _TOptionFloat_default_instance_.DefaultConstruct();
  _TColor_default_instance_.DefaultConstruct();
  _AttrSet_default_instance_.DefaultConstruct();
  _CustomAttr_default_instance_.str_ = const_cast< ::y3d::TString*>(
      ::y3d::TString::internal_default_instance());
  _CustomAttr_default_instance_.optionstring_ = const_cast< ::y3d::TOptionString*>(
      ::y3d::TOptionString::internal_default_instance());
  _CustomAttr_default_instance_.optionint_ = const_cast< ::y3d::TOptionInt*>(
      ::y3d::TOptionInt::internal_default_instance());
  _CustomAttr_default_instance_.optionfloat_ = const_cast< ::y3d::TOptionFloat*>(
      ::y3d::TOptionFloat::internal_default_instance());
  _CustomAttr_default_instance_.color_ = const_cast< ::y3d::TColor*>(
      ::y3d::TColor::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016ysetting.proto\022\003y3d\032\031google/protobuf/a"
      "ny.proto\032\ty3d.proto\"\335\001\n\nCustomAttr\022\014\n\004na"
      "me\030\001 \001(\t\022\033\n\003str\030\003 \001(\0132\014.y3d.TStringH\000\022*\n"
      "\014optionString\030\004 \001(\0132\022.y3d.TOptionStringH"
      "\000\022$\n\toptionInt\030\005 \001(\0132\017.y3d.TOptionIntH\000\022"
      "(\n\013optionFloat\030\006 \001(\0132\021.y3d.TOptionFloatH"
      "\000\022\034\n\005color\030\007 \001(\0132\013.y3d.TColorH\000B\n\n\010dataT"
      "ype\"A\n\007TString\022\031\n\003com\030\001 \001(\0162\014.y3d.ComTyp"
      "e\022\r\n\005RegEx\030\002 \001(\t\022\014\n\004Mask\030\003 \001(\t\"E\n\004TInt\022\031"
      "\n\003com\030\001 \001(\0162\014.y3d.ComType\022\020\n\010minValue\030\002 "
      "\001(\005\022\020\n\010maxValue\030\003 \001(\005\";\n\rTOptionString\022\031"
      "\n\003com\030\001 \001(\0162\014.y3d.ComType\022\017\n\007options\030\002 \003"
      "(\t\"8\n\nTOptionInt\022\031\n\003com\030\001 \001(\0162\014.y3d.ComT"
      "ype\022\017\n\007options\030\002 \003(\005\":\n\014TOptionFloat\022\031\n\003"
      "com\030\001 \001(\0162\014.y3d.ComType\022\017\n\007options\030\002 \003(\002"
      "\"\205\001\n\006TColor\022\031\n\003com\030\001 \001(\0162\014.y3d.ComType\022$"
      "\n\005ctype\030\002 \001(\0162\025.y3d.TColor.ColorType\":\n\t"
      "ColorType\022\007\n\003RGB\020\000\022\010\n\004RGBA\020\001\022\007\n\003HEX\020\002\022\010\n"
      "\004CMYK\020\003\022\007\n\003INT\020\004\"8\n\007AttrSet\022\r\n\005sname\030\001 \001"
      "(\t\022\036\n\005attrs\030\002 \003(\0132\017.y3d.CustomAttr*\223\001\n\007C"
      "omType\022\010\n\004TEXT\020\000\022\t\n\005RADIO\020\001\022\014\n\010COMBOBOX\020"
      "\002\022\017\n\013MUTILSELECT\020\003\022\014\n\010CHECKBOX\020\004\022\n\n\006ON_O"
      "FF\020\005\022\010\n\004FILE\020\006\022\t\n\005COLOR\020\007\022\007\n\003TAG\020\010\022\007\n\003RE"
      "F\020\t\022\t\n\005IMAGE\020\n\022\010\n\004LINK\020\013B\016\252\002\013y3d.setting"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 968);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ysetting.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::y3d::protobuf_y3d_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ysetting_2eproto

const ::google::protobuf::EnumDescriptor* TColor_ColorType_descriptor() {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_enum_descriptors[0];
}
bool TColor_ColorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TColor_ColorType TColor::RGB;
const TColor_ColorType TColor::RGBA;
const TColor_ColorType TColor::HEX;
const TColor_ColorType TColor::CMYK;
const TColor_ColorType TColor::INT;
const TColor_ColorType TColor::ColorType_MIN;
const TColor_ColorType TColor::ColorType_MAX;
const int TColor::ColorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ComType_descriptor() {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_enum_descriptors[1];
}
bool ComType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomAttr::kNameFieldNumber;
const int CustomAttr::kStrFieldNumber;
const int CustomAttr::kOptionStringFieldNumber;
const int CustomAttr::kOptionIntFieldNumber;
const int CustomAttr::kOptionFloatFieldNumber;
const int CustomAttr::kColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomAttr::CustomAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ysetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.CustomAttr)
}
CustomAttr::CustomAttr(const CustomAttr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_dataType();
  switch (from.dataType_case()) {
    case kStr: {
      mutable_str()->::y3d::TString::MergeFrom(from.str());
      break;
    }
    case kOptionString: {
      mutable_optionstring()->::y3d::TOptionString::MergeFrom(from.optionstring());
      break;
    }
    case kOptionInt: {
      mutable_optionint()->::y3d::TOptionInt::MergeFrom(from.optionint());
      break;
    }
    case kOptionFloat: {
      mutable_optionfloat()->::y3d::TOptionFloat::MergeFrom(from.optionfloat());
      break;
    }
    case kColor: {
      mutable_color()->::y3d::TColor::MergeFrom(from.color());
      break;
    }
    case DATATYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:y3d.CustomAttr)
}

void CustomAttr::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dataType();
  _cached_size_ = 0;
}

CustomAttr::~CustomAttr() {
  // @@protoc_insertion_point(destructor:y3d.CustomAttr)
  SharedDtor();
}

void CustomAttr::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_dataType()) {
    clear_dataType();
  }
}

void CustomAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomAttr::descriptor() {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[0].descriptor;
}

const CustomAttr& CustomAttr::default_instance() {
  protobuf_ysetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

CustomAttr* CustomAttr::New(::google::protobuf::Arena* arena) const {
  CustomAttr* n = new CustomAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomAttr::clear_dataType() {
// @@protoc_insertion_point(one_of_clear_start:y3d.CustomAttr)
  switch (dataType_case()) {
    case kStr: {
      delete dataType_.str_;
      break;
    }
    case kOptionString: {
      delete dataType_.optionstring_;
      break;
    }
    case kOptionInt: {
      delete dataType_.optionint_;
      break;
    }
    case kOptionFloat: {
      delete dataType_.optionfloat_;
      break;
    }
    case kColor: {
      delete dataType_.color_;
      break;
    }
    case DATATYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATATYPE_NOT_SET;
}


void CustomAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.CustomAttr)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_dataType();
}

bool CustomAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.CustomAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.CustomAttr.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.TString str = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_str()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.TOptionString optionString = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optionstring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.TOptionInt optionInt = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optionint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.TOptionFloat optionFloat = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optionfloat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.TColor color = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.CustomAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.CustomAttr)
  return false;
#undef DO_
}

void CustomAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.CustomAttr)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.CustomAttr.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .y3d.TString str = 3;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *dataType_.str_, output);
  }

  // .y3d.TOptionString optionString = 4;
  if (has_optionstring()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *dataType_.optionstring_, output);
  }

  // .y3d.TOptionInt optionInt = 5;
  if (has_optionint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *dataType_.optionint_, output);
  }

  // .y3d.TOptionFloat optionFloat = 6;
  if (has_optionfloat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *dataType_.optionfloat_, output);
  }

  // .y3d.TColor color = 7;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *dataType_.color_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.CustomAttr)
}

::google::protobuf::uint8* CustomAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.CustomAttr)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.CustomAttr.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .y3d.TString str = 3;
  if (has_str()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *dataType_.str_, false, target);
  }

  // .y3d.TOptionString optionString = 4;
  if (has_optionstring()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *dataType_.optionstring_, false, target);
  }

  // .y3d.TOptionInt optionInt = 5;
  if (has_optionint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *dataType_.optionint_, false, target);
  }

  // .y3d.TOptionFloat optionFloat = 6;
  if (has_optionfloat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *dataType_.optionfloat_, false, target);
  }

  // .y3d.TColor color = 7;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *dataType_.color_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.CustomAttr)
  return target;
}

size_t CustomAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.CustomAttr)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (dataType_case()) {
    // .y3d.TString str = 3;
    case kStr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *dataType_.str_);
      break;
    }
    // .y3d.TOptionString optionString = 4;
    case kOptionString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *dataType_.optionstring_);
      break;
    }
    // .y3d.TOptionInt optionInt = 5;
    case kOptionInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *dataType_.optionint_);
      break;
    }
    // .y3d.TOptionFloat optionFloat = 6;
    case kOptionFloat: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *dataType_.optionfloat_);
      break;
    }
    // .y3d.TColor color = 7;
    case kColor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *dataType_.color_);
      break;
    }
    case DATATYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.CustomAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomAttr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.CustomAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.CustomAttr)
    MergeFrom(*source);
  }
}

void CustomAttr::MergeFrom(const CustomAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.CustomAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.dataType_case()) {
    case kStr: {
      mutable_str()->::y3d::TString::MergeFrom(from.str());
      break;
    }
    case kOptionString: {
      mutable_optionstring()->::y3d::TOptionString::MergeFrom(from.optionstring());
      break;
    }
    case kOptionInt: {
      mutable_optionint()->::y3d::TOptionInt::MergeFrom(from.optionint());
      break;
    }
    case kOptionFloat: {
      mutable_optionfloat()->::y3d::TOptionFloat::MergeFrom(from.optionfloat());
      break;
    }
    case kColor: {
      mutable_color()->::y3d::TColor::MergeFrom(from.color());
      break;
    }
    case DATATYPE_NOT_SET: {
      break;
    }
  }
}

void CustomAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.CustomAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomAttr::CopyFrom(const CustomAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.CustomAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomAttr::IsInitialized() const {
  return true;
}

void CustomAttr::Swap(CustomAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomAttr::InternalSwap(CustomAttr* other) {
  name_.Swap(&other->name_);
  std::swap(dataType_, other->dataType_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomAttr::GetMetadata() const {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomAttr

// string name = 1;
void CustomAttr::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CustomAttr::name() const {
  // @@protoc_insertion_point(field_get:y3d.CustomAttr.name)
  return name_.GetNoArena();
}
void CustomAttr::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.CustomAttr.name)
}
#if LANG_CXX11
void CustomAttr::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.CustomAttr.name)
}
#endif
void CustomAttr::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.CustomAttr.name)
}
void CustomAttr::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.CustomAttr.name)
}
::std::string* CustomAttr::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.CustomAttr.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CustomAttr::release_name() {
  // @@protoc_insertion_point(field_release:y3d.CustomAttr.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CustomAttr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.CustomAttr.name)
}

// .y3d.TString str = 3;
bool CustomAttr::has_str() const {
  return dataType_case() == kStr;
}
void CustomAttr::set_has_str() {
  _oneof_case_[0] = kStr;
}
void CustomAttr::clear_str() {
  if (has_str()) {
    delete dataType_.str_;
    clear_has_dataType();
  }
}
 const ::y3d::TString& CustomAttr::str() const {
  // @@protoc_insertion_point(field_get:y3d.CustomAttr.str)
  return has_str()
      ? *dataType_.str_
      : ::y3d::TString::default_instance();
}
::y3d::TString* CustomAttr::mutable_str() {
  if (!has_str()) {
    clear_dataType();
    set_has_str();
    dataType_.str_ = new ::y3d::TString;
  }
  // @@protoc_insertion_point(field_mutable:y3d.CustomAttr.str)
  return dataType_.str_;
}
::y3d::TString* CustomAttr::release_str() {
  // @@protoc_insertion_point(field_release:y3d.CustomAttr.str)
  if (has_str()) {
    clear_has_dataType();
    ::y3d::TString* temp = dataType_.str_;
    dataType_.str_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CustomAttr::set_allocated_str(::y3d::TString* str) {
  clear_dataType();
  if (str) {
    set_has_str();
    dataType_.str_ = str;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.CustomAttr.str)
}

// .y3d.TOptionString optionString = 4;
bool CustomAttr::has_optionstring() const {
  return dataType_case() == kOptionString;
}
void CustomAttr::set_has_optionstring() {
  _oneof_case_[0] = kOptionString;
}
void CustomAttr::clear_optionstring() {
  if (has_optionstring()) {
    delete dataType_.optionstring_;
    clear_has_dataType();
  }
}
 const ::y3d::TOptionString& CustomAttr::optionstring() const {
  // @@protoc_insertion_point(field_get:y3d.CustomAttr.optionString)
  return has_optionstring()
      ? *dataType_.optionstring_
      : ::y3d::TOptionString::default_instance();
}
::y3d::TOptionString* CustomAttr::mutable_optionstring() {
  if (!has_optionstring()) {
    clear_dataType();
    set_has_optionstring();
    dataType_.optionstring_ = new ::y3d::TOptionString;
  }
  // @@protoc_insertion_point(field_mutable:y3d.CustomAttr.optionString)
  return dataType_.optionstring_;
}
::y3d::TOptionString* CustomAttr::release_optionstring() {
  // @@protoc_insertion_point(field_release:y3d.CustomAttr.optionString)
  if (has_optionstring()) {
    clear_has_dataType();
    ::y3d::TOptionString* temp = dataType_.optionstring_;
    dataType_.optionstring_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CustomAttr::set_allocated_optionstring(::y3d::TOptionString* optionstring) {
  clear_dataType();
  if (optionstring) {
    set_has_optionstring();
    dataType_.optionstring_ = optionstring;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.CustomAttr.optionString)
}

// .y3d.TOptionInt optionInt = 5;
bool CustomAttr::has_optionint() const {
  return dataType_case() == kOptionInt;
}
void CustomAttr::set_has_optionint() {
  _oneof_case_[0] = kOptionInt;
}
void CustomAttr::clear_optionint() {
  if (has_optionint()) {
    delete dataType_.optionint_;
    clear_has_dataType();
  }
}
 const ::y3d::TOptionInt& CustomAttr::optionint() const {
  // @@protoc_insertion_point(field_get:y3d.CustomAttr.optionInt)
  return has_optionint()
      ? *dataType_.optionint_
      : ::y3d::TOptionInt::default_instance();
}
::y3d::TOptionInt* CustomAttr::mutable_optionint() {
  if (!has_optionint()) {
    clear_dataType();
    set_has_optionint();
    dataType_.optionint_ = new ::y3d::TOptionInt;
  }
  // @@protoc_insertion_point(field_mutable:y3d.CustomAttr.optionInt)
  return dataType_.optionint_;
}
::y3d::TOptionInt* CustomAttr::release_optionint() {
  // @@protoc_insertion_point(field_release:y3d.CustomAttr.optionInt)
  if (has_optionint()) {
    clear_has_dataType();
    ::y3d::TOptionInt* temp = dataType_.optionint_;
    dataType_.optionint_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CustomAttr::set_allocated_optionint(::y3d::TOptionInt* optionint) {
  clear_dataType();
  if (optionint) {
    set_has_optionint();
    dataType_.optionint_ = optionint;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.CustomAttr.optionInt)
}

// .y3d.TOptionFloat optionFloat = 6;
bool CustomAttr::has_optionfloat() const {
  return dataType_case() == kOptionFloat;
}
void CustomAttr::set_has_optionfloat() {
  _oneof_case_[0] = kOptionFloat;
}
void CustomAttr::clear_optionfloat() {
  if (has_optionfloat()) {
    delete dataType_.optionfloat_;
    clear_has_dataType();
  }
}
 const ::y3d::TOptionFloat& CustomAttr::optionfloat() const {
  // @@protoc_insertion_point(field_get:y3d.CustomAttr.optionFloat)
  return has_optionfloat()
      ? *dataType_.optionfloat_
      : ::y3d::TOptionFloat::default_instance();
}
::y3d::TOptionFloat* CustomAttr::mutable_optionfloat() {
  if (!has_optionfloat()) {
    clear_dataType();
    set_has_optionfloat();
    dataType_.optionfloat_ = new ::y3d::TOptionFloat;
  }
  // @@protoc_insertion_point(field_mutable:y3d.CustomAttr.optionFloat)
  return dataType_.optionfloat_;
}
::y3d::TOptionFloat* CustomAttr::release_optionfloat() {
  // @@protoc_insertion_point(field_release:y3d.CustomAttr.optionFloat)
  if (has_optionfloat()) {
    clear_has_dataType();
    ::y3d::TOptionFloat* temp = dataType_.optionfloat_;
    dataType_.optionfloat_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CustomAttr::set_allocated_optionfloat(::y3d::TOptionFloat* optionfloat) {
  clear_dataType();
  if (optionfloat) {
    set_has_optionfloat();
    dataType_.optionfloat_ = optionfloat;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.CustomAttr.optionFloat)
}

// .y3d.TColor color = 7;
bool CustomAttr::has_color() const {
  return dataType_case() == kColor;
}
void CustomAttr::set_has_color() {
  _oneof_case_[0] = kColor;
}
void CustomAttr::clear_color() {
  if (has_color()) {
    delete dataType_.color_;
    clear_has_dataType();
  }
}
 const ::y3d::TColor& CustomAttr::color() const {
  // @@protoc_insertion_point(field_get:y3d.CustomAttr.color)
  return has_color()
      ? *dataType_.color_
      : ::y3d::TColor::default_instance();
}
::y3d::TColor* CustomAttr::mutable_color() {
  if (!has_color()) {
    clear_dataType();
    set_has_color();
    dataType_.color_ = new ::y3d::TColor;
  }
  // @@protoc_insertion_point(field_mutable:y3d.CustomAttr.color)
  return dataType_.color_;
}
::y3d::TColor* CustomAttr::release_color() {
  // @@protoc_insertion_point(field_release:y3d.CustomAttr.color)
  if (has_color()) {
    clear_has_dataType();
    ::y3d::TColor* temp = dataType_.color_;
    dataType_.color_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CustomAttr::set_allocated_color(::y3d::TColor* color) {
  clear_dataType();
  if (color) {
    set_has_color();
    dataType_.color_ = color;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.CustomAttr.color)
}

bool CustomAttr::has_dataType() const {
  return dataType_case() != DATATYPE_NOT_SET;
}
void CustomAttr::clear_has_dataType() {
  _oneof_case_[0] = DATATYPE_NOT_SET;
}
CustomAttr::DataTypeCase CustomAttr::dataType_case() const {
  return CustomAttr::DataTypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TString::kComFieldNumber;
const int TString::kRegExFieldNumber;
const int TString::kMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TString::TString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ysetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.TString)
}
TString::TString(const TString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.regex().size() > 0) {
    regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_);
  }
  mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mask().size() > 0) {
    mask_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mask_);
  }
  com_ = from.com_;
  // @@protoc_insertion_point(copy_constructor:y3d.TString)
}

void TString::SharedCtor() {
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  com_ = 0;
  _cached_size_ = 0;
}

TString::~TString() {
  // @@protoc_insertion_point(destructor:y3d.TString)
  SharedDtor();
}

void TString::SharedDtor() {
  regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mask_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TString::descriptor() {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[1].descriptor;
}

const TString& TString::default_instance() {
  protobuf_ysetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

TString* TString::New(::google::protobuf::Arena* arena) const {
  TString* n = new TString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TString::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.TString)
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mask_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  com_ = 0;
}

bool TString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.TString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.ComType com = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_com(static_cast< ::y3d::ComType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RegEx = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regex().data(), this->regex().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.TString.RegEx"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Mask = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mask()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mask().data(), this->mask().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.TString.Mask"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.TString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.TString)
  return false;
#undef DO_
}

void TString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.TString)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->com(), output);
  }

  // string RegEx = 2;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), this->regex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TString.RegEx");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->regex(), output);
  }

  // string Mask = 3;
  if (this->mask().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mask().data(), this->mask().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TString.Mask");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mask(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.TString)
}

::google::protobuf::uint8* TString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.TString)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->com(), target);
  }

  // string RegEx = 2;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), this->regex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TString.RegEx");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->regex(), target);
  }

  // string Mask = 3;
  if (this->mask().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mask().data(), this->mask().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TString.Mask");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mask(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.TString)
  return target;
}

size_t TString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.TString)
  size_t total_size = 0;

  // string RegEx = 2;
  if (this->regex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->regex());
  }

  // string Mask = 3;
  if (this->mask().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mask());
  }

  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->com());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.TString)
  GOOGLE_DCHECK_NE(&from, this);
  const TString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.TString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.TString)
    MergeFrom(*source);
  }
}

void TString::MergeFrom(const TString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.TString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.regex().size() > 0) {

    regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_);
  }
  if (from.mask().size() > 0) {

    mask_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mask_);
  }
  if (from.com() != 0) {
    set_com(from.com());
  }
}

void TString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.TString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TString::CopyFrom(const TString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.TString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TString::IsInitialized() const {
  return true;
}

void TString::Swap(TString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TString::InternalSwap(TString* other) {
  regex_.Swap(&other->regex_);
  mask_.Swap(&other->mask_);
  std::swap(com_, other->com_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TString::GetMetadata() const {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TString

// .y3d.ComType com = 1;
void TString::clear_com() {
  com_ = 0;
}
::y3d::ComType TString::com() const {
  // @@protoc_insertion_point(field_get:y3d.TString.com)
  return static_cast< ::y3d::ComType >(com_);
}
void TString::set_com(::y3d::ComType value) {
  
  com_ = value;
  // @@protoc_insertion_point(field_set:y3d.TString.com)
}

// string RegEx = 2;
void TString::clear_regex() {
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TString::regex() const {
  // @@protoc_insertion_point(field_get:y3d.TString.RegEx)
  return regex_.GetNoArena();
}
void TString::set_regex(const ::std::string& value) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.TString.RegEx)
}
#if LANG_CXX11
void TString::set_regex(::std::string&& value) {
  
  regex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.TString.RegEx)
}
#endif
void TString::set_regex(const char* value) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.TString.RegEx)
}
void TString::set_regex(const char* value, size_t size) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.TString.RegEx)
}
::std::string* TString::mutable_regex() {
  
  // @@protoc_insertion_point(field_mutable:y3d.TString.RegEx)
  return regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TString::release_regex() {
  // @@protoc_insertion_point(field_release:y3d.TString.RegEx)
  
  return regex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TString::set_allocated_regex(::std::string* regex) {
  if (regex != NULL) {
    
  } else {
    
  }
  regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regex);
  // @@protoc_insertion_point(field_set_allocated:y3d.TString.RegEx)
}

// string Mask = 3;
void TString::clear_mask() {
  mask_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TString::mask() const {
  // @@protoc_insertion_point(field_get:y3d.TString.Mask)
  return mask_.GetNoArena();
}
void TString::set_mask(const ::std::string& value) {
  
  mask_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.TString.Mask)
}
#if LANG_CXX11
void TString::set_mask(::std::string&& value) {
  
  mask_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.TString.Mask)
}
#endif
void TString::set_mask(const char* value) {
  
  mask_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.TString.Mask)
}
void TString::set_mask(const char* value, size_t size) {
  
  mask_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.TString.Mask)
}
::std::string* TString::mutable_mask() {
  
  // @@protoc_insertion_point(field_mutable:y3d.TString.Mask)
  return mask_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TString::release_mask() {
  // @@protoc_insertion_point(field_release:y3d.TString.Mask)
  
  return mask_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TString::set_allocated_mask(::std::string* mask) {
  if (mask != NULL) {
    
  } else {
    
  }
  mask_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mask);
  // @@protoc_insertion_point(field_set_allocated:y3d.TString.Mask)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TInt::kComFieldNumber;
const int TInt::kMinValueFieldNumber;
const int TInt::kMaxValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TInt::TInt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ysetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.TInt)
}
TInt::TInt(const TInt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&com_, &from.com_,
    reinterpret_cast<char*>(&maxvalue_) -
    reinterpret_cast<char*>(&com_) + sizeof(maxvalue_));
  // @@protoc_insertion_point(copy_constructor:y3d.TInt)
}

void TInt::SharedCtor() {
  ::memset(&com_, 0, reinterpret_cast<char*>(&maxvalue_) -
    reinterpret_cast<char*>(&com_) + sizeof(maxvalue_));
  _cached_size_ = 0;
}

TInt::~TInt() {
  // @@protoc_insertion_point(destructor:y3d.TInt)
  SharedDtor();
}

void TInt::SharedDtor() {
}

void TInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TInt::descriptor() {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[2].descriptor;
}

const TInt& TInt::default_instance() {
  protobuf_ysetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

TInt* TInt::New(::google::protobuf::Arena* arena) const {
  TInt* n = new TInt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TInt::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.TInt)
  ::memset(&com_, 0, reinterpret_cast<char*>(&maxvalue_) -
    reinterpret_cast<char*>(&com_) + sizeof(maxvalue_));
}

bool TInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.TInt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.ComType com = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_com(static_cast< ::y3d::ComType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minValue = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxValue = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.TInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.TInt)
  return false;
#undef DO_
}

void TInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.TInt)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->com(), output);
  }

  // int32 minValue = 2;
  if (this->minvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minvalue(), output);
  }

  // int32 maxValue = 3;
  if (this->maxvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.TInt)
}

::google::protobuf::uint8* TInt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.TInt)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->com(), target);
  }

  // int32 minValue = 2;
  if (this->minvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minvalue(), target);
  }

  // int32 maxValue = 3;
  if (this->maxvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.TInt)
  return target;
}

size_t TInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.TInt)
  size_t total_size = 0;

  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->com());
  }

  // int32 minValue = 2;
  if (this->minvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minvalue());
  }

  // int32 maxValue = 3;
  if (this->maxvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TInt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.TInt)
  GOOGLE_DCHECK_NE(&from, this);
  const TInt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TInt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.TInt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.TInt)
    MergeFrom(*source);
  }
}

void TInt::MergeFrom(const TInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.TInt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.com() != 0) {
    set_com(from.com());
  }
  if (from.minvalue() != 0) {
    set_minvalue(from.minvalue());
  }
  if (from.maxvalue() != 0) {
    set_maxvalue(from.maxvalue());
  }
}

void TInt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.TInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TInt::CopyFrom(const TInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.TInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInt::IsInitialized() const {
  return true;
}

void TInt::Swap(TInt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TInt::InternalSwap(TInt* other) {
  std::swap(com_, other->com_);
  std::swap(minvalue_, other->minvalue_);
  std::swap(maxvalue_, other->maxvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TInt::GetMetadata() const {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TInt

// .y3d.ComType com = 1;
void TInt::clear_com() {
  com_ = 0;
}
::y3d::ComType TInt::com() const {
  // @@protoc_insertion_point(field_get:y3d.TInt.com)
  return static_cast< ::y3d::ComType >(com_);
}
void TInt::set_com(::y3d::ComType value) {
  
  com_ = value;
  // @@protoc_insertion_point(field_set:y3d.TInt.com)
}

// int32 minValue = 2;
void TInt::clear_minvalue() {
  minvalue_ = 0;
}
::google::protobuf::int32 TInt::minvalue() const {
  // @@protoc_insertion_point(field_get:y3d.TInt.minValue)
  return minvalue_;
}
void TInt::set_minvalue(::google::protobuf::int32 value) {
  
  minvalue_ = value;
  // @@protoc_insertion_point(field_set:y3d.TInt.minValue)
}

// int32 maxValue = 3;
void TInt::clear_maxvalue() {
  maxvalue_ = 0;
}
::google::protobuf::int32 TInt::maxvalue() const {
  // @@protoc_insertion_point(field_get:y3d.TInt.maxValue)
  return maxvalue_;
}
void TInt::set_maxvalue(::google::protobuf::int32 value) {
  
  maxvalue_ = value;
  // @@protoc_insertion_point(field_set:y3d.TInt.maxValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TOptionString::kComFieldNumber;
const int TOptionString::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TOptionString::TOptionString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ysetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.TOptionString)
}
TOptionString::TOptionString(const TOptionString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      options_(from.options_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  com_ = from.com_;
  // @@protoc_insertion_point(copy_constructor:y3d.TOptionString)
}

void TOptionString::SharedCtor() {
  com_ = 0;
  _cached_size_ = 0;
}

TOptionString::~TOptionString() {
  // @@protoc_insertion_point(destructor:y3d.TOptionString)
  SharedDtor();
}

void TOptionString::SharedDtor() {
}

void TOptionString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOptionString::descriptor() {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[3].descriptor;
}

const TOptionString& TOptionString::default_instance() {
  protobuf_ysetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

TOptionString* TOptionString::New(::google::protobuf::Arena* arena) const {
  TOptionString* n = new TOptionString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TOptionString::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.TOptionString)
  options_.Clear();
  com_ = 0;
}

bool TOptionString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.TOptionString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.ComType com = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_com(static_cast< ::y3d::ComType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string options = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_options()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->options(this->options_size() - 1).data(),
            this->options(this->options_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.TOptionString.options"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.TOptionString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.TOptionString)
  return false;
#undef DO_
}

void TOptionString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.TOptionString)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->com(), output);
  }

  // repeated string options = 2;
  for (int i = 0; i < this->options_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->options(i).data(), this->options(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TOptionString.options");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->options(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.TOptionString)
}

::google::protobuf::uint8* TOptionString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.TOptionString)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->com(), target);
  }

  // repeated string options = 2;
  for (int i = 0; i < this->options_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->options(i).data(), this->options(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.TOptionString.options");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->options(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.TOptionString)
  return target;
}

size_t TOptionString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.TOptionString)
  size_t total_size = 0;

  // repeated string options = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->options_size());
  for (int i = 0; i < this->options_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->options(i));
  }

  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->com());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOptionString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.TOptionString)
  GOOGLE_DCHECK_NE(&from, this);
  const TOptionString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TOptionString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.TOptionString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.TOptionString)
    MergeFrom(*source);
  }
}

void TOptionString::MergeFrom(const TOptionString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.TOptionString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  options_.MergeFrom(from.options_);
  if (from.com() != 0) {
    set_com(from.com());
  }
}

void TOptionString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.TOptionString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOptionString::CopyFrom(const TOptionString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.TOptionString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOptionString::IsInitialized() const {
  return true;
}

void TOptionString::Swap(TOptionString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TOptionString::InternalSwap(TOptionString* other) {
  options_.UnsafeArenaSwap(&other->options_);
  std::swap(com_, other->com_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TOptionString::GetMetadata() const {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TOptionString

// .y3d.ComType com = 1;
void TOptionString::clear_com() {
  com_ = 0;
}
::y3d::ComType TOptionString::com() const {
  // @@protoc_insertion_point(field_get:y3d.TOptionString.com)
  return static_cast< ::y3d::ComType >(com_);
}
void TOptionString::set_com(::y3d::ComType value) {
  
  com_ = value;
  // @@protoc_insertion_point(field_set:y3d.TOptionString.com)
}

// repeated string options = 2;
int TOptionString::options_size() const {
  return options_.size();
}
void TOptionString::clear_options() {
  options_.Clear();
}
const ::std::string& TOptionString::options(int index) const {
  // @@protoc_insertion_point(field_get:y3d.TOptionString.options)
  return options_.Get(index);
}
::std::string* TOptionString::mutable_options(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.TOptionString.options)
  return options_.Mutable(index);
}
void TOptionString::set_options(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.TOptionString.options)
  options_.Mutable(index)->assign(value);
}
void TOptionString::set_options(int index, const char* value) {
  options_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.TOptionString.options)
}
void TOptionString::set_options(int index, const char* value, size_t size) {
  options_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.TOptionString.options)
}
::std::string* TOptionString::add_options() {
  // @@protoc_insertion_point(field_add_mutable:y3d.TOptionString.options)
  return options_.Add();
}
void TOptionString::add_options(const ::std::string& value) {
  options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.TOptionString.options)
}
void TOptionString::add_options(const char* value) {
  options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.TOptionString.options)
}
void TOptionString::add_options(const char* value, size_t size) {
  options_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.TOptionString.options)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TOptionString::options() const {
  // @@protoc_insertion_point(field_list:y3d.TOptionString.options)
  return options_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TOptionString::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:y3d.TOptionString.options)
  return &options_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TOptionInt::kComFieldNumber;
const int TOptionInt::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TOptionInt::TOptionInt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ysetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.TOptionInt)
}
TOptionInt::TOptionInt(const TOptionInt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      options_(from.options_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  com_ = from.com_;
  // @@protoc_insertion_point(copy_constructor:y3d.TOptionInt)
}

void TOptionInt::SharedCtor() {
  com_ = 0;
  _cached_size_ = 0;
}

TOptionInt::~TOptionInt() {
  // @@protoc_insertion_point(destructor:y3d.TOptionInt)
  SharedDtor();
}

void TOptionInt::SharedDtor() {
}

void TOptionInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOptionInt::descriptor() {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[4].descriptor;
}

const TOptionInt& TOptionInt::default_instance() {
  protobuf_ysetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

TOptionInt* TOptionInt::New(::google::protobuf::Arena* arena) const {
  TOptionInt* n = new TOptionInt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TOptionInt::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.TOptionInt)
  options_.Clear();
  com_ = 0;
}

bool TOptionInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.TOptionInt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.ComType com = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_com(static_cast< ::y3d::ComType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 options = 2;
      case 2: {
        if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_options())));
        } else if (tag == 16u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_options())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.TOptionInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.TOptionInt)
  return false;
#undef DO_
}

void TOptionInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.TOptionInt)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->com(), output);
  }

  // repeated int32 options = 2;
  if (this->options_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_options_cached_byte_size_);
  }
  for (int i = 0; i < this->options_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->options(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.TOptionInt)
}

::google::protobuf::uint8* TOptionInt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.TOptionInt)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->com(), target);
  }

  // repeated int32 options = 2;
  if (this->options_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _options_cached_byte_size_, target);
  }
  for (int i = 0; i < this->options_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->options(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.TOptionInt)
  return target;
}

size_t TOptionInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.TOptionInt)
  size_t total_size = 0;

  // repeated int32 options = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->options_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _options_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->com());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOptionInt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.TOptionInt)
  GOOGLE_DCHECK_NE(&from, this);
  const TOptionInt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TOptionInt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.TOptionInt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.TOptionInt)
    MergeFrom(*source);
  }
}

void TOptionInt::MergeFrom(const TOptionInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.TOptionInt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  options_.MergeFrom(from.options_);
  if (from.com() != 0) {
    set_com(from.com());
  }
}

void TOptionInt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.TOptionInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOptionInt::CopyFrom(const TOptionInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.TOptionInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOptionInt::IsInitialized() const {
  return true;
}

void TOptionInt::Swap(TOptionInt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TOptionInt::InternalSwap(TOptionInt* other) {
  options_.UnsafeArenaSwap(&other->options_);
  std::swap(com_, other->com_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TOptionInt::GetMetadata() const {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TOptionInt

// .y3d.ComType com = 1;
void TOptionInt::clear_com() {
  com_ = 0;
}
::y3d::ComType TOptionInt::com() const {
  // @@protoc_insertion_point(field_get:y3d.TOptionInt.com)
  return static_cast< ::y3d::ComType >(com_);
}
void TOptionInt::set_com(::y3d::ComType value) {
  
  com_ = value;
  // @@protoc_insertion_point(field_set:y3d.TOptionInt.com)
}

// repeated int32 options = 2;
int TOptionInt::options_size() const {
  return options_.size();
}
void TOptionInt::clear_options() {
  options_.Clear();
}
::google::protobuf::int32 TOptionInt::options(int index) const {
  // @@protoc_insertion_point(field_get:y3d.TOptionInt.options)
  return options_.Get(index);
}
void TOptionInt::set_options(int index, ::google::protobuf::int32 value) {
  options_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.TOptionInt.options)
}
void TOptionInt::add_options(::google::protobuf::int32 value) {
  options_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.TOptionInt.options)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TOptionInt::options() const {
  // @@protoc_insertion_point(field_list:y3d.TOptionInt.options)
  return options_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TOptionInt::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:y3d.TOptionInt.options)
  return &options_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TOptionFloat::kComFieldNumber;
const int TOptionFloat::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TOptionFloat::TOptionFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ysetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.TOptionFloat)
}
TOptionFloat::TOptionFloat(const TOptionFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      options_(from.options_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  com_ = from.com_;
  // @@protoc_insertion_point(copy_constructor:y3d.TOptionFloat)
}

void TOptionFloat::SharedCtor() {
  com_ = 0;
  _cached_size_ = 0;
}

TOptionFloat::~TOptionFloat() {
  // @@protoc_insertion_point(destructor:y3d.TOptionFloat)
  SharedDtor();
}

void TOptionFloat::SharedDtor() {
}

void TOptionFloat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOptionFloat::descriptor() {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[5].descriptor;
}

const TOptionFloat& TOptionFloat::default_instance() {
  protobuf_ysetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

TOptionFloat* TOptionFloat::New(::google::protobuf::Arena* arena) const {
  TOptionFloat* n = new TOptionFloat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TOptionFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.TOptionFloat)
  options_.Clear();
  com_ = 0;
}

bool TOptionFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.TOptionFloat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.ComType com = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_com(static_cast< ::y3d::ComType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float options = 2;
      case 2: {
        if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_options())));
        } else if (tag == 21u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_options())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.TOptionFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.TOptionFloat)
  return false;
#undef DO_
}

void TOptionFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.TOptionFloat)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->com(), output);
  }

  // repeated float options = 2;
  if (this->options_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_options_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->options().data(), this->options_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.TOptionFloat)
}

::google::protobuf::uint8* TOptionFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.TOptionFloat)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->com(), target);
  }

  // repeated float options = 2;
  if (this->options_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _options_cached_byte_size_, target);
  }
  for (int i = 0; i < this->options_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->options(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.TOptionFloat)
  return target;
}

size_t TOptionFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.TOptionFloat)
  size_t total_size = 0;

  // repeated float options = 2;
  {
    unsigned int count = this->options_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _options_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->com());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOptionFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.TOptionFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const TOptionFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TOptionFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.TOptionFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.TOptionFloat)
    MergeFrom(*source);
  }
}

void TOptionFloat::MergeFrom(const TOptionFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.TOptionFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  options_.MergeFrom(from.options_);
  if (from.com() != 0) {
    set_com(from.com());
  }
}

void TOptionFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.TOptionFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOptionFloat::CopyFrom(const TOptionFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.TOptionFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOptionFloat::IsInitialized() const {
  return true;
}

void TOptionFloat::Swap(TOptionFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TOptionFloat::InternalSwap(TOptionFloat* other) {
  options_.UnsafeArenaSwap(&other->options_);
  std::swap(com_, other->com_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TOptionFloat::GetMetadata() const {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TOptionFloat

// .y3d.ComType com = 1;
void TOptionFloat::clear_com() {
  com_ = 0;
}
::y3d::ComType TOptionFloat::com() const {
  // @@protoc_insertion_point(field_get:y3d.TOptionFloat.com)
  return static_cast< ::y3d::ComType >(com_);
}
void TOptionFloat::set_com(::y3d::ComType value) {
  
  com_ = value;
  // @@protoc_insertion_point(field_set:y3d.TOptionFloat.com)
}

// repeated float options = 2;
int TOptionFloat::options_size() const {
  return options_.size();
}
void TOptionFloat::clear_options() {
  options_.Clear();
}
float TOptionFloat::options(int index) const {
  // @@protoc_insertion_point(field_get:y3d.TOptionFloat.options)
  return options_.Get(index);
}
void TOptionFloat::set_options(int index, float value) {
  options_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.TOptionFloat.options)
}
void TOptionFloat::add_options(float value) {
  options_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.TOptionFloat.options)
}
const ::google::protobuf::RepeatedField< float >&
TOptionFloat::options() const {
  // @@protoc_insertion_point(field_list:y3d.TOptionFloat.options)
  return options_;
}
::google::protobuf::RepeatedField< float >*
TOptionFloat::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:y3d.TOptionFloat.options)
  return &options_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TColor::kComFieldNumber;
const int TColor::kCtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TColor::TColor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ysetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.TColor)
}
TColor::TColor(const TColor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&com_, &from.com_,
    reinterpret_cast<char*>(&ctype_) -
    reinterpret_cast<char*>(&com_) + sizeof(ctype_));
  // @@protoc_insertion_point(copy_constructor:y3d.TColor)
}

void TColor::SharedCtor() {
  ::memset(&com_, 0, reinterpret_cast<char*>(&ctype_) -
    reinterpret_cast<char*>(&com_) + sizeof(ctype_));
  _cached_size_ = 0;
}

TColor::~TColor() {
  // @@protoc_insertion_point(destructor:y3d.TColor)
  SharedDtor();
}

void TColor::SharedDtor() {
}

void TColor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TColor::descriptor() {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[6].descriptor;
}

const TColor& TColor::default_instance() {
  protobuf_ysetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

TColor* TColor::New(::google::protobuf::Arena* arena) const {
  TColor* n = new TColor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TColor::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.TColor)
  ::memset(&com_, 0, reinterpret_cast<char*>(&ctype_) -
    reinterpret_cast<char*>(&com_) + sizeof(ctype_));
}

bool TColor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.TColor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .y3d.ComType com = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_com(static_cast< ::y3d::ComType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .y3d.TColor.ColorType ctype = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ctype(static_cast< ::y3d::TColor_ColorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.TColor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.TColor)
  return false;
#undef DO_
}

void TColor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.TColor)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->com(), output);
  }

  // .y3d.TColor.ColorType ctype = 2;
  if (this->ctype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ctype(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.TColor)
}

::google::protobuf::uint8* TColor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.TColor)
  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->com(), target);
  }

  // .y3d.TColor.ColorType ctype = 2;
  if (this->ctype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ctype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.TColor)
  return target;
}

size_t TColor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.TColor)
  size_t total_size = 0;

  // .y3d.ComType com = 1;
  if (this->com() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->com());
  }

  // .y3d.TColor.ColorType ctype = 2;
  if (this->ctype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TColor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.TColor)
  GOOGLE_DCHECK_NE(&from, this);
  const TColor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TColor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.TColor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.TColor)
    MergeFrom(*source);
  }
}

void TColor::MergeFrom(const TColor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.TColor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.com() != 0) {
    set_com(from.com());
  }
  if (from.ctype() != 0) {
    set_ctype(from.ctype());
  }
}

void TColor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.TColor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TColor::CopyFrom(const TColor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.TColor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TColor::IsInitialized() const {
  return true;
}

void TColor::Swap(TColor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TColor::InternalSwap(TColor* other) {
  std::swap(com_, other->com_);
  std::swap(ctype_, other->ctype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TColor::GetMetadata() const {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TColor

// .y3d.ComType com = 1;
void TColor::clear_com() {
  com_ = 0;
}
::y3d::ComType TColor::com() const {
  // @@protoc_insertion_point(field_get:y3d.TColor.com)
  return static_cast< ::y3d::ComType >(com_);
}
void TColor::set_com(::y3d::ComType value) {
  
  com_ = value;
  // @@protoc_insertion_point(field_set:y3d.TColor.com)
}

// .y3d.TColor.ColorType ctype = 2;
void TColor::clear_ctype() {
  ctype_ = 0;
}
::y3d::TColor_ColorType TColor::ctype() const {
  // @@protoc_insertion_point(field_get:y3d.TColor.ctype)
  return static_cast< ::y3d::TColor_ColorType >(ctype_);
}
void TColor::set_ctype(::y3d::TColor_ColorType value) {
  
  ctype_ = value;
  // @@protoc_insertion_point(field_set:y3d.TColor.ctype)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttrSet::kSnameFieldNumber;
const int AttrSet::kAttrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttrSet::AttrSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ysetting_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.AttrSet)
}
AttrSet::AttrSet(const AttrSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attrs_(from.attrs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sname().size() > 0) {
    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  // @@protoc_insertion_point(copy_constructor:y3d.AttrSet)
}

void AttrSet::SharedCtor() {
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AttrSet::~AttrSet() {
  // @@protoc_insertion_point(destructor:y3d.AttrSet)
  SharedDtor();
}

void AttrSet::SharedDtor() {
  sname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttrSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttrSet::descriptor() {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[7].descriptor;
}

const AttrSet& AttrSet::default_instance() {
  protobuf_ysetting_2eproto::InitDefaults();
  return *internal_default_instance();
}

AttrSet* AttrSet::New(::google::protobuf::Arena* arena) const {
  AttrSet* n = new AttrSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttrSet::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.AttrSet)
  attrs_.Clear();
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AttrSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.AttrSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sname = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sname().data(), this->sname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.AttrSet.sname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .y3d.CustomAttr attrs = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_attrs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.AttrSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.AttrSet)
  return false;
#undef DO_
}

void AttrSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.AttrSet)
  // string sname = 1;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), this->sname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.AttrSet.sname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sname(), output);
  }

  // repeated .y3d.CustomAttr attrs = 2;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attrs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.AttrSet)
}

::google::protobuf::uint8* AttrSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.AttrSet)
  // string sname = 1;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), this->sname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.AttrSet.sname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sname(), target);
  }

  // repeated .y3d.CustomAttr attrs = 2;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->attrs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.AttrSet)
  return target;
}

size_t AttrSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.AttrSet)
  size_t total_size = 0;

  // repeated .y3d.CustomAttr attrs = 2;
  {
    unsigned int count = this->attrs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attrs(i));
    }
  }

  // string sname = 1;
  if (this->sname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttrSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.AttrSet)
  GOOGLE_DCHECK_NE(&from, this);
  const AttrSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttrSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.AttrSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.AttrSet)
    MergeFrom(*source);
  }
}

void AttrSet::MergeFrom(const AttrSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.AttrSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attrs_.MergeFrom(from.attrs_);
  if (from.sname().size() > 0) {

    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
}

void AttrSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.AttrSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttrSet::CopyFrom(const AttrSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.AttrSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttrSet::IsInitialized() const {
  return true;
}

void AttrSet::Swap(AttrSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttrSet::InternalSwap(AttrSet* other) {
  attrs_.UnsafeArenaSwap(&other->attrs_);
  sname_.Swap(&other->sname_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttrSet::GetMetadata() const {
  protobuf_ysetting_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ysetting_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttrSet

// string sname = 1;
void AttrSet::clear_sname() {
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AttrSet::sname() const {
  // @@protoc_insertion_point(field_get:y3d.AttrSet.sname)
  return sname_.GetNoArena();
}
void AttrSet::set_sname(const ::std::string& value) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.AttrSet.sname)
}
#if LANG_CXX11
void AttrSet::set_sname(::std::string&& value) {
  
  sname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:y3d.AttrSet.sname)
}
#endif
void AttrSet::set_sname(const char* value) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.AttrSet.sname)
}
void AttrSet::set_sname(const char* value, size_t size) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.AttrSet.sname)
}
::std::string* AttrSet::mutable_sname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.AttrSet.sname)
  return sname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttrSet::release_sname() {
  // @@protoc_insertion_point(field_release:y3d.AttrSet.sname)
  
  return sname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttrSet::set_allocated_sname(::std::string* sname) {
  if (sname != NULL) {
    
  } else {
    
  }
  sname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sname);
  // @@protoc_insertion_point(field_set_allocated:y3d.AttrSet.sname)
}

// repeated .y3d.CustomAttr attrs = 2;
int AttrSet::attrs_size() const {
  return attrs_.size();
}
void AttrSet::clear_attrs() {
  attrs_.Clear();
}
const ::y3d::CustomAttr& AttrSet::attrs(int index) const {
  // @@protoc_insertion_point(field_get:y3d.AttrSet.attrs)
  return attrs_.Get(index);
}
::y3d::CustomAttr* AttrSet::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.AttrSet.attrs)
  return attrs_.Mutable(index);
}
::y3d::CustomAttr* AttrSet::add_attrs() {
  // @@protoc_insertion_point(field_add:y3d.AttrSet.attrs)
  return attrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::CustomAttr >*
AttrSet::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:y3d.AttrSet.attrs)
  return &attrs_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::CustomAttr >&
AttrSet::attrs() const {
  // @@protoc_insertion_point(field_list:y3d.AttrSet.attrs)
  return attrs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace y3d

// @@protoc_insertion_point(global_scope)

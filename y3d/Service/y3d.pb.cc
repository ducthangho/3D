// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: y3d.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "y3d.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace y3d {

namespace {

const ::google::protobuf::Descriptor* YColor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YColor_reflection_ = NULL;
const ::google::protobuf::Descriptor* YPoint3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YPoint3_reflection_ = NULL;
const ::google::protobuf::Descriptor* YBox3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YBox3_reflection_ = NULL;
const ::google::protobuf::Descriptor* YResource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YResource_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* YResource_ResourceType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* YLight_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YLight_reflection_ = NULL;
const ::google::protobuf::Descriptor* YCamera_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YCamera_reflection_ = NULL;
const ::google::protobuf::Descriptor* YMesh_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YMesh_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* YMesh_MeshType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* YMesh_XrefStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* YObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YObject_reflection_ = NULL;
struct YObjectOneofInstance {
  const ::y3d::YLight* light_;
  const ::y3d::YCamera* camera_;
  const ::y3d::YMesh* mesh_;
}* YObject_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* YObject_ExtraEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* YArea_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YArea_reflection_ = NULL;
const ::google::protobuf::Descriptor* YArea_GversEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* YLayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YLayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* YGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* YGroupVer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YGroupVer_reflection_ = NULL;
const ::google::protobuf::Descriptor* CustomAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CustomAttr_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CustomAttr_AType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AttrSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttrSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* FilterView_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilterView_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProjectInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProjectInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* YAreaList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YAreaList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PSetting_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PSetting_reflection_ = NULL;
const ::google::protobuf::Descriptor* YSystem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YSystem_reflection_ = NULL;
const ::google::protobuf::Descriptor* YSystem_NamePathEntry_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ObjectType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GVerType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_y3d_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_y3d_2eproto() {
  protobuf_AddDesc_y3d_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "y3d.proto");
  GOOGLE_CHECK(file != NULL);
  YColor_descriptor_ = file->message_type(0);
  static const int YColor_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YColor, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YColor, argb_),
  };
  YColor_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YColor_descriptor_,
      YColor::internal_default_instance(),
      YColor_offsets_,
      -1,
      -1,
      -1,
      sizeof(YColor),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YColor, _internal_metadata_));
  YPoint3_descriptor_ = file->message_type(1);
  static const int YPoint3_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, z_),
  };
  YPoint3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YPoint3_descriptor_,
      YPoint3::internal_default_instance(),
      YPoint3_offsets_,
      -1,
      -1,
      -1,
      sizeof(YPoint3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YPoint3, _internal_metadata_));
  YBox3_descriptor_ = file->message_type(2);
  static const int YBox3_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YBox3, pmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YBox3, pmax_),
  };
  YBox3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YBox3_descriptor_,
      YBox3::internal_default_instance(),
      YBox3_offsets_,
      -1,
      -1,
      -1,
      sizeof(YBox3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YBox3, _internal_metadata_));
  YResource_descriptor_ = file->message_type(3);
  static const int YResource_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, rtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, link_),
  };
  YResource_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YResource_descriptor_,
      YResource::internal_default_instance(),
      YResource_offsets_,
      -1,
      -1,
      -1,
      sizeof(YResource),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YResource, _internal_metadata_));
  YResource_ResourceType_descriptor_ = YResource_descriptor_->enum_type(0);
  YLight_descriptor_ = file->message_type(4);
  static const int YLight_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, diffuse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, specular_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, intensity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, exponent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, excludedmeshesids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, includedonlymeshesids_),
  };
  YLight_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YLight_descriptor_,
      YLight::internal_default_instance(),
      YLight_offsets_,
      -1,
      -1,
      -1,
      sizeof(YLight),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLight, _internal_metadata_));
  YCamera_descriptor_ = file->message_type(5);
  static const int YCamera_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, rotation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, fov_),
  };
  YCamera_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YCamera_descriptor_,
      YCamera::internal_default_instance(),
      YCamera_offsets_,
      -1,
      -1,
      -1,
      sizeof(YCamera),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YCamera, _internal_metadata_));
  YMesh_descriptor_ = file->message_type(6);
  static const int YMesh_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, num_faces_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, bbox_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, res_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, xref_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, xstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, mtype_),
  };
  YMesh_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YMesh_descriptor_,
      YMesh::internal_default_instance(),
      YMesh_offsets_,
      -1,
      -1,
      -1,
      sizeof(YMesh),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YMesh, _internal_metadata_));
  YMesh_MeshType_descriptor_ = YMesh_descriptor_->enum_type(0);
  YMesh_XrefStatus_descriptor_ = YMesh_descriptor_->enum_type(1);
  YObject_descriptor_ = file->message_type(7);
  static const int YObject_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, extra_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, otype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, cate_id_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YObject_default_oneof_instance_, light_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YObject_default_oneof_instance_, camera_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(YObject_default_oneof_instance_, mesh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, data_),
  };
  YObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YObject_descriptor_,
      YObject::internal_default_instance(),
      YObject_offsets_,
      -1,
      -1,
      -1,
      YObject_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, _oneof_case_[0]),
      sizeof(YObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YObject, _internal_metadata_));
  YObject_ExtraEntry_descriptor_ = YObject_descriptor_->nested_type(0);
  YArea_descriptor_ = file->message_type(8);
  static const int YArea_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, groups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, objs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, gvers_),
  };
  YArea_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YArea_descriptor_,
      YArea::internal_default_instance(),
      YArea_offsets_,
      -1,
      -1,
      -1,
      sizeof(YArea),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YArea, _internal_metadata_));
  YArea_GversEntry_descriptor_ = YArea_descriptor_->nested_type(0);
  YLayer_descriptor_ = file->message_type(9);
  static const int YLayer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLayer, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLayer, groups_),
  };
  YLayer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YLayer_descriptor_,
      YLayer::internal_default_instance(),
      YLayer_offsets_,
      -1,
      -1,
      -1,
      sizeof(YLayer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLayer, _internal_metadata_));
  YGroup_descriptor_ = file->message_type(10);
  static const int YGroup_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, objs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, children_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, gv_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, xref_),
  };
  YGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YGroup_descriptor_,
      YGroup::internal_default_instance(),
      YGroup_offsets_,
      -1,
      -1,
      -1,
      sizeof(YGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroup, _internal_metadata_));
  YGroupVer_descriptor_ = file->message_type(11);
  static const int YGroupVer_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, vname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, groupdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, step_),
  };
  YGroupVer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YGroupVer_descriptor_,
      YGroupVer::internal_default_instance(),
      YGroupVer_offsets_,
      -1,
      -1,
      -1,
      sizeof(YGroupVer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YGroupVer, _internal_metadata_));
  CustomAttr_descriptor_ = file->message_type(12);
  static const int CustomAttr_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomAttr, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomAttr, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomAttr, type_),
  };
  CustomAttr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CustomAttr_descriptor_,
      CustomAttr::internal_default_instance(),
      CustomAttr_offsets_,
      -1,
      -1,
      -1,
      sizeof(CustomAttr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomAttr, _internal_metadata_));
  CustomAttr_AType_descriptor_ = CustomAttr_descriptor_->enum_type(0);
  AttrSet_descriptor_ = file->message_type(13);
  static const int AttrSet_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrSet, sname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrSet, attrs_),
  };
  AttrSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttrSet_descriptor_,
      AttrSet::internal_default_instance(),
      AttrSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(AttrSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrSet, _internal_metadata_));
  FilterView_descriptor_ = file->message_type(14);
  static const int FilterView_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, otype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, face_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, search_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, aid_),
  };
  FilterView_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FilterView_descriptor_,
      FilterView::internal_default_instance(),
      FilterView_offsets_,
      -1,
      -1,
      -1,
      sizeof(FilterView),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterView, _internal_metadata_));
  ProjectInfo_descriptor_ = file->message_type(15);
  static const int ProjectInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, pname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, face_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, count_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, fview_),
  };
  ProjectInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProjectInfo_descriptor_,
      ProjectInfo::internal_default_instance(),
      ProjectInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProjectInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectInfo, _internal_metadata_));
  YAreaList_descriptor_ = file->message_type(16);
  static const int YAreaList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YAreaList, areas_),
  };
  YAreaList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YAreaList_descriptor_,
      YAreaList::internal_default_instance(),
      YAreaList_offsets_,
      -1,
      -1,
      -1,
      sizeof(YAreaList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YAreaList, _internal_metadata_));
  PSetting_descriptor_ = file->message_type(17);
  static const int PSetting_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSetting, extra_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSetting, max_recent_),
  };
  PSetting_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PSetting_descriptor_,
      PSetting::internal_default_instance(),
      PSetting_offsets_,
      -1,
      -1,
      -1,
      sizeof(PSetting),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PSetting, _internal_metadata_));
  YSystem_descriptor_ = file->message_type(18);
  static const int YSystem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, default_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, default_setting_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, name_path_),
  };
  YSystem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YSystem_descriptor_,
      YSystem::internal_default_instance(),
      YSystem_offsets_,
      -1,
      -1,
      -1,
      sizeof(YSystem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YSystem, _internal_metadata_));
  YSystem_NamePathEntry_descriptor_ = YSystem_descriptor_->nested_type(0);
  ObjectType_descriptor_ = file->enum_type(0);
  GVerType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_y3d_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YColor_descriptor_, YColor::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YPoint3_descriptor_, YPoint3::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YBox3_descriptor_, YBox3::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YResource_descriptor_, YResource::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YLight_descriptor_, YLight::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YCamera_descriptor_, YCamera::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YMesh_descriptor_, YMesh::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YObject_descriptor_, YObject::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        YObject_ExtraEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::protobuf::Any,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                YObject_ExtraEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YArea_descriptor_, YArea::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        YArea_GversEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::y3d::YGroupVer,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                YArea_GversEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YLayer_descriptor_, YLayer::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YGroup_descriptor_, YGroup::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YGroupVer_descriptor_, YGroupVer::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CustomAttr_descriptor_, CustomAttr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttrSet_descriptor_, AttrSet::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FilterView_descriptor_, FilterView::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProjectInfo_descriptor_, ProjectInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YAreaList_descriptor_, YAreaList::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PSetting_descriptor_, PSetting::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YSystem_descriptor_, YSystem::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        YSystem_NamePathEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                YSystem_NamePathEntry_descriptor_));
}

}  // namespace

void protobuf_ShutdownFile_y3d_2eproto() {
  YColor_default_instance_.Shutdown();
  delete YColor_reflection_;
  YPoint3_default_instance_.Shutdown();
  delete YPoint3_reflection_;
  YBox3_default_instance_.Shutdown();
  delete YBox3_reflection_;
  YResource_default_instance_.Shutdown();
  delete YResource_reflection_;
  YLight_default_instance_.Shutdown();
  delete YLight_reflection_;
  YCamera_default_instance_.Shutdown();
  delete YCamera_reflection_;
  YMesh_default_instance_.Shutdown();
  delete YMesh_reflection_;
  YObject_default_instance_.Shutdown();
  delete YObject_default_oneof_instance_;
  delete YObject_reflection_;
  YArea_default_instance_.Shutdown();
  delete YArea_reflection_;
  YLayer_default_instance_.Shutdown();
  delete YLayer_reflection_;
  YGroup_default_instance_.Shutdown();
  delete YGroup_reflection_;
  YGroupVer_default_instance_.Shutdown();
  delete YGroupVer_reflection_;
  CustomAttr_default_instance_.Shutdown();
  delete CustomAttr_reflection_;
  AttrSet_default_instance_.Shutdown();
  delete AttrSet_reflection_;
  FilterView_default_instance_.Shutdown();
  delete FilterView_reflection_;
  ProjectInfo_default_instance_.Shutdown();
  delete ProjectInfo_reflection_;
  YAreaList_default_instance_.Shutdown();
  delete YAreaList_reflection_;
  PSetting_default_instance_.Shutdown();
  delete PSetting_reflection_;
  YSystem_default_instance_.Shutdown();
  delete YSystem_reflection_;
}

void protobuf_InitDefaults_y3d_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  YColor_default_instance_.DefaultConstruct();
  YPoint3_default_instance_.DefaultConstruct();
  YBox3_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  YResource_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  YLight_default_instance_.DefaultConstruct();
  YCamera_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  YMesh_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  YObject_default_instance_.DefaultConstruct();
  YObject_default_oneof_instance_ = new YObjectOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  YArea_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  YLayer_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  YGroup_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  YGroupVer_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CustomAttr_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AttrSet_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FilterView_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ProjectInfo_default_instance_.DefaultConstruct();
  YAreaList_default_instance_.DefaultConstruct();
  PSetting_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  YSystem_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  YColor_default_instance_.get_mutable()->InitAsDefaultInstance();
  YPoint3_default_instance_.get_mutable()->InitAsDefaultInstance();
  YBox3_default_instance_.get_mutable()->InitAsDefaultInstance();
  YResource_default_instance_.get_mutable()->InitAsDefaultInstance();
  YLight_default_instance_.get_mutable()->InitAsDefaultInstance();
  YCamera_default_instance_.get_mutable()->InitAsDefaultInstance();
  YMesh_default_instance_.get_mutable()->InitAsDefaultInstance();
  YObject_default_instance_.get_mutable()->InitAsDefaultInstance();
  YArea_default_instance_.get_mutable()->InitAsDefaultInstance();
  YLayer_default_instance_.get_mutable()->InitAsDefaultInstance();
  YGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  YGroupVer_default_instance_.get_mutable()->InitAsDefaultInstance();
  CustomAttr_default_instance_.get_mutable()->InitAsDefaultInstance();
  AttrSet_default_instance_.get_mutable()->InitAsDefaultInstance();
  FilterView_default_instance_.get_mutable()->InitAsDefaultInstance();
  ProjectInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  YAreaList_default_instance_.get_mutable()->InitAsDefaultInstance();
  PSetting_default_instance_.get_mutable()->InitAsDefaultInstance();
  YSystem_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_y3d_2eproto_once_);
void protobuf_InitDefaults_y3d_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_y3d_2eproto_once_,
                 &protobuf_InitDefaults_y3d_2eproto_impl);
}
void protobuf_AddDesc_y3d_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_y3d_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ty3d.proto\022\003y3d\032\031google/protobuf/any.pr"
    "oto\"$\n\006YColor\022\014\n\004name\030\001 \001(\t\022\014\n\004argb\030\002 \001("
    "\005\"*\n\007YPoint3\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030"
    "\003 \001(\002\"\?\n\005YBox3\022\032\n\004pmin\030\001 \001(\0132\014.y3d.YPoin"
    "t3\022\032\n\004pmax\030\002 \001(\0132\014.y3d.YPoint3\"\242\001\n\tYReso"
    "urce\022\013\n\003rid\030\001 \001(\t\022*\n\005rtype\030\002 \001(\0162\033.y3d.Y"
    "Resource.ResourceType\022\014\n\004link\030\003 \001(\t\"N\n\014R"
    "esourceType\022\n\n\006BINARY\020\000\022\t\n\005IMAGE\020\001\022\016\n\nFL"
    "ATBUFFER\020\002\022\014\n\010PROTOBUF\020\003\022\t\n\005CAPNP\020\004\"\250\001\n\006"
    "YLight\022\017\n\007diffuse\030\003 \003(\002\022\020\n\010specular\030\004 \003("
    "\002\022\021\n\tintensity\030\005 \001(\002\022\r\n\005range\030\006 \001(\002\022\r\n\005a"
    "ngle\030\007 \001(\002\022\020\n\010exponent\030\010 \001(\002\022\031\n\021excluded"
    "MeshesIds\030\t \003(\t\022\035\n\025includedOnlyMeshesIds"
    "\030\n \003(\t\"8\n\007YCamera\022\020\n\010rotation\030\003 \003(\002\022\016\n\006t"
    "arget\030\004 \003(\002\022\013\n\003fov\030\005 \001(\002\"\317\003\n\005YMesh\022\021\n\tnu"
    "m_faces\030\001 \001(\005\022\030\n\004bbox\030\002 \001(\0132\n.y3d.YBox3\022"
    "\016\n\006res_id\030\003 \001(\t\022\014\n\004xref\030\004 \003(\005\022&\n\007xstatus"
    "\030\005 \001(\0162\025.y3d.YMesh.XrefStatus\022\"\n\005mtype\030\006"
    " \001(\0162\023.y3d.YMesh.MeshType\"\276\001\n\010MeshType\022\013"
    "\n\007Unknown\020\000\022\021\n\rEditable_Mesh\020\001\022\021\n\rEditab"
    "le_Poly\020\002\022\007\n\003Box\020\003\022\n\n\006Sphere\020\004\022\r\n\tGeoSph"
    "ere\020\005\022\014\n\010Cylinder\020\006\022\010\n\004Tube\020\007\022\t\n\005Torus\020\010"
    "\022\013\n\007Pyramid\020\t\022\n\n\006Teapot\020\n\022\t\n\005Plane\020\013\022\n\n\006"
    "Target\020\014\022\010\n\004Cone\020\r\"n\n\nXrefStatus\022\014\n\010ORIG"
    "INAL\020\000\022\016\n\nXREF_HIGHT\020\001\022\014\n\010XREF_LOW\020\002\022\024\n\020"
    "XREF_LOW_DISPLAY\020\003\022\007\n\003BOX\020\004\022\n\n\006MERGED\020\005\022"
    "\t\n\005FINAL\020\006\"\277\002\n\007YObject\022\014\n\004name\030\001 \001(\t\022\031\n\003"
    "pos\030\003 \001(\0132\014.y3d.YPoint3\022&\n\005extra\030\005 \003(\0132\027"
    ".y3d.YObject.ExtraEntry\022\036\n\005otype\030\006 \001(\0162\017"
    ".y3d.ObjectType\022\014\n\004tags\030\007 \003(\t\022\017\n\007cate_id"
    "\030\010 \001(\005\022\034\n\005light\030\n \001(\0132\013.y3d.YLightH\000\022\036\n\006"
    "camera\030\013 \001(\0132\014.y3d.YCameraH\000\022\032\n\004mesh\030\014 \001"
    "(\0132\n.y3d.YMeshH\000\032B\n\nExtraEntry\022\013\n\003key\030\001 "
    "\001(\t\022#\n\005value\030\002 \001(\0132\024.google.protobuf.Any"
    ":\0028\001B\006\n\004data\"\262\001\n\005YArea\022\014\n\004name\030\001 \001(\t\022\033\n\006"
    "groups\030\002 \003(\0132\013.y3d.YGroup\022\032\n\004objs\030\003 \003(\0132"
    "\014.y3d.YObject\022$\n\005gvers\030\006 \003(\0132\025.y3d.YArea"
    ".GversEntry\032<\n\nGversEntry\022\013\n\003key\030\001 \001(\t\022\035"
    "\n\005value\030\002 \001(\0132\016.y3d.YGroupVer:\0028\001\"3\n\006YLa"
    "yer\022\014\n\004name\030\001 \001(\t\022\033\n\006groups\030\002 \003(\0132\013.y3d."
    "YGroup\"\177\n\006YGroup\022\014\n\004name\030\001 \001(\t\022\032\n\004objs\030\002"
    " \003(\0132\014.y3d.YObject\022\035\n\010children\030\003 \003(\0132\013.y"
    "3d.YGroup\022\036\n\007gv_type\030\004 \001(\0162\r.y3d.GVerTyp"
    "e\022\014\n\004xref\030\005 \003(\t\"H\n\tYGroupVer\022\r\n\005vname\030\001 "
    "\001(\t\022\036\n\tgroupData\030\002 \001(\0132\013.y3d.YGroup\022\014\n\004s"
    "tep\030\003 \001(\005\"\201\002\n\nCustomAttr\022\014\n\004name\030\001 \001(\t\022#"
    "\n\005value\030\002 \001(\0132\024.google.protobuf.Any\022#\n\004t"
    "ype\030\003 \001(\0162\025.y3d.CustomAttr.AType\"\232\001\n\005ATy"
    "pe\022\n\n\006STRING\020\000\022\007\n\003INT\020\001\022\t\n\005FLOAT\020\002\022\010\n\004BO"
    "OL\020\003\022\n\n\006POINT3\020\004\022\020\n\014ARRAY_STRING\020\005\022\r\n\tAR"
    "RAY_INT\020\006\022\017\n\013ARRAY_FLOAT\020\007\022\010\n\004TEXT\020\010\022\t\n\005"
    "COLOR\020\t\022\t\n\005ONEOF\020\n\022\t\n\005OTHER\020\013\"8\n\007AttrSet"
    "\022\r\n\005sname\030\001 \001(\t\022\036\n\005attrs\030\002 \003(\0132\017.y3d.Cus"
    "tomAttr\"]\n\nFilterView\022\036\n\005otype\030\001 \001(\0162\017.y"
    "3d.ObjectType\022\022\n\nface_range\030\002 \001(\005\022\016\n\006sea"
    "rch\030\003 \001(\t\022\013\n\003aid\030\004 \001(\005\"\200\001\n\013ProjectInfo\022\r"
    "\n\005pname\030\001 \001(\t\022\014\n\004path\030\002 \001(\t\022\022\n\nface_rang"
    "e\030\003 \003(\005\022 \n\013count_color\030\004 \003(\0132\013.y3d.YColo"
    "r\022\036\n\005fview\030\005 \003(\0132\017.y3d.FilterView\"&\n\tYAr"
    "eaList\022\031\n\005areas\030\001 \003(\0132\n.y3d.YArea\">\n\010PSe"
    "tting\022\036\n\005extra\030\002 \003(\0132\017.y3d.CustomAttr\022\022\n"
    "\nmax_recent\030\003 \001(\005\"\271\001\n\007YSystem\022&\n\014default"
    "_info\030\001 \001(\0132\020.y3d.ProjectInfo\022&\n\017default"
    "_setting\030\002 \001(\0132\r.y3d.PSetting\022-\n\tname_pa"
    "th\030\003 \003(\0132\032.y3d.YSystem.NamePathEntry\032/\n\r"
    "NamePathEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
    "\t:\0028\001*G\n\nObjectType\022\014\n\010GEOMETRY\020\000\022\t\n\005LIG"
    "HT\020\001\022\n\n\006CAMERA\020\002\022\t\n\005SHAPE\020\003\022\t\n\005OTHER\020\004*\?"
    "\n\010GVerType\022\n\n\006NO_VER\020\000\022\014\n\010ORIGINAL\020\001\022\013\n\007"
    "IN_BAKE\020\002\022\014\n\010STANDARD\020\003B\017\252\002\014Y3D.Entities"
    "b\006proto3", 2808);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "y3d.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_y3d_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_y3d_2eproto_once_);
void protobuf_AddDesc_y3d_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_y3d_2eproto_once_,
                 &protobuf_AddDesc_y3d_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_y3d_2eproto {
  StaticDescriptorInitializer_y3d_2eproto() {
    protobuf_AddDesc_y3d_2eproto();
  }
} static_descriptor_initializer_y3d_2eproto_;
const ::google::protobuf::EnumDescriptor* ObjectType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectType_descriptor_;
}
bool ObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GVerType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GVerType_descriptor_;
}
bool GVerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YColor::kNameFieldNumber;
const int YColor::kArgbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YColor::YColor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YColor)
}

void YColor::InitAsDefaultInstance() {
}

YColor::YColor(const YColor& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YColor)
}

void YColor::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  argb_ = 0;
  _cached_size_ = 0;
}

YColor::~YColor() {
  // @@protoc_insertion_point(destructor:y3d.YColor)
  SharedDtor();
}

void YColor::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YColor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YColor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YColor_descriptor_;
}

const YColor& YColor::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YColor> YColor_default_instance_;

YColor* YColor::New(::google::protobuf::Arena* arena) const {
  YColor* n = new YColor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YColor::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YColor)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  argb_ = 0;
}

bool YColor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YColor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YColor.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_argb;
        break;
      }

      // optional int32 argb = 2;
      case 2: {
        if (tag == 16) {
         parse_argb:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argb_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YColor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YColor)
  return false;
#undef DO_
}

void YColor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YColor)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YColor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 argb = 2;
  if (this->argb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->argb(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YColor)
}

::google::protobuf::uint8* YColor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YColor)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YColor.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 argb = 2;
  if (this->argb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->argb(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YColor)
  return target;
}

size_t YColor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YColor)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 argb = 2;
  if (this->argb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YColor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YColor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YColor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YColor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YColor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YColor)
    UnsafeMergeFrom(*source);
  }
}

void YColor::MergeFrom(const YColor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YColor)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YColor::UnsafeMergeFrom(const YColor& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.argb() != 0) {
    set_argb(from.argb());
  }
}

void YColor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YColor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YColor::CopyFrom(const YColor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YColor)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YColor::IsInitialized() const {

  return true;
}

void YColor::Swap(YColor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YColor::InternalSwap(YColor* other) {
  name_.Swap(&other->name_);
  std::swap(argb_, other->argb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YColor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YColor_descriptor_;
  metadata.reflection = YColor_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YColor

// optional string name = 1;
void YColor::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YColor::name() const {
  // @@protoc_insertion_point(field_get:y3d.YColor.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YColor::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YColor.name)
}
void YColor::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YColor.name)
}
void YColor::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YColor.name)
}
::std::string* YColor::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YColor.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YColor::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YColor.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YColor::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YColor.name)
}

// optional int32 argb = 2;
void YColor::clear_argb() {
  argb_ = 0;
}
::google::protobuf::int32 YColor::argb() const {
  // @@protoc_insertion_point(field_get:y3d.YColor.argb)
  return argb_;
}
void YColor::set_argb(::google::protobuf::int32 value) {
  
  argb_ = value;
  // @@protoc_insertion_point(field_set:y3d.YColor.argb)
}

inline const YColor* YColor::internal_default_instance() {
  return &YColor_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YPoint3::kXFieldNumber;
const int YPoint3::kYFieldNumber;
const int YPoint3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YPoint3::YPoint3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YPoint3)
}

void YPoint3::InitAsDefaultInstance() {
}

YPoint3::YPoint3(const YPoint3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YPoint3)
}

void YPoint3::SharedCtor() {
  ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
  _cached_size_ = 0;
}

YPoint3::~YPoint3() {
  // @@protoc_insertion_point(destructor:y3d.YPoint3)
  SharedDtor();
}

void YPoint3::SharedDtor() {
}

void YPoint3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YPoint3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YPoint3_descriptor_;
}

const YPoint3& YPoint3::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YPoint3> YPoint3_default_instance_;

YPoint3* YPoint3::New(::google::protobuf::Arena* arena) const {
  YPoint3* n = new YPoint3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YPoint3::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YPoint3)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YPoint3, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YPoint3*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);

#undef ZR_HELPER_
#undef ZR_

}

bool YPoint3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YPoint3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (tag == 13) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // optional float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // optional float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YPoint3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YPoint3)
  return false;
#undef DO_
}

void YPoint3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YPoint3)
  // optional float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YPoint3)
}

::google::protobuf::uint8* YPoint3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YPoint3)
  // optional float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YPoint3)
  return target;
}

size_t YPoint3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YPoint3)
  size_t total_size = 0;

  // optional float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // optional float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YPoint3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YPoint3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YPoint3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YPoint3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YPoint3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YPoint3)
    UnsafeMergeFrom(*source);
  }
}

void YPoint3::MergeFrom(const YPoint3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YPoint3)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YPoint3::UnsafeMergeFrom(const YPoint3& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void YPoint3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YPoint3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YPoint3::CopyFrom(const YPoint3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YPoint3)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YPoint3::IsInitialized() const {

  return true;
}

void YPoint3::Swap(YPoint3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YPoint3::InternalSwap(YPoint3* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YPoint3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YPoint3_descriptor_;
  metadata.reflection = YPoint3_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YPoint3

// optional float x = 1;
void YPoint3::clear_x() {
  x_ = 0;
}
float YPoint3::x() const {
  // @@protoc_insertion_point(field_get:y3d.YPoint3.x)
  return x_;
}
void YPoint3::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:y3d.YPoint3.x)
}

// optional float y = 2;
void YPoint3::clear_y() {
  y_ = 0;
}
float YPoint3::y() const {
  // @@protoc_insertion_point(field_get:y3d.YPoint3.y)
  return y_;
}
void YPoint3::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:y3d.YPoint3.y)
}

// optional float z = 3;
void YPoint3::clear_z() {
  z_ = 0;
}
float YPoint3::z() const {
  // @@protoc_insertion_point(field_get:y3d.YPoint3.z)
  return z_;
}
void YPoint3::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:y3d.YPoint3.z)
}

inline const YPoint3* YPoint3::internal_default_instance() {
  return &YPoint3_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YBox3::kPminFieldNumber;
const int YBox3::kPmaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YBox3::YBox3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YBox3)
}

void YBox3::InitAsDefaultInstance() {
  pmin_ = const_cast< ::y3d::YPoint3*>(
      ::y3d::YPoint3::internal_default_instance());
  pmax_ = const_cast< ::y3d::YPoint3*>(
      ::y3d::YPoint3::internal_default_instance());
}

YBox3::YBox3(const YBox3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YBox3)
}

void YBox3::SharedCtor() {
  pmin_ = NULL;
  pmax_ = NULL;
  _cached_size_ = 0;
}

YBox3::~YBox3() {
  // @@protoc_insertion_point(destructor:y3d.YBox3)
  SharedDtor();
}

void YBox3::SharedDtor() {
  if (this != &YBox3_default_instance_.get()) {
    delete pmin_;
    delete pmax_;
  }
}

void YBox3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YBox3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YBox3_descriptor_;
}

const YBox3& YBox3::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YBox3> YBox3_default_instance_;

YBox3* YBox3::New(::google::protobuf::Arena* arena) const {
  YBox3* n = new YBox3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YBox3::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YBox3)
  if (GetArenaNoVirtual() == NULL && pmin_ != NULL) delete pmin_;
  pmin_ = NULL;
  if (GetArenaNoVirtual() == NULL && pmax_ != NULL) delete pmax_;
  pmax_ = NULL;
}

bool YBox3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YBox3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .y3d.YPoint3 pmin = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pmin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pmax;
        break;
      }

      // optional .y3d.YPoint3 pmax = 2;
      case 2: {
        if (tag == 18) {
         parse_pmax:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pmax()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YBox3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YBox3)
  return false;
#undef DO_
}

void YBox3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YBox3)
  // optional .y3d.YPoint3 pmin = 1;
  if (this->has_pmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pmin_, output);
  }

  // optional .y3d.YPoint3 pmax = 2;
  if (this->has_pmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pmax_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YBox3)
}

::google::protobuf::uint8* YBox3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YBox3)
  // optional .y3d.YPoint3 pmin = 1;
  if (this->has_pmin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pmin_, false, target);
  }

  // optional .y3d.YPoint3 pmax = 2;
  if (this->has_pmax()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pmax_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YBox3)
  return target;
}

size_t YBox3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YBox3)
  size_t total_size = 0;

  // optional .y3d.YPoint3 pmin = 1;
  if (this->has_pmin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pmin_);
  }

  // optional .y3d.YPoint3 pmax = 2;
  if (this->has_pmax()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pmax_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YBox3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YBox3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YBox3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YBox3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YBox3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YBox3)
    UnsafeMergeFrom(*source);
  }
}

void YBox3::MergeFrom(const YBox3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YBox3)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YBox3::UnsafeMergeFrom(const YBox3& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_pmin()) {
    mutable_pmin()->::y3d::YPoint3::MergeFrom(from.pmin());
  }
  if (from.has_pmax()) {
    mutable_pmax()->::y3d::YPoint3::MergeFrom(from.pmax());
  }
}

void YBox3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YBox3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YBox3::CopyFrom(const YBox3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YBox3)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YBox3::IsInitialized() const {

  return true;
}

void YBox3::Swap(YBox3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YBox3::InternalSwap(YBox3* other) {
  std::swap(pmin_, other->pmin_);
  std::swap(pmax_, other->pmax_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YBox3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YBox3_descriptor_;
  metadata.reflection = YBox3_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YBox3

// optional .y3d.YPoint3 pmin = 1;
bool YBox3::has_pmin() const {
  return this != internal_default_instance() && pmin_ != NULL;
}
void YBox3::clear_pmin() {
  if (GetArenaNoVirtual() == NULL && pmin_ != NULL) delete pmin_;
  pmin_ = NULL;
}
const ::y3d::YPoint3& YBox3::pmin() const {
  // @@protoc_insertion_point(field_get:y3d.YBox3.pmin)
  return pmin_ != NULL ? *pmin_
                         : *::y3d::YPoint3::internal_default_instance();
}
::y3d::YPoint3* YBox3::mutable_pmin() {
  
  if (pmin_ == NULL) {
    pmin_ = new ::y3d::YPoint3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YBox3.pmin)
  return pmin_;
}
::y3d::YPoint3* YBox3::release_pmin() {
  // @@protoc_insertion_point(field_release:y3d.YBox3.pmin)
  
  ::y3d::YPoint3* temp = pmin_;
  pmin_ = NULL;
  return temp;
}
void YBox3::set_allocated_pmin(::y3d::YPoint3* pmin) {
  delete pmin_;
  pmin_ = pmin;
  if (pmin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YBox3.pmin)
}

// optional .y3d.YPoint3 pmax = 2;
bool YBox3::has_pmax() const {
  return this != internal_default_instance() && pmax_ != NULL;
}
void YBox3::clear_pmax() {
  if (GetArenaNoVirtual() == NULL && pmax_ != NULL) delete pmax_;
  pmax_ = NULL;
}
const ::y3d::YPoint3& YBox3::pmax() const {
  // @@protoc_insertion_point(field_get:y3d.YBox3.pmax)
  return pmax_ != NULL ? *pmax_
                         : *::y3d::YPoint3::internal_default_instance();
}
::y3d::YPoint3* YBox3::mutable_pmax() {
  
  if (pmax_ == NULL) {
    pmax_ = new ::y3d::YPoint3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YBox3.pmax)
  return pmax_;
}
::y3d::YPoint3* YBox3::release_pmax() {
  // @@protoc_insertion_point(field_release:y3d.YBox3.pmax)
  
  ::y3d::YPoint3* temp = pmax_;
  pmax_ = NULL;
  return temp;
}
void YBox3::set_allocated_pmax(::y3d::YPoint3* pmax) {
  delete pmax_;
  pmax_ = pmax;
  if (pmax) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YBox3.pmax)
}

inline const YBox3* YBox3::internal_default_instance() {
  return &YBox3_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* YResource_ResourceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YResource_ResourceType_descriptor_;
}
bool YResource_ResourceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const YResource_ResourceType YResource::BINARY;
const YResource_ResourceType YResource::IMAGE;
const YResource_ResourceType YResource::FLATBUFFER;
const YResource_ResourceType YResource::PROTOBUF;
const YResource_ResourceType YResource::CAPNP;
const YResource_ResourceType YResource::ResourceType_MIN;
const YResource_ResourceType YResource::ResourceType_MAX;
const int YResource::ResourceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YResource::kRidFieldNumber;
const int YResource::kRtypeFieldNumber;
const int YResource::kLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YResource::YResource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YResource)
}

void YResource::InitAsDefaultInstance() {
}

YResource::YResource(const YResource& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YResource)
}

void YResource::SharedCtor() {
  rid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rtype_ = 0;
  _cached_size_ = 0;
}

YResource::~YResource() {
  // @@protoc_insertion_point(destructor:y3d.YResource)
  SharedDtor();
}

void YResource::SharedDtor() {
  rid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YResource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YResource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YResource_descriptor_;
}

const YResource& YResource::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YResource> YResource_default_instance_;

YResource* YResource::New(::google::protobuf::Arena* arena) const {
  YResource* n = new YResource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YResource::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YResource)
  rid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rtype_ = 0;
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YResource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string rid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rid().data(), this->rid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YResource.rid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rtype;
        break;
      }

      // optional .y3d.YResource.ResourceType rtype = 2;
      case 2: {
        if (tag == 16) {
         parse_rtype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rtype(static_cast< ::y3d::YResource_ResourceType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_link;
        break;
      }

      // optional string link = 3;
      case 3: {
        if (tag == 26) {
         parse_link:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link().data(), this->link().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YResource.link"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YResource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YResource)
  return false;
#undef DO_
}

void YResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YResource)
  // optional string rid = 1;
  if (this->rid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rid().data(), this->rid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.rid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rid(), output);
  }

  // optional .y3d.YResource.ResourceType rtype = 2;
  if (this->rtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->rtype(), output);
  }

  // optional string link = 3;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->link(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YResource)
}

::google::protobuf::uint8* YResource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YResource)
  // optional string rid = 1;
  if (this->rid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rid().data(), this->rid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.rid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rid(), target);
  }

  // optional .y3d.YResource.ResourceType rtype = 2;
  if (this->rtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->rtype(), target);
  }

  // optional string link = 3;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YResource.link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->link(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YResource)
  return target;
}

size_t YResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YResource)
  size_t total_size = 0;

  // optional string rid = 1;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rid());
  }

  // optional .y3d.YResource.ResourceType rtype = 2;
  if (this->rtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rtype());
  }

  // optional string link = 3;
  if (this->link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YResource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YResource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YResource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YResource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YResource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YResource)
    UnsafeMergeFrom(*source);
  }
}

void YResource::MergeFrom(const YResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YResource)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YResource::UnsafeMergeFrom(const YResource& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.rid().size() > 0) {

    rid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rid_);
  }
  if (from.rtype() != 0) {
    set_rtype(from.rtype());
  }
  if (from.link().size() > 0) {

    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
}

void YResource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YResource::CopyFrom(const YResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YResource)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YResource::IsInitialized() const {

  return true;
}

void YResource::Swap(YResource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YResource::InternalSwap(YResource* other) {
  rid_.Swap(&other->rid_);
  std::swap(rtype_, other->rtype_);
  link_.Swap(&other->link_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YResource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YResource_descriptor_;
  metadata.reflection = YResource_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YResource

// optional string rid = 1;
void YResource::clear_rid() {
  rid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YResource::rid() const {
  // @@protoc_insertion_point(field_get:y3d.YResource.rid)
  return rid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YResource::set_rid(const ::std::string& value) {
  
  rid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YResource.rid)
}
void YResource::set_rid(const char* value) {
  
  rid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YResource.rid)
}
void YResource::set_rid(const char* value, size_t size) {
  
  rid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YResource.rid)
}
::std::string* YResource::mutable_rid() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YResource.rid)
  return rid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YResource::release_rid() {
  // @@protoc_insertion_point(field_release:y3d.YResource.rid)
  
  return rid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YResource::set_allocated_rid(::std::string* rid) {
  if (rid != NULL) {
    
  } else {
    
  }
  rid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rid);
  // @@protoc_insertion_point(field_set_allocated:y3d.YResource.rid)
}

// optional .y3d.YResource.ResourceType rtype = 2;
void YResource::clear_rtype() {
  rtype_ = 0;
}
::y3d::YResource_ResourceType YResource::rtype() const {
  // @@protoc_insertion_point(field_get:y3d.YResource.rtype)
  return static_cast< ::y3d::YResource_ResourceType >(rtype_);
}
void YResource::set_rtype(::y3d::YResource_ResourceType value) {
  
  rtype_ = value;
  // @@protoc_insertion_point(field_set:y3d.YResource.rtype)
}

// optional string link = 3;
void YResource::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YResource::link() const {
  // @@protoc_insertion_point(field_get:y3d.YResource.link)
  return link_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YResource::set_link(const ::std::string& value) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YResource.link)
}
void YResource::set_link(const char* value) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YResource.link)
}
void YResource::set_link(const char* value, size_t size) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YResource.link)
}
::std::string* YResource::mutable_link() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YResource.link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YResource::release_link() {
  // @@protoc_insertion_point(field_release:y3d.YResource.link)
  
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YResource::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    
  } else {
    
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:y3d.YResource.link)
}

inline const YResource* YResource::internal_default_instance() {
  return &YResource_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YLight::kDiffuseFieldNumber;
const int YLight::kSpecularFieldNumber;
const int YLight::kIntensityFieldNumber;
const int YLight::kRangeFieldNumber;
const int YLight::kAngleFieldNumber;
const int YLight::kExponentFieldNumber;
const int YLight::kExcludedMeshesIdsFieldNumber;
const int YLight::kIncludedOnlyMeshesIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YLight::YLight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YLight)
}

void YLight::InitAsDefaultInstance() {
}

YLight::YLight(const YLight& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YLight)
}

void YLight::SharedCtor() {
  ::memset(&intensity_, 0, reinterpret_cast<char*>(&exponent_) -
    reinterpret_cast<char*>(&intensity_) + sizeof(exponent_));
  _cached_size_ = 0;
}

YLight::~YLight() {
  // @@protoc_insertion_point(destructor:y3d.YLight)
  SharedDtor();
}

void YLight::SharedDtor() {
}

void YLight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YLight::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YLight_descriptor_;
}

const YLight& YLight::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YLight> YLight_default_instance_;

YLight* YLight::New(::google::protobuf::Arena* arena) const {
  YLight* n = new YLight;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YLight::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YLight)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YLight, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YLight*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(intensity_, exponent_);

#undef ZR_HELPER_
#undef ZR_

  diffuse_.Clear();
  specular_.Clear();
  excludedmeshesids_.Clear();
  includedonlymeshesids_.Clear();
}

bool YLight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YLight)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float diffuse = 3;
      case 3: {
        if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_diffuse())));
        } else if (tag == 29) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26, input, this->mutable_diffuse())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_specular;
        break;
      }

      // repeated float specular = 4;
      case 4: {
        if (tag == 34) {
         parse_specular:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_specular())));
        } else if (tag == 37) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34, input, this->mutable_specular())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_intensity;
        break;
      }

      // optional float intensity = 5;
      case 5: {
        if (tag == 45) {
         parse_intensity:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &intensity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_range;
        break;
      }

      // optional float range = 6;
      case 6: {
        if (tag == 53) {
         parse_range:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_angle;
        break;
      }

      // optional float angle = 7;
      case 7: {
        if (tag == 61) {
         parse_angle:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_exponent;
        break;
      }

      // optional float exponent = 8;
      case 8: {
        if (tag == 69) {
         parse_exponent:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &exponent_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_excludedMeshesIds;
        break;
      }

      // repeated string excludedMeshesIds = 9;
      case 9: {
        if (tag == 74) {
         parse_excludedMeshesIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_excludedmeshesids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->excludedmeshesids(this->excludedmeshesids_size() - 1).data(),
            this->excludedmeshesids(this->excludedmeshesids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YLight.excludedMeshesIds"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_excludedMeshesIds;
        if (input->ExpectTag(82)) goto parse_includedOnlyMeshesIds;
        break;
      }

      // repeated string includedOnlyMeshesIds = 10;
      case 10: {
        if (tag == 82) {
         parse_includedOnlyMeshesIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_includedonlymeshesids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->includedonlymeshesids(this->includedonlymeshesids_size() - 1).data(),
            this->includedonlymeshesids(this->includedonlymeshesids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YLight.includedOnlyMeshesIds"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_includedOnlyMeshesIds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YLight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YLight)
  return false;
#undef DO_
}

void YLight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YLight)
  // repeated float diffuse = 3;
  if (this->diffuse_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_diffuse_cached_byte_size_);
  }
  for (int i = 0; i < this->diffuse_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->diffuse(i), output);
  }

  // repeated float specular = 4;
  if (this->specular_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_specular_cached_byte_size_);
  }
  for (int i = 0; i < this->specular_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->specular(i), output);
  }

  // optional float intensity = 5;
  if (this->intensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->intensity(), output);
  }

  // optional float range = 6;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->range(), output);
  }

  // optional float angle = 7;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->angle(), output);
  }

  // optional float exponent = 8;
  if (this->exponent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->exponent(), output);
  }

  // repeated string excludedMeshesIds = 9;
  for (int i = 0; i < this->excludedmeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->excludedmeshesids(i).data(), this->excludedmeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.excludedMeshesIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->excludedmeshesids(i), output);
  }

  // repeated string includedOnlyMeshesIds = 10;
  for (int i = 0; i < this->includedonlymeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->includedonlymeshesids(i).data(), this->includedonlymeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.includedOnlyMeshesIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->includedonlymeshesids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YLight)
}

::google::protobuf::uint8* YLight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YLight)
  // repeated float diffuse = 3;
  if (this->diffuse_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _diffuse_cached_byte_size_, target);
  }
  for (int i = 0; i < this->diffuse_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->diffuse(i), target);
  }

  // repeated float specular = 4;
  if (this->specular_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _specular_cached_byte_size_, target);
  }
  for (int i = 0; i < this->specular_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->specular(i), target);
  }

  // optional float intensity = 5;
  if (this->intensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->intensity(), target);
  }

  // optional float range = 6;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->range(), target);
  }

  // optional float angle = 7;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->angle(), target);
  }

  // optional float exponent = 8;
  if (this->exponent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->exponent(), target);
  }

  // repeated string excludedMeshesIds = 9;
  for (int i = 0; i < this->excludedmeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->excludedmeshesids(i).data(), this->excludedmeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.excludedMeshesIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->excludedmeshesids(i), target);
  }

  // repeated string includedOnlyMeshesIds = 10;
  for (int i = 0; i < this->includedonlymeshesids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->includedonlymeshesids(i).data(), this->includedonlymeshesids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLight.includedOnlyMeshesIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->includedonlymeshesids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YLight)
  return target;
}

size_t YLight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YLight)
  size_t total_size = 0;

  // optional float intensity = 5;
  if (this->intensity() != 0) {
    total_size += 1 + 4;
  }

  // optional float range = 6;
  if (this->range() != 0) {
    total_size += 1 + 4;
  }

  // optional float angle = 7;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // optional float exponent = 8;
  if (this->exponent() != 0) {
    total_size += 1 + 4;
  }

  // repeated float diffuse = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->diffuse_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _diffuse_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float specular = 4;
  {
    size_t data_size = 0;
    unsigned int count = this->specular_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _specular_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string excludedMeshesIds = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->excludedmeshesids_size());
  for (int i = 0; i < this->excludedmeshesids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->excludedmeshesids(i));
  }

  // repeated string includedOnlyMeshesIds = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->includedonlymeshesids_size());
  for (int i = 0; i < this->includedonlymeshesids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->includedonlymeshesids(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YLight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YLight)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YLight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YLight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YLight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YLight)
    UnsafeMergeFrom(*source);
  }
}

void YLight::MergeFrom(const YLight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YLight)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YLight::UnsafeMergeFrom(const YLight& from) {
  GOOGLE_DCHECK(&from != this);
  diffuse_.UnsafeMergeFrom(from.diffuse_);
  specular_.UnsafeMergeFrom(from.specular_);
  excludedmeshesids_.UnsafeMergeFrom(from.excludedmeshesids_);
  includedonlymeshesids_.UnsafeMergeFrom(from.includedonlymeshesids_);
  if (from.intensity() != 0) {
    set_intensity(from.intensity());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.exponent() != 0) {
    set_exponent(from.exponent());
  }
}

void YLight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YLight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YLight::CopyFrom(const YLight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YLight)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YLight::IsInitialized() const {

  return true;
}

void YLight::Swap(YLight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YLight::InternalSwap(YLight* other) {
  diffuse_.UnsafeArenaSwap(&other->diffuse_);
  specular_.UnsafeArenaSwap(&other->specular_);
  std::swap(intensity_, other->intensity_);
  std::swap(range_, other->range_);
  std::swap(angle_, other->angle_);
  std::swap(exponent_, other->exponent_);
  excludedmeshesids_.UnsafeArenaSwap(&other->excludedmeshesids_);
  includedonlymeshesids_.UnsafeArenaSwap(&other->includedonlymeshesids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YLight::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YLight_descriptor_;
  metadata.reflection = YLight_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YLight

// repeated float diffuse = 3;
int YLight::diffuse_size() const {
  return diffuse_.size();
}
void YLight::clear_diffuse() {
  diffuse_.Clear();
}
float YLight::diffuse(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.diffuse)
  return diffuse_.Get(index);
}
void YLight::set_diffuse(int index, float value) {
  diffuse_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YLight.diffuse)
}
void YLight::add_diffuse(float value) {
  diffuse_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.diffuse)
}
const ::google::protobuf::RepeatedField< float >&
YLight::diffuse() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.diffuse)
  return diffuse_;
}
::google::protobuf::RepeatedField< float >*
YLight::mutable_diffuse() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.diffuse)
  return &diffuse_;
}

// repeated float specular = 4;
int YLight::specular_size() const {
  return specular_.size();
}
void YLight::clear_specular() {
  specular_.Clear();
}
float YLight::specular(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.specular)
  return specular_.Get(index);
}
void YLight::set_specular(int index, float value) {
  specular_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YLight.specular)
}
void YLight::add_specular(float value) {
  specular_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.specular)
}
const ::google::protobuf::RepeatedField< float >&
YLight::specular() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.specular)
  return specular_;
}
::google::protobuf::RepeatedField< float >*
YLight::mutable_specular() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.specular)
  return &specular_;
}

// optional float intensity = 5;
void YLight::clear_intensity() {
  intensity_ = 0;
}
float YLight::intensity() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.intensity)
  return intensity_;
}
void YLight::set_intensity(float value) {
  
  intensity_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.intensity)
}

// optional float range = 6;
void YLight::clear_range() {
  range_ = 0;
}
float YLight::range() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.range)
  return range_;
}
void YLight::set_range(float value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.range)
}

// optional float angle = 7;
void YLight::clear_angle() {
  angle_ = 0;
}
float YLight::angle() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.angle)
  return angle_;
}
void YLight::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.angle)
}

// optional float exponent = 8;
void YLight::clear_exponent() {
  exponent_ = 0;
}
float YLight::exponent() const {
  // @@protoc_insertion_point(field_get:y3d.YLight.exponent)
  return exponent_;
}
void YLight::set_exponent(float value) {
  
  exponent_ = value;
  // @@protoc_insertion_point(field_set:y3d.YLight.exponent)
}

// repeated string excludedMeshesIds = 9;
int YLight::excludedmeshesids_size() const {
  return excludedmeshesids_.size();
}
void YLight::clear_excludedmeshesids() {
  excludedmeshesids_.Clear();
}
const ::std::string& YLight::excludedmeshesids(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_.Get(index);
}
::std::string* YLight::mutable_excludedmeshesids(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_.Mutable(index);
}
void YLight::set_excludedmeshesids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YLight.excludedMeshesIds)
  excludedmeshesids_.Mutable(index)->assign(value);
}
void YLight::set_excludedmeshesids(int index, const char* value) {
  excludedmeshesids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YLight.excludedMeshesIds)
}
void YLight::set_excludedmeshesids(int index, const char* value, size_t size) {
  excludedmeshesids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YLight.excludedMeshesIds)
}
::std::string* YLight::add_excludedmeshesids() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_.Add();
}
void YLight::add_excludedmeshesids(const ::std::string& value) {
  excludedmeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.excludedMeshesIds)
}
void YLight::add_excludedmeshesids(const char* value) {
  excludedmeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YLight.excludedMeshesIds)
}
void YLight::add_excludedmeshesids(const char* value, size_t size) {
  excludedmeshesids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YLight.excludedMeshesIds)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
YLight::excludedmeshesids() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.excludedMeshesIds)
  return excludedmeshesids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
YLight::mutable_excludedmeshesids() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.excludedMeshesIds)
  return &excludedmeshesids_;
}

// repeated string includedOnlyMeshesIds = 10;
int YLight::includedonlymeshesids_size() const {
  return includedonlymeshesids_.size();
}
void YLight::clear_includedonlymeshesids() {
  includedonlymeshesids_.Clear();
}
const ::std::string& YLight::includedonlymeshesids(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_.Get(index);
}
::std::string* YLight::mutable_includedonlymeshesids(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_.Mutable(index);
}
void YLight::set_includedonlymeshesids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YLight.includedOnlyMeshesIds)
  includedonlymeshesids_.Mutable(index)->assign(value);
}
void YLight::set_includedonlymeshesids(int index, const char* value) {
  includedonlymeshesids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YLight.includedOnlyMeshesIds)
}
void YLight::set_includedonlymeshesids(int index, const char* value, size_t size) {
  includedonlymeshesids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YLight.includedOnlyMeshesIds)
}
::std::string* YLight::add_includedonlymeshesids() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_.Add();
}
void YLight::add_includedonlymeshesids(const ::std::string& value) {
  includedonlymeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YLight.includedOnlyMeshesIds)
}
void YLight::add_includedonlymeshesids(const char* value) {
  includedonlymeshesids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YLight.includedOnlyMeshesIds)
}
void YLight::add_includedonlymeshesids(const char* value, size_t size) {
  includedonlymeshesids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YLight.includedOnlyMeshesIds)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
YLight::includedonlymeshesids() const {
  // @@protoc_insertion_point(field_list:y3d.YLight.includedOnlyMeshesIds)
  return includedonlymeshesids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
YLight::mutable_includedonlymeshesids() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLight.includedOnlyMeshesIds)
  return &includedonlymeshesids_;
}

inline const YLight* YLight::internal_default_instance() {
  return &YLight_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YCamera::kRotationFieldNumber;
const int YCamera::kTargetFieldNumber;
const int YCamera::kFovFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YCamera::YCamera()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YCamera)
}

void YCamera::InitAsDefaultInstance() {
}

YCamera::YCamera(const YCamera& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YCamera)
}

void YCamera::SharedCtor() {
  fov_ = 0;
  _cached_size_ = 0;
}

YCamera::~YCamera() {
  // @@protoc_insertion_point(destructor:y3d.YCamera)
  SharedDtor();
}

void YCamera::SharedDtor() {
}

void YCamera::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YCamera::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YCamera_descriptor_;
}

const YCamera& YCamera::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YCamera> YCamera_default_instance_;

YCamera* YCamera::New(::google::protobuf::Arena* arena) const {
  YCamera* n = new YCamera;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YCamera::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YCamera)
  fov_ = 0;
  rotation_.Clear();
  target_.Clear();
}

bool YCamera::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YCamera)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float rotation = 3;
      case 3: {
        if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rotation())));
        } else if (tag == 29) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26, input, this->mutable_rotation())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_target;
        break;
      }

      // repeated float target = 4;
      case 4: {
        if (tag == 34) {
         parse_target:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_target())));
        } else if (tag == 37) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34, input, this->mutable_target())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_fov;
        break;
      }

      // optional float fov = 5;
      case 5: {
        if (tag == 45) {
         parse_fov:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fov_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YCamera)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YCamera)
  return false;
#undef DO_
}

void YCamera::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YCamera)
  // repeated float rotation = 3;
  if (this->rotation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_rotation_cached_byte_size_);
  }
  for (int i = 0; i < this->rotation_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->rotation(i), output);
  }

  // repeated float target = 4;
  if (this->target_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_target_cached_byte_size_);
  }
  for (int i = 0; i < this->target_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->target(i), output);
  }

  // optional float fov = 5;
  if (this->fov() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->fov(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YCamera)
}

::google::protobuf::uint8* YCamera::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YCamera)
  // repeated float rotation = 3;
  if (this->rotation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _rotation_cached_byte_size_, target);
  }
  for (int i = 0; i < this->rotation_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->rotation(i), target);
  }

  // repeated float target = 4;
  if (this->target_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _target_cached_byte_size_, target);
  }
  for (int i = 0; i < this->target_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->target(i), target);
  }

  // optional float fov = 5;
  if (this->fov() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->fov(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YCamera)
  return target;
}

size_t YCamera::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YCamera)
  size_t total_size = 0;

  // optional float fov = 5;
  if (this->fov() != 0) {
    total_size += 1 + 4;
  }

  // repeated float rotation = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->rotation_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rotation_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float target = 4;
  {
    size_t data_size = 0;
    unsigned int count = this->target_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YCamera::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YCamera)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YCamera* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YCamera>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YCamera)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YCamera)
    UnsafeMergeFrom(*source);
  }
}

void YCamera::MergeFrom(const YCamera& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YCamera)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YCamera::UnsafeMergeFrom(const YCamera& from) {
  GOOGLE_DCHECK(&from != this);
  rotation_.UnsafeMergeFrom(from.rotation_);
  target_.UnsafeMergeFrom(from.target_);
  if (from.fov() != 0) {
    set_fov(from.fov());
  }
}

void YCamera::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YCamera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YCamera::CopyFrom(const YCamera& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YCamera)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YCamera::IsInitialized() const {

  return true;
}

void YCamera::Swap(YCamera* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YCamera::InternalSwap(YCamera* other) {
  rotation_.UnsafeArenaSwap(&other->rotation_);
  target_.UnsafeArenaSwap(&other->target_);
  std::swap(fov_, other->fov_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YCamera::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YCamera_descriptor_;
  metadata.reflection = YCamera_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YCamera

// repeated float rotation = 3;
int YCamera::rotation_size() const {
  return rotation_.size();
}
void YCamera::clear_rotation() {
  rotation_.Clear();
}
float YCamera::rotation(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YCamera.rotation)
  return rotation_.Get(index);
}
void YCamera::set_rotation(int index, float value) {
  rotation_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YCamera.rotation)
}
void YCamera::add_rotation(float value) {
  rotation_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YCamera.rotation)
}
const ::google::protobuf::RepeatedField< float >&
YCamera::rotation() const {
  // @@protoc_insertion_point(field_list:y3d.YCamera.rotation)
  return rotation_;
}
::google::protobuf::RepeatedField< float >*
YCamera::mutable_rotation() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YCamera.rotation)
  return &rotation_;
}

// repeated float target = 4;
int YCamera::target_size() const {
  return target_.size();
}
void YCamera::clear_target() {
  target_.Clear();
}
float YCamera::target(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YCamera.target)
  return target_.Get(index);
}
void YCamera::set_target(int index, float value) {
  target_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YCamera.target)
}
void YCamera::add_target(float value) {
  target_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YCamera.target)
}
const ::google::protobuf::RepeatedField< float >&
YCamera::target() const {
  // @@protoc_insertion_point(field_list:y3d.YCamera.target)
  return target_;
}
::google::protobuf::RepeatedField< float >*
YCamera::mutable_target() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YCamera.target)
  return &target_;
}

// optional float fov = 5;
void YCamera::clear_fov() {
  fov_ = 0;
}
float YCamera::fov() const {
  // @@protoc_insertion_point(field_get:y3d.YCamera.fov)
  return fov_;
}
void YCamera::set_fov(float value) {
  
  fov_ = value;
  // @@protoc_insertion_point(field_set:y3d.YCamera.fov)
}

inline const YCamera* YCamera::internal_default_instance() {
  return &YCamera_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* YMesh_MeshType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YMesh_MeshType_descriptor_;
}
bool YMesh_MeshType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const YMesh_MeshType YMesh::Unknown;
const YMesh_MeshType YMesh::Editable_Mesh;
const YMesh_MeshType YMesh::Editable_Poly;
const YMesh_MeshType YMesh::Box;
const YMesh_MeshType YMesh::Sphere;
const YMesh_MeshType YMesh::GeoSphere;
const YMesh_MeshType YMesh::Cylinder;
const YMesh_MeshType YMesh::Tube;
const YMesh_MeshType YMesh::Torus;
const YMesh_MeshType YMesh::Pyramid;
const YMesh_MeshType YMesh::Teapot;
const YMesh_MeshType YMesh::Plane;
const YMesh_MeshType YMesh::Target;
const YMesh_MeshType YMesh::Cone;
const YMesh_MeshType YMesh::MeshType_MIN;
const YMesh_MeshType YMesh::MeshType_MAX;
const int YMesh::MeshType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* YMesh_XrefStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YMesh_XrefStatus_descriptor_;
}
bool YMesh_XrefStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const YMesh_XrefStatus YMesh::ORIGINAL;
const YMesh_XrefStatus YMesh::XREF_HIGHT;
const YMesh_XrefStatus YMesh::XREF_LOW;
const YMesh_XrefStatus YMesh::XREF_LOW_DISPLAY;
const YMesh_XrefStatus YMesh::BOX;
const YMesh_XrefStatus YMesh::MERGED;
const YMesh_XrefStatus YMesh::FINAL;
const YMesh_XrefStatus YMesh::XrefStatus_MIN;
const YMesh_XrefStatus YMesh::XrefStatus_MAX;
const int YMesh::XrefStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YMesh::kNumFacesFieldNumber;
const int YMesh::kBboxFieldNumber;
const int YMesh::kResIdFieldNumber;
const int YMesh::kXrefFieldNumber;
const int YMesh::kXstatusFieldNumber;
const int YMesh::kMtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YMesh::YMesh()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YMesh)
}

void YMesh::InitAsDefaultInstance() {
  bbox_ = const_cast< ::y3d::YBox3*>(
      ::y3d::YBox3::internal_default_instance());
}

YMesh::YMesh(const YMesh& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YMesh)
}

void YMesh::SharedCtor() {
  res_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bbox_ = NULL;
  ::memset(&num_faces_, 0, reinterpret_cast<char*>(&mtype_) -
    reinterpret_cast<char*>(&num_faces_) + sizeof(mtype_));
  _cached_size_ = 0;
}

YMesh::~YMesh() {
  // @@protoc_insertion_point(destructor:y3d.YMesh)
  SharedDtor();
}

void YMesh::SharedDtor() {
  res_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &YMesh_default_instance_.get()) {
    delete bbox_;
  }
}

void YMesh::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YMesh::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YMesh_descriptor_;
}

const YMesh& YMesh::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YMesh> YMesh_default_instance_;

YMesh* YMesh::New(::google::protobuf::Arena* arena) const {
  YMesh* n = new YMesh;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YMesh::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YMesh)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YMesh, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YMesh*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(num_faces_, mtype_);
  if (GetArenaNoVirtual() == NULL && bbox_ != NULL) delete bbox_;
  bbox_ = NULL;
  res_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  xref_.Clear();
}

bool YMesh::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YMesh)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_faces = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_faces_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bbox;
        break;
      }

      // optional .y3d.YBox3 bbox = 2;
      case 2: {
        if (tag == 18) {
         parse_bbox:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bbox()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_res_id;
        break;
      }

      // optional string res_id = 3;
      case 3: {
        if (tag == 26) {
         parse_res_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_res_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->res_id().data(), this->res_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YMesh.res_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_xref;
        break;
      }

      // repeated int32 xref = 4;
      case 4: {
        if (tag == 34) {
         parse_xref:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_xref())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34, input, this->mutable_xref())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_xstatus;
        break;
      }

      // optional .y3d.YMesh.XrefStatus xstatus = 5;
      case 5: {
        if (tag == 40) {
         parse_xstatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_xstatus(static_cast< ::y3d::YMesh_XrefStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_mtype;
        break;
      }

      // optional .y3d.YMesh.MeshType mtype = 6;
      case 6: {
        if (tag == 48) {
         parse_mtype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mtype(static_cast< ::y3d::YMesh_MeshType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YMesh)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YMesh)
  return false;
#undef DO_
}

void YMesh::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YMesh)
  // optional int32 num_faces = 1;
  if (this->num_faces() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_faces(), output);
  }

  // optional .y3d.YBox3 bbox = 2;
  if (this->has_bbox()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->bbox_, output);
  }

  // optional string res_id = 3;
  if (this->res_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_id().data(), this->res_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMesh.res_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->res_id(), output);
  }

  // repeated int32 xref = 4;
  if (this->xref_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_xref_cached_byte_size_);
  }
  for (int i = 0; i < this->xref_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->xref(i), output);
  }

  // optional .y3d.YMesh.XrefStatus xstatus = 5;
  if (this->xstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->xstatus(), output);
  }

  // optional .y3d.YMesh.MeshType mtype = 6;
  if (this->mtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->mtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YMesh)
}

::google::protobuf::uint8* YMesh::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YMesh)
  // optional int32 num_faces = 1;
  if (this->num_faces() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_faces(), target);
  }

  // optional .y3d.YBox3 bbox = 2;
  if (this->has_bbox()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->bbox_, false, target);
  }

  // optional string res_id = 3;
  if (this->res_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_id().data(), this->res_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YMesh.res_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->res_id(), target);
  }

  // repeated int32 xref = 4;
  if (this->xref_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _xref_cached_byte_size_, target);
  }
  for (int i = 0; i < this->xref_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->xref(i), target);
  }

  // optional .y3d.YMesh.XrefStatus xstatus = 5;
  if (this->xstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->xstatus(), target);
  }

  // optional .y3d.YMesh.MeshType mtype = 6;
  if (this->mtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->mtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YMesh)
  return target;
}

size_t YMesh::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YMesh)
  size_t total_size = 0;

  // optional int32 num_faces = 1;
  if (this->num_faces() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_faces());
  }

  // optional .y3d.YBox3 bbox = 2;
  if (this->has_bbox()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bbox_);
  }

  // optional string res_id = 3;
  if (this->res_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->res_id());
  }

  // optional .y3d.YMesh.XrefStatus xstatus = 5;
  if (this->xstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->xstatus());
  }

  // optional .y3d.YMesh.MeshType mtype = 6;
  if (this->mtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mtype());
  }

  // repeated int32 xref = 4;
  {
    size_t data_size = 0;
    unsigned int count = this->xref_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->xref(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _xref_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YMesh::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YMesh)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YMesh* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YMesh>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YMesh)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YMesh)
    UnsafeMergeFrom(*source);
  }
}

void YMesh::MergeFrom(const YMesh& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YMesh)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YMesh::UnsafeMergeFrom(const YMesh& from) {
  GOOGLE_DCHECK(&from != this);
  xref_.UnsafeMergeFrom(from.xref_);
  if (from.num_faces() != 0) {
    set_num_faces(from.num_faces());
  }
  if (from.has_bbox()) {
    mutable_bbox()->::y3d::YBox3::MergeFrom(from.bbox());
  }
  if (from.res_id().size() > 0) {

    res_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_id_);
  }
  if (from.xstatus() != 0) {
    set_xstatus(from.xstatus());
  }
  if (from.mtype() != 0) {
    set_mtype(from.mtype());
  }
}

void YMesh::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YMesh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YMesh::CopyFrom(const YMesh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YMesh)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YMesh::IsInitialized() const {

  return true;
}

void YMesh::Swap(YMesh* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YMesh::InternalSwap(YMesh* other) {
  std::swap(num_faces_, other->num_faces_);
  std::swap(bbox_, other->bbox_);
  res_id_.Swap(&other->res_id_);
  xref_.UnsafeArenaSwap(&other->xref_);
  std::swap(xstatus_, other->xstatus_);
  std::swap(mtype_, other->mtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YMesh::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YMesh_descriptor_;
  metadata.reflection = YMesh_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YMesh

// optional int32 num_faces = 1;
void YMesh::clear_num_faces() {
  num_faces_ = 0;
}
::google::protobuf::int32 YMesh::num_faces() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.num_faces)
  return num_faces_;
}
void YMesh::set_num_faces(::google::protobuf::int32 value) {
  
  num_faces_ = value;
  // @@protoc_insertion_point(field_set:y3d.YMesh.num_faces)
}

// optional .y3d.YBox3 bbox = 2;
bool YMesh::has_bbox() const {
  return this != internal_default_instance() && bbox_ != NULL;
}
void YMesh::clear_bbox() {
  if (GetArenaNoVirtual() == NULL && bbox_ != NULL) delete bbox_;
  bbox_ = NULL;
}
const ::y3d::YBox3& YMesh::bbox() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.bbox)
  return bbox_ != NULL ? *bbox_
                         : *::y3d::YBox3::internal_default_instance();
}
::y3d::YBox3* YMesh::mutable_bbox() {
  
  if (bbox_ == NULL) {
    bbox_ = new ::y3d::YBox3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YMesh.bbox)
  return bbox_;
}
::y3d::YBox3* YMesh::release_bbox() {
  // @@protoc_insertion_point(field_release:y3d.YMesh.bbox)
  
  ::y3d::YBox3* temp = bbox_;
  bbox_ = NULL;
  return temp;
}
void YMesh::set_allocated_bbox(::y3d::YBox3* bbox) {
  delete bbox_;
  bbox_ = bbox;
  if (bbox) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YMesh.bbox)
}

// optional string res_id = 3;
void YMesh::clear_res_id() {
  res_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YMesh::res_id() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.res_id)
  return res_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YMesh::set_res_id(const ::std::string& value) {
  
  res_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YMesh.res_id)
}
void YMesh::set_res_id(const char* value) {
  
  res_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YMesh.res_id)
}
void YMesh::set_res_id(const char* value, size_t size) {
  
  res_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YMesh.res_id)
}
::std::string* YMesh::mutable_res_id() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YMesh.res_id)
  return res_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YMesh::release_res_id() {
  // @@protoc_insertion_point(field_release:y3d.YMesh.res_id)
  
  return res_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YMesh::set_allocated_res_id(::std::string* res_id) {
  if (res_id != NULL) {
    
  } else {
    
  }
  res_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), res_id);
  // @@protoc_insertion_point(field_set_allocated:y3d.YMesh.res_id)
}

// repeated int32 xref = 4;
int YMesh::xref_size() const {
  return xref_.size();
}
void YMesh::clear_xref() {
  xref_.Clear();
}
::google::protobuf::int32 YMesh::xref(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.xref)
  return xref_.Get(index);
}
void YMesh::set_xref(int index, ::google::protobuf::int32 value) {
  xref_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.YMesh.xref)
}
void YMesh::add_xref(::google::protobuf::int32 value) {
  xref_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.YMesh.xref)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
YMesh::xref() const {
  // @@protoc_insertion_point(field_list:y3d.YMesh.xref)
  return xref_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
YMesh::mutable_xref() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YMesh.xref)
  return &xref_;
}

// optional .y3d.YMesh.XrefStatus xstatus = 5;
void YMesh::clear_xstatus() {
  xstatus_ = 0;
}
::y3d::YMesh_XrefStatus YMesh::xstatus() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.xstatus)
  return static_cast< ::y3d::YMesh_XrefStatus >(xstatus_);
}
void YMesh::set_xstatus(::y3d::YMesh_XrefStatus value) {
  
  xstatus_ = value;
  // @@protoc_insertion_point(field_set:y3d.YMesh.xstatus)
}

// optional .y3d.YMesh.MeshType mtype = 6;
void YMesh::clear_mtype() {
  mtype_ = 0;
}
::y3d::YMesh_MeshType YMesh::mtype() const {
  // @@protoc_insertion_point(field_get:y3d.YMesh.mtype)
  return static_cast< ::y3d::YMesh_MeshType >(mtype_);
}
void YMesh::set_mtype(::y3d::YMesh_MeshType value) {
  
  mtype_ = value;
  // @@protoc_insertion_point(field_set:y3d.YMesh.mtype)
}

inline const YMesh* YMesh::internal_default_instance() {
  return &YMesh_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YObject::kNameFieldNumber;
const int YObject::kPosFieldNumber;
const int YObject::kExtraFieldNumber;
const int YObject::kOtypeFieldNumber;
const int YObject::kTagsFieldNumber;
const int YObject::kCateIdFieldNumber;
const int YObject::kLightFieldNumber;
const int YObject::kCameraFieldNumber;
const int YObject::kMeshFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YObject::YObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YObject)
}

void YObject::InitAsDefaultInstance() {
  pos_ = const_cast< ::y3d::YPoint3*>(
      ::y3d::YPoint3::internal_default_instance());
  YObject_default_oneof_instance_->light_ = const_cast< ::y3d::YLight*>(
      ::y3d::YLight::internal_default_instance());
  YObject_default_oneof_instance_->camera_ = const_cast< ::y3d::YCamera*>(
      ::y3d::YCamera::internal_default_instance());
  YObject_default_oneof_instance_->mesh_ = const_cast< ::y3d::YMesh*>(
      ::y3d::YMesh::internal_default_instance());
}

YObject::YObject(const YObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YObject)
}

void YObject::SharedCtor() {
  extra_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  extra_.SetEntryDescriptor(
      &::y3d::YObject_ExtraEntry_descriptor_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pos_ = NULL;
  ::memset(&otype_, 0, reinterpret_cast<char*>(&cate_id_) -
    reinterpret_cast<char*>(&otype_) + sizeof(cate_id_));
  clear_has_data();
  _cached_size_ = 0;
}

YObject::~YObject() {
  // @@protoc_insertion_point(destructor:y3d.YObject)
  SharedDtor();
}

void YObject::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_data()) {
    clear_data();
  }
  if (this != &YObject_default_instance_.get()) {
    delete pos_;
  }
}

void YObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YObject_descriptor_;
}

const YObject& YObject::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YObject> YObject_default_instance_;

YObject* YObject::New(::google::protobuf::Arena* arena) const {
  YObject* n = new YObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YObject::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:y3d.YObject)
  switch (data_case()) {
    case kLight: {
      delete data_.light_;
      break;
    }
    case kCamera: {
      delete data_.camera_;
      break;
    }
    case kMesh: {
      delete data_.mesh_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void YObject::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YObject)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YObject, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YObject*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(otype_, cate_id_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  extra_.Clear();
  tags_.Clear();
  clear_data();
}

bool YObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YObject.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pos;
        break;
      }

      // optional .y3d.YPoint3 pos = 3;
      case 3: {
        if (tag == 26) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_extra;
        break;
      }

      // map<string, .google.protobuf.Any> extra = 5;
      case 5: {
        if (tag == 42) {
         parse_extra:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra:
          YObject_ExtraEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::protobuf::Any,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Any > > parser(&extra_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YObject.ExtraEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_extra;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(48)) goto parse_otype;
        break;
      }

      // optional .y3d.ObjectType otype = 6;
      case 6: {
        if (tag == 48) {
         parse_otype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_otype(static_cast< ::y3d::ObjectType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_tags;
        break;
      }

      // repeated string tags = 7;
      case 7: {
        if (tag == 58) {
         parse_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YObject.tags"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_tags;
        if (input->ExpectTag(64)) goto parse_cate_id;
        break;
      }

      // optional int32 cate_id = 8;
      case 8: {
        if (tag == 64) {
         parse_cate_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cate_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_light;
        break;
      }

      // optional .y3d.YLight light = 10;
      case 10: {
        if (tag == 82) {
         parse_light:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_light()));
        } else {
          goto handle_unusual;
        }
        goto after_mesh;
        break;
      }

      // optional .y3d.YCamera camera = 11;
      case 11: {
        if (tag == 90) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_camera()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_mesh;
        break;
      }

      // optional .y3d.YMesh mesh = 12;
      case 12: {
        if (tag == 98) {
         parse_mesh:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mesh()));
        } else {
          goto handle_unusual;
        }
       after_mesh:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YObject)
  return false;
#undef DO_
}

void YObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YObject)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .y3d.YPoint3 pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  // map<string, .google.protobuf.Any> extra = 5;
  if (!this->extra().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YObject.ExtraEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->extra().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->extra().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(extra_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it) {
        entry.reset(extra_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .y3d.ObjectType otype = 6;
  if (this->otype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->otype(), output);
  }

  // repeated string tags = 7;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->tags(i), output);
  }

  // optional int32 cate_id = 8;
  if (this->cate_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->cate_id(), output);
  }

  // optional .y3d.YLight light = 10;
  if (has_light()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *data_.light_, output);
  }

  // optional .y3d.YCamera camera = 11;
  if (has_camera()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *data_.camera_, output);
  }

  // optional .y3d.YMesh mesh = 12;
  if (has_mesh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *data_.mesh_, output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YObject)
}

::google::protobuf::uint8* YObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YObject)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .y3d.YPoint3 pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pos_, false, target);
  }

  // map<string, .google.protobuf.Any> extra = 5;
  if (!this->extra().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YObject.ExtraEntry.key");
      }
    };

    if (deterministic &&
        this->extra().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->extra().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(extra_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->extra().begin();
          it != this->extra().end(); ++it) {
        entry.reset(extra_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .y3d.ObjectType otype = 6;
  if (this->otype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->otype(), target);
  }

  // repeated string tags = 7;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YObject.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->tags(i), target);
  }

  // optional int32 cate_id = 8;
  if (this->cate_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->cate_id(), target);
  }

  // optional .y3d.YLight light = 10;
  if (has_light()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *data_.light_, false, target);
  }

  // optional .y3d.YCamera camera = 11;
  if (has_camera()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *data_.camera_, false, target);
  }

  // optional .y3d.YMesh mesh = 12;
  if (has_mesh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *data_.mesh_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YObject)
  return target;
}

size_t YObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YObject)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .y3d.YPoint3 pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // optional .y3d.ObjectType otype = 6;
  if (this->otype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->otype());
  }

  // optional int32 cate_id = 8;
  if (this->cate_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cate_id());
  }

  // map<string, .google.protobuf.Any> extra = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->extra_size());
  {
    ::google::protobuf::scoped_ptr<YObject_ExtraEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
        it = this->extra().begin();
        it != this->extra().end(); ++it) {
      entry.reset(extra_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string tags = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0; i < this->tags_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  switch (data_case()) {
    // optional .y3d.YLight light = 10;
    case kLight: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_.light_);
      break;
    }
    // optional .y3d.YCamera camera = 11;
    case kCamera: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_.camera_);
      break;
    }
    // optional .y3d.YMesh mesh = 12;
    case kMesh: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_.mesh_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YObject)
    UnsafeMergeFrom(*source);
  }
}

void YObject::MergeFrom(const YObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YObject)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YObject::UnsafeMergeFrom(const YObject& from) {
  GOOGLE_DCHECK(&from != this);
  extra_.MergeFrom(from.extra_);
  tags_.UnsafeMergeFrom(from.tags_);
  switch (from.data_case()) {
    case kLight: {
      mutable_light()->::y3d::YLight::MergeFrom(from.light());
      break;
    }
    case kCamera: {
      mutable_camera()->::y3d::YCamera::MergeFrom(from.camera());
      break;
    }
    case kMesh: {
      mutable_mesh()->::y3d::YMesh::MergeFrom(from.mesh());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_pos()) {
    mutable_pos()->::y3d::YPoint3::MergeFrom(from.pos());
  }
  if (from.otype() != 0) {
    set_otype(from.otype());
  }
  if (from.cate_id() != 0) {
    set_cate_id(from.cate_id());
  }
}

void YObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YObject::CopyFrom(const YObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YObject)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YObject::IsInitialized() const {

  return true;
}

void YObject::Swap(YObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YObject::InternalSwap(YObject* other) {
  name_.Swap(&other->name_);
  std::swap(pos_, other->pos_);
  extra_.Swap(&other->extra_);
  std::swap(otype_, other->otype_);
  tags_.UnsafeArenaSwap(&other->tags_);
  std::swap(cate_id_, other->cate_id_);
  std::swap(data_, other->data_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YObject_descriptor_;
  metadata.reflection = YObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YObject

// optional string name = 1;
void YObject::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YObject::name() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YObject::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YObject.name)
}
void YObject::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YObject.name)
}
void YObject::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YObject.name)
}
::std::string* YObject::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YObject.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YObject::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YObject.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YObject::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.name)
}

// optional .y3d.YPoint3 pos = 3;
bool YObject::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void YObject::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::y3d::YPoint3& YObject::pos() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.pos)
  return pos_ != NULL ? *pos_
                         : *::y3d::YPoint3::internal_default_instance();
}
::y3d::YPoint3* YObject::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::y3d::YPoint3;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.pos)
  return pos_;
}
::y3d::YPoint3* YObject::release_pos() {
  // @@protoc_insertion_point(field_release:y3d.YObject.pos)
  
  ::y3d::YPoint3* temp = pos_;
  pos_ = NULL;
  return temp;
}
void YObject::set_allocated_pos(::y3d::YPoint3* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.pos)
}

// map<string, .google.protobuf.Any> extra = 5;
int YObject::extra_size() const {
  return extra_.size();
}
void YObject::clear_extra() {
  extra_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >&
YObject::extra() const {
  // @@protoc_insertion_point(field_map:y3d.YObject.extra)
  return extra_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >*
YObject::mutable_extra() {
  // @@protoc_insertion_point(field_mutable_map:y3d.YObject.extra)
  return extra_.MutableMap();
}

// optional .y3d.ObjectType otype = 6;
void YObject::clear_otype() {
  otype_ = 0;
}
::y3d::ObjectType YObject::otype() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.otype)
  return static_cast< ::y3d::ObjectType >(otype_);
}
void YObject::set_otype(::y3d::ObjectType value) {
  
  otype_ = value;
  // @@protoc_insertion_point(field_set:y3d.YObject.otype)
}

// repeated string tags = 7;
int YObject::tags_size() const {
  return tags_.size();
}
void YObject::clear_tags() {
  tags_.Clear();
}
const ::std::string& YObject::tags(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YObject.tags)
  return tags_.Get(index);
}
::std::string* YObject::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YObject.tags)
  return tags_.Mutable(index);
}
void YObject::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YObject.tags)
  tags_.Mutable(index)->assign(value);
}
void YObject::set_tags(int index, const char* value) {
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YObject.tags)
}
void YObject::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YObject.tags)
}
::std::string* YObject::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YObject.tags)
  return tags_.Add();
}
void YObject::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YObject.tags)
}
void YObject::add_tags(const char* value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YObject.tags)
}
void YObject::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YObject.tags)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
YObject::tags() const {
  // @@protoc_insertion_point(field_list:y3d.YObject.tags)
  return tags_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
YObject::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YObject.tags)
  return &tags_;
}

// optional int32 cate_id = 8;
void YObject::clear_cate_id() {
  cate_id_ = 0;
}
::google::protobuf::int32 YObject::cate_id() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.cate_id)
  return cate_id_;
}
void YObject::set_cate_id(::google::protobuf::int32 value) {
  
  cate_id_ = value;
  // @@protoc_insertion_point(field_set:y3d.YObject.cate_id)
}

// optional .y3d.YLight light = 10;
bool YObject::has_light() const {
  return data_case() == kLight;
}
void YObject::set_has_light() {
  _oneof_case_[0] = kLight;
}
void YObject::clear_light() {
  if (has_light()) {
    delete data_.light_;
    clear_has_data();
  }
}
 const ::y3d::YLight& YObject::light() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.light)
  return has_light()
      ? *data_.light_
      : ::y3d::YLight::default_instance();
}
::y3d::YLight* YObject::mutable_light() {
  if (!has_light()) {
    clear_data();
    set_has_light();
    data_.light_ = new ::y3d::YLight;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.light)
  return data_.light_;
}
::y3d::YLight* YObject::release_light() {
  // @@protoc_insertion_point(field_release:y3d.YObject.light)
  if (has_light()) {
    clear_has_data();
    ::y3d::YLight* temp = data_.light_;
    data_.light_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YObject::set_allocated_light(::y3d::YLight* light) {
  clear_data();
  if (light) {
    set_has_light();
    data_.light_ = light;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.light)
}

// optional .y3d.YCamera camera = 11;
bool YObject::has_camera() const {
  return data_case() == kCamera;
}
void YObject::set_has_camera() {
  _oneof_case_[0] = kCamera;
}
void YObject::clear_camera() {
  if (has_camera()) {
    delete data_.camera_;
    clear_has_data();
  }
}
 const ::y3d::YCamera& YObject::camera() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.camera)
  return has_camera()
      ? *data_.camera_
      : ::y3d::YCamera::default_instance();
}
::y3d::YCamera* YObject::mutable_camera() {
  if (!has_camera()) {
    clear_data();
    set_has_camera();
    data_.camera_ = new ::y3d::YCamera;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.camera)
  return data_.camera_;
}
::y3d::YCamera* YObject::release_camera() {
  // @@protoc_insertion_point(field_release:y3d.YObject.camera)
  if (has_camera()) {
    clear_has_data();
    ::y3d::YCamera* temp = data_.camera_;
    data_.camera_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YObject::set_allocated_camera(::y3d::YCamera* camera) {
  clear_data();
  if (camera) {
    set_has_camera();
    data_.camera_ = camera;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.camera)
}

// optional .y3d.YMesh mesh = 12;
bool YObject::has_mesh() const {
  return data_case() == kMesh;
}
void YObject::set_has_mesh() {
  _oneof_case_[0] = kMesh;
}
void YObject::clear_mesh() {
  if (has_mesh()) {
    delete data_.mesh_;
    clear_has_data();
  }
}
 const ::y3d::YMesh& YObject::mesh() const {
  // @@protoc_insertion_point(field_get:y3d.YObject.mesh)
  return has_mesh()
      ? *data_.mesh_
      : ::y3d::YMesh::default_instance();
}
::y3d::YMesh* YObject::mutable_mesh() {
  if (!has_mesh()) {
    clear_data();
    set_has_mesh();
    data_.mesh_ = new ::y3d::YMesh;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YObject.mesh)
  return data_.mesh_;
}
::y3d::YMesh* YObject::release_mesh() {
  // @@protoc_insertion_point(field_release:y3d.YObject.mesh)
  if (has_mesh()) {
    clear_has_data();
    ::y3d::YMesh* temp = data_.mesh_;
    data_.mesh_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void YObject::set_allocated_mesh(::y3d::YMesh* mesh) {
  clear_data();
  if (mesh) {
    set_has_mesh();
    data_.mesh_ = mesh;
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YObject.mesh)
}

bool YObject::has_data() const {
  return data_case() != DATA_NOT_SET;
}
void YObject::clear_has_data() {
  _oneof_case_[0] = DATA_NOT_SET;
}
YObject::DataCase YObject::data_case() const {
  return YObject::DataCase(_oneof_case_[0]);
}
inline const YObject* YObject::internal_default_instance() {
  return &YObject_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YArea::kNameFieldNumber;
const int YArea::kGroupsFieldNumber;
const int YArea::kObjsFieldNumber;
const int YArea::kGversFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YArea::YArea()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YArea)
}

void YArea::InitAsDefaultInstance() {
}

YArea::YArea(const YArea& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YArea)
}

void YArea::SharedCtor() {
  gvers_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  gvers_.SetEntryDescriptor(
      &::y3d::YArea_GversEntry_descriptor_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

YArea::~YArea() {
  // @@protoc_insertion_point(destructor:y3d.YArea)
  SharedDtor();
}

void YArea::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YArea::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YArea::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YArea_descriptor_;
}

const YArea& YArea::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YArea> YArea_default_instance_;

YArea* YArea::New(::google::protobuf::Arena* arena) const {
  YArea* n = new YArea;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YArea::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YArea)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groups_.Clear();
  objs_.Clear();
  gvers_.Clear();
}

bool YArea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YArea)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YArea.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groups;
        break;
      }

      // repeated .y3d.YGroup groups = 2;
      case 2: {
        if (tag == 18) {
         parse_groups:
          DO_(input->IncrementRecursionDepth());
         parse_loop_groups:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_groups;
        if (input->ExpectTag(26)) goto parse_loop_objs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .y3d.YObject objs = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_objs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_objs;
        if (input->ExpectTag(50)) goto parse_loop_gvers;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, .y3d.YGroupVer> gvers = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_gvers:
          YArea_GversEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::y3d::YGroupVer,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer > > parser(&gvers_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YArea.GversEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_gvers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YArea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YArea)
  return false;
#undef DO_
}

void YArea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YArea)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YArea.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->groups(i), output);
  }

  // repeated .y3d.YObject objs = 3;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->objs(i), output);
  }

  // map<string, .y3d.YGroupVer> gvers = 6;
  if (!this->gvers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YArea.GversEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->gvers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gvers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gvers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it) {
        entry.reset(gvers_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:y3d.YArea)
}

::google::protobuf::uint8* YArea::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YArea)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YArea.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->groups(i), false, target);
  }

  // repeated .y3d.YObject objs = 3;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->objs(i), false, target);
  }

  // map<string, .y3d.YGroupVer> gvers = 6;
  if (!this->gvers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YArea.GversEntry.key");
      }
    };

    if (deterministic &&
        this->gvers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gvers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gvers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
          it = this->gvers().begin();
          it != this->gvers().end(); ++it) {
        entry.reset(gvers_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YArea)
  return target;
}

size_t YArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YArea)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated .y3d.YGroup groups = 2;
  {
    unsigned int count = this->groups_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->groups(i));
    }
  }

  // repeated .y3d.YObject objs = 3;
  {
    unsigned int count = this->objs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objs(i));
    }
  }

  // map<string, .y3d.YGroupVer> gvers = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->gvers_size());
  {
    ::google::protobuf::scoped_ptr<YArea_GversEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >::const_iterator
        it = this->gvers().begin();
        it != this->gvers().end(); ++it) {
      entry.reset(gvers_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YArea::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YArea)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YArea* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YArea>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YArea)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YArea)
    UnsafeMergeFrom(*source);
  }
}

void YArea::MergeFrom(const YArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YArea)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YArea::UnsafeMergeFrom(const YArea& from) {
  GOOGLE_DCHECK(&from != this);
  groups_.MergeFrom(from.groups_);
  objs_.MergeFrom(from.objs_);
  gvers_.MergeFrom(from.gvers_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void YArea::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YArea::CopyFrom(const YArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YArea)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YArea::IsInitialized() const {

  return true;
}

void YArea::Swap(YArea* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YArea::InternalSwap(YArea* other) {
  name_.Swap(&other->name_);
  groups_.UnsafeArenaSwap(&other->groups_);
  objs_.UnsafeArenaSwap(&other->objs_);
  gvers_.Swap(&other->gvers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YArea::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YArea_descriptor_;
  metadata.reflection = YArea_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YArea

// optional string name = 1;
void YArea::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YArea::name() const {
  // @@protoc_insertion_point(field_get:y3d.YArea.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YArea::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YArea.name)
}
void YArea::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YArea.name)
}
void YArea::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YArea.name)
}
::std::string* YArea::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YArea.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YArea::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YArea.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YArea::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YArea.name)
}

// repeated .y3d.YGroup groups = 2;
int YArea::groups_size() const {
  return groups_.size();
}
void YArea::clear_groups() {
  groups_.Clear();
}
const ::y3d::YGroup& YArea::groups(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YArea.groups)
  return groups_.Get(index);
}
::y3d::YGroup* YArea::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YArea.groups)
  return groups_.Mutable(index);
}
::y3d::YGroup* YArea::add_groups() {
  // @@protoc_insertion_point(field_add:y3d.YArea.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YGroup >*
YArea::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YArea.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YGroup >&
YArea::groups() const {
  // @@protoc_insertion_point(field_list:y3d.YArea.groups)
  return groups_;
}

// repeated .y3d.YObject objs = 3;
int YArea::objs_size() const {
  return objs_.size();
}
void YArea::clear_objs() {
  objs_.Clear();
}
const ::y3d::YObject& YArea::objs(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YArea.objs)
  return objs_.Get(index);
}
::y3d::YObject* YArea::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YArea.objs)
  return objs_.Mutable(index);
}
::y3d::YObject* YArea::add_objs() {
  // @@protoc_insertion_point(field_add:y3d.YArea.objs)
  return objs_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YObject >*
YArea::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YArea.objs)
  return &objs_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YObject >&
YArea::objs() const {
  // @@protoc_insertion_point(field_list:y3d.YArea.objs)
  return objs_;
}

// map<string, .y3d.YGroupVer> gvers = 6;
int YArea::gvers_size() const {
  return gvers_.size();
}
void YArea::clear_gvers() {
  gvers_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >&
YArea::gvers() const {
  // @@protoc_insertion_point(field_map:y3d.YArea.gvers)
  return gvers_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::y3d::YGroupVer >*
YArea::mutable_gvers() {
  // @@protoc_insertion_point(field_mutable_map:y3d.YArea.gvers)
  return gvers_.MutableMap();
}

inline const YArea* YArea::internal_default_instance() {
  return &YArea_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YLayer::kNameFieldNumber;
const int YLayer::kGroupsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YLayer::YLayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YLayer)
}

void YLayer::InitAsDefaultInstance() {
}

YLayer::YLayer(const YLayer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YLayer)
}

void YLayer::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

YLayer::~YLayer() {
  // @@protoc_insertion_point(destructor:y3d.YLayer)
  SharedDtor();
}

void YLayer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YLayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YLayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YLayer_descriptor_;
}

const YLayer& YLayer::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YLayer> YLayer_default_instance_;

YLayer* YLayer::New(::google::protobuf::Arena* arena) const {
  YLayer* n = new YLayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YLayer::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YLayer)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groups_.Clear();
}

bool YLayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YLayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YLayer.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groups;
        break;
      }

      // repeated .y3d.YGroup groups = 2;
      case 2: {
        if (tag == 18) {
         parse_groups:
          DO_(input->IncrementRecursionDepth());
         parse_loop_groups:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_groups;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YLayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YLayer)
  return false;
#undef DO_
}

void YLayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YLayer)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLayer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->groups(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YLayer)
}

::google::protobuf::uint8* YLayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YLayer)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YLayer.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .y3d.YGroup groups = 2;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->groups(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YLayer)
  return target;
}

size_t YLayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YLayer)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated .y3d.YGroup groups = 2;
  {
    unsigned int count = this->groups_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->groups(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YLayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YLayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YLayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YLayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YLayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YLayer)
    UnsafeMergeFrom(*source);
  }
}

void YLayer::MergeFrom(const YLayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YLayer)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YLayer::UnsafeMergeFrom(const YLayer& from) {
  GOOGLE_DCHECK(&from != this);
  groups_.MergeFrom(from.groups_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void YLayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YLayer::CopyFrom(const YLayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YLayer)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YLayer::IsInitialized() const {

  return true;
}

void YLayer::Swap(YLayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YLayer::InternalSwap(YLayer* other) {
  name_.Swap(&other->name_);
  groups_.UnsafeArenaSwap(&other->groups_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YLayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YLayer_descriptor_;
  metadata.reflection = YLayer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YLayer

// optional string name = 1;
void YLayer::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YLayer::name() const {
  // @@protoc_insertion_point(field_get:y3d.YLayer.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YLayer::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YLayer.name)
}
void YLayer::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YLayer.name)
}
void YLayer::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YLayer.name)
}
::std::string* YLayer::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YLayer.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YLayer::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YLayer.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YLayer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YLayer.name)
}

// repeated .y3d.YGroup groups = 2;
int YLayer::groups_size() const {
  return groups_.size();
}
void YLayer::clear_groups() {
  groups_.Clear();
}
const ::y3d::YGroup& YLayer::groups(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YLayer.groups)
  return groups_.Get(index);
}
::y3d::YGroup* YLayer::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YLayer.groups)
  return groups_.Mutable(index);
}
::y3d::YGroup* YLayer::add_groups() {
  // @@protoc_insertion_point(field_add:y3d.YLayer.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YGroup >*
YLayer::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YLayer.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YGroup >&
YLayer::groups() const {
  // @@protoc_insertion_point(field_list:y3d.YLayer.groups)
  return groups_;
}

inline const YLayer* YLayer::internal_default_instance() {
  return &YLayer_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YGroup::kNameFieldNumber;
const int YGroup::kObjsFieldNumber;
const int YGroup::kChildrenFieldNumber;
const int YGroup::kGvTypeFieldNumber;
const int YGroup::kXrefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YGroup::YGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YGroup)
}

void YGroup::InitAsDefaultInstance() {
}

YGroup::YGroup(const YGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YGroup)
}

void YGroup::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gv_type_ = 0;
  _cached_size_ = 0;
}

YGroup::~YGroup() {
  // @@protoc_insertion_point(destructor:y3d.YGroup)
  SharedDtor();
}

void YGroup::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YGroup_descriptor_;
}

const YGroup& YGroup::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YGroup> YGroup_default_instance_;

YGroup* YGroup::New(::google::protobuf::Arena* arena) const {
  YGroup* n = new YGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YGroup)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gv_type_ = 0;
  objs_.Clear();
  children_.Clear();
  xref_.Clear();
}

bool YGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YGroup.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_objs;
        break;
      }

      // repeated .y3d.YObject objs = 2;
      case 2: {
        if (tag == 18) {
         parse_objs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_objs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_objs;
        if (input->ExpectTag(26)) goto parse_loop_children;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .y3d.YGroup children = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_children:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_children;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_gv_type;
        break;
      }

      // optional .y3d.GVerType gv_type = 4;
      case 4: {
        if (tag == 32) {
         parse_gv_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gv_type(static_cast< ::y3d::GVerType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_xref;
        break;
      }

      // repeated string xref = 5;
      case 5: {
        if (tag == 42) {
         parse_xref:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_xref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xref(this->xref_size() - 1).data(),
            this->xref(this->xref_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YGroup.xref"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_xref;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YGroup)
  return false;
#undef DO_
}

void YGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YGroup)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .y3d.YObject objs = 2;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->objs(i), output);
  }

  // repeated .y3d.YGroup children = 3;
  for (unsigned int i = 0, n = this->children_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->children(i), output);
  }

  // optional .y3d.GVerType gv_type = 4;
  if (this->gv_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->gv_type(), output);
  }

  // repeated string xref = 5;
  for (int i = 0; i < this->xref_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xref(i).data(), this->xref(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.xref");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->xref(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YGroup)
}

::google::protobuf::uint8* YGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YGroup)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .y3d.YObject objs = 2;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->objs(i), false, target);
  }

  // repeated .y3d.YGroup children = 3;
  for (unsigned int i = 0, n = this->children_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->children(i), false, target);
  }

  // optional .y3d.GVerType gv_type = 4;
  if (this->gv_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->gv_type(), target);
  }

  // repeated string xref = 5;
  for (int i = 0; i < this->xref_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xref(i).data(), this->xref(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroup.xref");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->xref(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YGroup)
  return target;
}

size_t YGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YGroup)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .y3d.GVerType gv_type = 4;
  if (this->gv_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gv_type());
  }

  // repeated .y3d.YObject objs = 2;
  {
    unsigned int count = this->objs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objs(i));
    }
  }

  // repeated .y3d.YGroup children = 3;
  {
    unsigned int count = this->children_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->children(i));
    }
  }

  // repeated string xref = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->xref_size());
  for (int i = 0; i < this->xref_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->xref(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YGroup)
    UnsafeMergeFrom(*source);
  }
}

void YGroup::MergeFrom(const YGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YGroup::UnsafeMergeFrom(const YGroup& from) {
  GOOGLE_DCHECK(&from != this);
  objs_.MergeFrom(from.objs_);
  children_.MergeFrom(from.children_);
  xref_.UnsafeMergeFrom(from.xref_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.gv_type() != 0) {
    set_gv_type(from.gv_type());
  }
}

void YGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YGroup::CopyFrom(const YGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YGroup::IsInitialized() const {

  return true;
}

void YGroup::Swap(YGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YGroup::InternalSwap(YGroup* other) {
  name_.Swap(&other->name_);
  objs_.UnsafeArenaSwap(&other->objs_);
  children_.UnsafeArenaSwap(&other->children_);
  std::swap(gv_type_, other->gv_type_);
  xref_.UnsafeArenaSwap(&other->xref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YGroup_descriptor_;
  metadata.reflection = YGroup_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YGroup

// optional string name = 1;
void YGroup::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YGroup::name() const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YGroup::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YGroup.name)
}
void YGroup::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YGroup.name)
}
void YGroup::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YGroup.name)
}
::std::string* YGroup::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YGroup::release_name() {
  // @@protoc_insertion_point(field_release:y3d.YGroup.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YGroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.YGroup.name)
}

// repeated .y3d.YObject objs = 2;
int YGroup::objs_size() const {
  return objs_.size();
}
void YGroup::clear_objs() {
  objs_.Clear();
}
const ::y3d::YObject& YGroup::objs(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.objs)
  return objs_.Get(index);
}
::y3d::YObject* YGroup::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.objs)
  return objs_.Mutable(index);
}
::y3d::YObject* YGroup::add_objs() {
  // @@protoc_insertion_point(field_add:y3d.YGroup.objs)
  return objs_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YObject >*
YGroup::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YGroup.objs)
  return &objs_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YObject >&
YGroup::objs() const {
  // @@protoc_insertion_point(field_list:y3d.YGroup.objs)
  return objs_;
}

// repeated .y3d.YGroup children = 3;
int YGroup::children_size() const {
  return children_.size();
}
void YGroup::clear_children() {
  children_.Clear();
}
const ::y3d::YGroup& YGroup::children(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.children)
  return children_.Get(index);
}
::y3d::YGroup* YGroup::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.children)
  return children_.Mutable(index);
}
::y3d::YGroup* YGroup::add_children() {
  // @@protoc_insertion_point(field_add:y3d.YGroup.children)
  return children_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YGroup >*
YGroup::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YGroup.children)
  return &children_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YGroup >&
YGroup::children() const {
  // @@protoc_insertion_point(field_list:y3d.YGroup.children)
  return children_;
}

// optional .y3d.GVerType gv_type = 4;
void YGroup::clear_gv_type() {
  gv_type_ = 0;
}
::y3d::GVerType YGroup::gv_type() const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.gv_type)
  return static_cast< ::y3d::GVerType >(gv_type_);
}
void YGroup::set_gv_type(::y3d::GVerType value) {
  
  gv_type_ = value;
  // @@protoc_insertion_point(field_set:y3d.YGroup.gv_type)
}

// repeated string xref = 5;
int YGroup::xref_size() const {
  return xref_.size();
}
void YGroup::clear_xref() {
  xref_.Clear();
}
const ::std::string& YGroup::xref(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YGroup.xref)
  return xref_.Get(index);
}
::std::string* YGroup::mutable_xref(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YGroup.xref)
  return xref_.Mutable(index);
}
void YGroup::set_xref(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:y3d.YGroup.xref)
  xref_.Mutable(index)->assign(value);
}
void YGroup::set_xref(int index, const char* value) {
  xref_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:y3d.YGroup.xref)
}
void YGroup::set_xref(int index, const char* value, size_t size) {
  xref_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:y3d.YGroup.xref)
}
::std::string* YGroup::add_xref() {
  // @@protoc_insertion_point(field_add_mutable:y3d.YGroup.xref)
  return xref_.Add();
}
void YGroup::add_xref(const ::std::string& value) {
  xref_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:y3d.YGroup.xref)
}
void YGroup::add_xref(const char* value) {
  xref_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:y3d.YGroup.xref)
}
void YGroup::add_xref(const char* value, size_t size) {
  xref_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:y3d.YGroup.xref)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
YGroup::xref() const {
  // @@protoc_insertion_point(field_list:y3d.YGroup.xref)
  return xref_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
YGroup::mutable_xref() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YGroup.xref)
  return &xref_;
}

inline const YGroup* YGroup::internal_default_instance() {
  return &YGroup_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YGroupVer::kVnameFieldNumber;
const int YGroupVer::kGroupDataFieldNumber;
const int YGroupVer::kStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YGroupVer::YGroupVer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YGroupVer)
}

void YGroupVer::InitAsDefaultInstance() {
  groupdata_ = const_cast< ::y3d::YGroup*>(
      ::y3d::YGroup::internal_default_instance());
}

YGroupVer::YGroupVer(const YGroupVer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YGroupVer)
}

void YGroupVer::SharedCtor() {
  vname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupdata_ = NULL;
  step_ = 0;
  _cached_size_ = 0;
}

YGroupVer::~YGroupVer() {
  // @@protoc_insertion_point(destructor:y3d.YGroupVer)
  SharedDtor();
}

void YGroupVer::SharedDtor() {
  vname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &YGroupVer_default_instance_.get()) {
    delete groupdata_;
  }
}

void YGroupVer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YGroupVer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YGroupVer_descriptor_;
}

const YGroupVer& YGroupVer::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YGroupVer> YGroupVer_default_instance_;

YGroupVer* YGroupVer::New(::google::protobuf::Arena* arena) const {
  YGroupVer* n = new YGroupVer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YGroupVer::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YGroupVer)
  vname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && groupdata_ != NULL) delete groupdata_;
  groupdata_ = NULL;
  step_ = 0;
}

bool YGroupVer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YGroupVer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string vname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vname().data(), this->vname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YGroupVer.vname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupData;
        break;
      }

      // optional .y3d.YGroup groupData = 2;
      case 2: {
        if (tag == 18) {
         parse_groupData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_groupdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_step;
        break;
      }

      // optional int32 step = 3;
      case 3: {
        if (tag == 24) {
         parse_step:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YGroupVer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YGroupVer)
  return false;
#undef DO_
}

void YGroupVer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YGroupVer)
  // optional string vname = 1;
  if (this->vname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vname().data(), this->vname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroupVer.vname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vname(), output);
  }

  // optional .y3d.YGroup groupData = 2;
  if (this->has_groupdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->groupdata_, output);
  }

  // optional int32 step = 3;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->step(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YGroupVer)
}

::google::protobuf::uint8* YGroupVer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YGroupVer)
  // optional string vname = 1;
  if (this->vname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vname().data(), this->vname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.YGroupVer.vname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vname(), target);
  }

  // optional .y3d.YGroup groupData = 2;
  if (this->has_groupdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->groupdata_, false, target);
  }

  // optional int32 step = 3;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->step(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YGroupVer)
  return target;
}

size_t YGroupVer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YGroupVer)
  size_t total_size = 0;

  // optional string vname = 1;
  if (this->vname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vname());
  }

  // optional .y3d.YGroup groupData = 2;
  if (this->has_groupdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->groupdata_);
  }

  // optional int32 step = 3;
  if (this->step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->step());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YGroupVer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YGroupVer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YGroupVer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YGroupVer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YGroupVer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YGroupVer)
    UnsafeMergeFrom(*source);
  }
}

void YGroupVer::MergeFrom(const YGroupVer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YGroupVer)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YGroupVer::UnsafeMergeFrom(const YGroupVer& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.vname().size() > 0) {

    vname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vname_);
  }
  if (from.has_groupdata()) {
    mutable_groupdata()->::y3d::YGroup::MergeFrom(from.groupdata());
  }
  if (from.step() != 0) {
    set_step(from.step());
  }
}

void YGroupVer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YGroupVer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YGroupVer::CopyFrom(const YGroupVer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YGroupVer)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YGroupVer::IsInitialized() const {

  return true;
}

void YGroupVer::Swap(YGroupVer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YGroupVer::InternalSwap(YGroupVer* other) {
  vname_.Swap(&other->vname_);
  std::swap(groupdata_, other->groupdata_);
  std::swap(step_, other->step_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YGroupVer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YGroupVer_descriptor_;
  metadata.reflection = YGroupVer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YGroupVer

// optional string vname = 1;
void YGroupVer::clear_vname() {
  vname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YGroupVer::vname() const {
  // @@protoc_insertion_point(field_get:y3d.YGroupVer.vname)
  return vname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YGroupVer::set_vname(const ::std::string& value) {
  
  vname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.YGroupVer.vname)
}
void YGroupVer::set_vname(const char* value) {
  
  vname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.YGroupVer.vname)
}
void YGroupVer::set_vname(const char* value, size_t size) {
  
  vname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.YGroupVer.vname)
}
::std::string* YGroupVer::mutable_vname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.YGroupVer.vname)
  return vname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YGroupVer::release_vname() {
  // @@protoc_insertion_point(field_release:y3d.YGroupVer.vname)
  
  return vname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YGroupVer::set_allocated_vname(::std::string* vname) {
  if (vname != NULL) {
    
  } else {
    
  }
  vname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vname);
  // @@protoc_insertion_point(field_set_allocated:y3d.YGroupVer.vname)
}

// optional .y3d.YGroup groupData = 2;
bool YGroupVer::has_groupdata() const {
  return this != internal_default_instance() && groupdata_ != NULL;
}
void YGroupVer::clear_groupdata() {
  if (GetArenaNoVirtual() == NULL && groupdata_ != NULL) delete groupdata_;
  groupdata_ = NULL;
}
const ::y3d::YGroup& YGroupVer::groupdata() const {
  // @@protoc_insertion_point(field_get:y3d.YGroupVer.groupData)
  return groupdata_ != NULL ? *groupdata_
                         : *::y3d::YGroup::internal_default_instance();
}
::y3d::YGroup* YGroupVer::mutable_groupdata() {
  
  if (groupdata_ == NULL) {
    groupdata_ = new ::y3d::YGroup;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YGroupVer.groupData)
  return groupdata_;
}
::y3d::YGroup* YGroupVer::release_groupdata() {
  // @@protoc_insertion_point(field_release:y3d.YGroupVer.groupData)
  
  ::y3d::YGroup* temp = groupdata_;
  groupdata_ = NULL;
  return temp;
}
void YGroupVer::set_allocated_groupdata(::y3d::YGroup* groupdata) {
  delete groupdata_;
  groupdata_ = groupdata;
  if (groupdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YGroupVer.groupData)
}

// optional int32 step = 3;
void YGroupVer::clear_step() {
  step_ = 0;
}
::google::protobuf::int32 YGroupVer::step() const {
  // @@protoc_insertion_point(field_get:y3d.YGroupVer.step)
  return step_;
}
void YGroupVer::set_step(::google::protobuf::int32 value) {
  
  step_ = value;
  // @@protoc_insertion_point(field_set:y3d.YGroupVer.step)
}

inline const YGroupVer* YGroupVer::internal_default_instance() {
  return &YGroupVer_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CustomAttr_AType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CustomAttr_AType_descriptor_;
}
bool CustomAttr_AType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CustomAttr_AType CustomAttr::STRING;
const CustomAttr_AType CustomAttr::INT;
const CustomAttr_AType CustomAttr::FLOAT;
const CustomAttr_AType CustomAttr::BOOL;
const CustomAttr_AType CustomAttr::POINT3;
const CustomAttr_AType CustomAttr::ARRAY_STRING;
const CustomAttr_AType CustomAttr::ARRAY_INT;
const CustomAttr_AType CustomAttr::ARRAY_FLOAT;
const CustomAttr_AType CustomAttr::TEXT;
const CustomAttr_AType CustomAttr::COLOR;
const CustomAttr_AType CustomAttr::ONEOF;
const CustomAttr_AType CustomAttr::OTHER;
const CustomAttr_AType CustomAttr::AType_MIN;
const CustomAttr_AType CustomAttr::AType_MAX;
const int CustomAttr::AType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomAttr::kNameFieldNumber;
const int CustomAttr::kValueFieldNumber;
const int CustomAttr::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomAttr::CustomAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.CustomAttr)
}

void CustomAttr::InitAsDefaultInstance() {
  value_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

CustomAttr::CustomAttr(const CustomAttr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.CustomAttr)
}

void CustomAttr::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
  type_ = 0;
  _cached_size_ = 0;
}

CustomAttr::~CustomAttr() {
  // @@protoc_insertion_point(destructor:y3d.CustomAttr)
  SharedDtor();
}

void CustomAttr::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &CustomAttr_default_instance_.get()) {
    delete value_;
  }
}

void CustomAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CustomAttr_descriptor_;
}

const CustomAttr& CustomAttr::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CustomAttr> CustomAttr_default_instance_;

CustomAttr* CustomAttr::New(::google::protobuf::Arena* arena) const {
  CustomAttr* n = new CustomAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.CustomAttr)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
  type_ = 0;
}

bool CustomAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.CustomAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.CustomAttr.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional .google.protobuf.Any value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional .y3d.CustomAttr.AType type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::y3d::CustomAttr_AType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.CustomAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.CustomAttr)
  return false;
#undef DO_
}

void CustomAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.CustomAttr)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.CustomAttr.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  // optional .y3d.CustomAttr.AType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.CustomAttr)
}

::google::protobuf::uint8* CustomAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.CustomAttr)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.CustomAttr.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, false, target);
  }

  // optional .y3d.CustomAttr.AType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.CustomAttr)
  return target;
}

size_t CustomAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.CustomAttr)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  // optional .y3d.CustomAttr.AType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.CustomAttr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CustomAttr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.CustomAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.CustomAttr)
    UnsafeMergeFrom(*source);
  }
}

void CustomAttr::MergeFrom(const CustomAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.CustomAttr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CustomAttr::UnsafeMergeFrom(const CustomAttr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_value()) {
    mutable_value()->::google::protobuf::Any::MergeFrom(from.value());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CustomAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.CustomAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomAttr::CopyFrom(const CustomAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.CustomAttr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CustomAttr::IsInitialized() const {

  return true;
}

void CustomAttr::Swap(CustomAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomAttr::InternalSwap(CustomAttr* other) {
  name_.Swap(&other->name_);
  std::swap(value_, other->value_);
  std::swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CustomAttr_descriptor_;
  metadata.reflection = CustomAttr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomAttr

// optional string name = 1;
void CustomAttr::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CustomAttr::name() const {
  // @@protoc_insertion_point(field_get:y3d.CustomAttr.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CustomAttr::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.CustomAttr.name)
}
void CustomAttr::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.CustomAttr.name)
}
void CustomAttr::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.CustomAttr.name)
}
::std::string* CustomAttr::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:y3d.CustomAttr.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CustomAttr::release_name() {
  // @@protoc_insertion_point(field_release:y3d.CustomAttr.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CustomAttr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:y3d.CustomAttr.name)
}

// optional .google.protobuf.Any value = 2;
bool CustomAttr::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
void CustomAttr::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::google::protobuf::Any& CustomAttr::value() const {
  // @@protoc_insertion_point(field_get:y3d.CustomAttr.value)
  return value_ != NULL ? *value_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* CustomAttr::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:y3d.CustomAttr.value)
  return value_;
}
::google::protobuf::Any* CustomAttr::release_value() {
  // @@protoc_insertion_point(field_release:y3d.CustomAttr.value)
  
  ::google::protobuf::Any* temp = value_;
  value_ = NULL;
  return temp;
}
void CustomAttr::set_allocated_value(::google::protobuf::Any* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.CustomAttr.value)
}

// optional .y3d.CustomAttr.AType type = 3;
void CustomAttr::clear_type() {
  type_ = 0;
}
::y3d::CustomAttr_AType CustomAttr::type() const {
  // @@protoc_insertion_point(field_get:y3d.CustomAttr.type)
  return static_cast< ::y3d::CustomAttr_AType >(type_);
}
void CustomAttr::set_type(::y3d::CustomAttr_AType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:y3d.CustomAttr.type)
}

inline const CustomAttr* CustomAttr::internal_default_instance() {
  return &CustomAttr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttrSet::kSnameFieldNumber;
const int AttrSet::kAttrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttrSet::AttrSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.AttrSet)
}

void AttrSet::InitAsDefaultInstance() {
}

AttrSet::AttrSet(const AttrSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.AttrSet)
}

void AttrSet::SharedCtor() {
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AttrSet::~AttrSet() {
  // @@protoc_insertion_point(destructor:y3d.AttrSet)
  SharedDtor();
}

void AttrSet::SharedDtor() {
  sname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttrSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttrSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttrSet_descriptor_;
}

const AttrSet& AttrSet::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AttrSet> AttrSet_default_instance_;

AttrSet* AttrSet::New(::google::protobuf::Arena* arena) const {
  AttrSet* n = new AttrSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttrSet::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.AttrSet)
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attrs_.Clear();
}

bool AttrSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.AttrSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sname().data(), this->sname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.AttrSet.sname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attrs;
        break;
      }

      // repeated .y3d.CustomAttr attrs = 2;
      case 2: {
        if (tag == 18) {
         parse_attrs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_attrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_attrs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_attrs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.AttrSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.AttrSet)
  return false;
#undef DO_
}

void AttrSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.AttrSet)
  // optional string sname = 1;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), this->sname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.AttrSet.sname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sname(), output);
  }

  // repeated .y3d.CustomAttr attrs = 2;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attrs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.AttrSet)
}

::google::protobuf::uint8* AttrSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.AttrSet)
  // optional string sname = 1;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), this->sname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.AttrSet.sname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sname(), target);
  }

  // repeated .y3d.CustomAttr attrs = 2;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->attrs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.AttrSet)
  return target;
}

size_t AttrSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.AttrSet)
  size_t total_size = 0;

  // optional string sname = 1;
  if (this->sname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sname());
  }

  // repeated .y3d.CustomAttr attrs = 2;
  {
    unsigned int count = this->attrs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attrs(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttrSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.AttrSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AttrSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttrSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.AttrSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.AttrSet)
    UnsafeMergeFrom(*source);
  }
}

void AttrSet::MergeFrom(const AttrSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.AttrSet)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AttrSet::UnsafeMergeFrom(const AttrSet& from) {
  GOOGLE_DCHECK(&from != this);
  attrs_.MergeFrom(from.attrs_);
  if (from.sname().size() > 0) {

    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
}

void AttrSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.AttrSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttrSet::CopyFrom(const AttrSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.AttrSet)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AttrSet::IsInitialized() const {

  return true;
}

void AttrSet::Swap(AttrSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttrSet::InternalSwap(AttrSet* other) {
  sname_.Swap(&other->sname_);
  attrs_.UnsafeArenaSwap(&other->attrs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttrSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttrSet_descriptor_;
  metadata.reflection = AttrSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttrSet

// optional string sname = 1;
void AttrSet::clear_sname() {
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AttrSet::sname() const {
  // @@protoc_insertion_point(field_get:y3d.AttrSet.sname)
  return sname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttrSet::set_sname(const ::std::string& value) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.AttrSet.sname)
}
void AttrSet::set_sname(const char* value) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.AttrSet.sname)
}
void AttrSet::set_sname(const char* value, size_t size) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.AttrSet.sname)
}
::std::string* AttrSet::mutable_sname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.AttrSet.sname)
  return sname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttrSet::release_sname() {
  // @@protoc_insertion_point(field_release:y3d.AttrSet.sname)
  
  return sname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttrSet::set_allocated_sname(::std::string* sname) {
  if (sname != NULL) {
    
  } else {
    
  }
  sname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sname);
  // @@protoc_insertion_point(field_set_allocated:y3d.AttrSet.sname)
}

// repeated .y3d.CustomAttr attrs = 2;
int AttrSet::attrs_size() const {
  return attrs_.size();
}
void AttrSet::clear_attrs() {
  attrs_.Clear();
}
const ::y3d::CustomAttr& AttrSet::attrs(int index) const {
  // @@protoc_insertion_point(field_get:y3d.AttrSet.attrs)
  return attrs_.Get(index);
}
::y3d::CustomAttr* AttrSet::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.AttrSet.attrs)
  return attrs_.Mutable(index);
}
::y3d::CustomAttr* AttrSet::add_attrs() {
  // @@protoc_insertion_point(field_add:y3d.AttrSet.attrs)
  return attrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::CustomAttr >*
AttrSet::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:y3d.AttrSet.attrs)
  return &attrs_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::CustomAttr >&
AttrSet::attrs() const {
  // @@protoc_insertion_point(field_list:y3d.AttrSet.attrs)
  return attrs_;
}

inline const AttrSet* AttrSet::internal_default_instance() {
  return &AttrSet_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilterView::kOtypeFieldNumber;
const int FilterView::kFaceRangeFieldNumber;
const int FilterView::kSearchFieldNumber;
const int FilterView::kAidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilterView::FilterView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.FilterView)
}

void FilterView::InitAsDefaultInstance() {
}

FilterView::FilterView(const FilterView& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.FilterView)
}

void FilterView::SharedCtor() {
  search_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&otype_, 0, reinterpret_cast<char*>(&aid_) -
    reinterpret_cast<char*>(&otype_) + sizeof(aid_));
  _cached_size_ = 0;
}

FilterView::~FilterView() {
  // @@protoc_insertion_point(destructor:y3d.FilterView)
  SharedDtor();
}

void FilterView::SharedDtor() {
  search_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FilterView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilterView::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilterView_descriptor_;
}

const FilterView& FilterView::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FilterView> FilterView_default_instance_;

FilterView* FilterView::New(::google::protobuf::Arena* arena) const {
  FilterView* n = new FilterView;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilterView::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.FilterView)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FilterView, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FilterView*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(otype_, aid_);
  search_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool FilterView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.FilterView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .y3d.ObjectType otype = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_otype(static_cast< ::y3d::ObjectType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_face_range;
        break;
      }

      // optional int32 face_range = 2;
      case 2: {
        if (tag == 16) {
         parse_face_range:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &face_range_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_search;
        break;
      }

      // optional string search = 3;
      case 3: {
        if (tag == 26) {
         parse_search:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search().data(), this->search().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.FilterView.search"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_aid;
        break;
      }

      // optional int32 aid = 4;
      case 4: {
        if (tag == 32) {
         parse_aid:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.FilterView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.FilterView)
  return false;
#undef DO_
}

void FilterView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.FilterView)
  // optional .y3d.ObjectType otype = 1;
  if (this->otype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->otype(), output);
  }

  // optional int32 face_range = 2;
  if (this->face_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->face_range(), output);
  }

  // optional string search = 3;
  if (this->search().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search().data(), this->search().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.FilterView.search");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->search(), output);
  }

  // optional int32 aid = 4;
  if (this->aid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->aid(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.FilterView)
}

::google::protobuf::uint8* FilterView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.FilterView)
  // optional .y3d.ObjectType otype = 1;
  if (this->otype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->otype(), target);
  }

  // optional int32 face_range = 2;
  if (this->face_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->face_range(), target);
  }

  // optional string search = 3;
  if (this->search().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search().data(), this->search().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.FilterView.search");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->search(), target);
  }

  // optional int32 aid = 4;
  if (this->aid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->aid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.FilterView)
  return target;
}

size_t FilterView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.FilterView)
  size_t total_size = 0;

  // optional .y3d.ObjectType otype = 1;
  if (this->otype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->otype());
  }

  // optional int32 face_range = 2;
  if (this->face_range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->face_range());
  }

  // optional string search = 3;
  if (this->search().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search());
  }

  // optional int32 aid = 4;
  if (this->aid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->aid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilterView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.FilterView)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FilterView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilterView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.FilterView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.FilterView)
    UnsafeMergeFrom(*source);
  }
}

void FilterView::MergeFrom(const FilterView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.FilterView)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FilterView::UnsafeMergeFrom(const FilterView& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.otype() != 0) {
    set_otype(from.otype());
  }
  if (from.face_range() != 0) {
    set_face_range(from.face_range());
  }
  if (from.search().size() > 0) {

    search_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_);
  }
  if (from.aid() != 0) {
    set_aid(from.aid());
  }
}

void FilterView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.FilterView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterView::CopyFrom(const FilterView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.FilterView)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FilterView::IsInitialized() const {

  return true;
}

void FilterView::Swap(FilterView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilterView::InternalSwap(FilterView* other) {
  std::swap(otype_, other->otype_);
  std::swap(face_range_, other->face_range_);
  search_.Swap(&other->search_);
  std::swap(aid_, other->aid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilterView::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilterView_descriptor_;
  metadata.reflection = FilterView_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FilterView

// optional .y3d.ObjectType otype = 1;
void FilterView::clear_otype() {
  otype_ = 0;
}
::y3d::ObjectType FilterView::otype() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.otype)
  return static_cast< ::y3d::ObjectType >(otype_);
}
void FilterView::set_otype(::y3d::ObjectType value) {
  
  otype_ = value;
  // @@protoc_insertion_point(field_set:y3d.FilterView.otype)
}

// optional int32 face_range = 2;
void FilterView::clear_face_range() {
  face_range_ = 0;
}
::google::protobuf::int32 FilterView::face_range() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.face_range)
  return face_range_;
}
void FilterView::set_face_range(::google::protobuf::int32 value) {
  
  face_range_ = value;
  // @@protoc_insertion_point(field_set:y3d.FilterView.face_range)
}

// optional string search = 3;
void FilterView::clear_search() {
  search_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilterView::search() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.search)
  return search_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilterView::set_search(const ::std::string& value) {
  
  search_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.FilterView.search)
}
void FilterView::set_search(const char* value) {
  
  search_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.FilterView.search)
}
void FilterView::set_search(const char* value, size_t size) {
  
  search_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.FilterView.search)
}
::std::string* FilterView::mutable_search() {
  
  // @@protoc_insertion_point(field_mutable:y3d.FilterView.search)
  return search_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilterView::release_search() {
  // @@protoc_insertion_point(field_release:y3d.FilterView.search)
  
  return search_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilterView::set_allocated_search(::std::string* search) {
  if (search != NULL) {
    
  } else {
    
  }
  search_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search);
  // @@protoc_insertion_point(field_set_allocated:y3d.FilterView.search)
}

// optional int32 aid = 4;
void FilterView::clear_aid() {
  aid_ = 0;
}
::google::protobuf::int32 FilterView::aid() const {
  // @@protoc_insertion_point(field_get:y3d.FilterView.aid)
  return aid_;
}
void FilterView::set_aid(::google::protobuf::int32 value) {
  
  aid_ = value;
  // @@protoc_insertion_point(field_set:y3d.FilterView.aid)
}

inline const FilterView* FilterView::internal_default_instance() {
  return &FilterView_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectInfo::kPnameFieldNumber;
const int ProjectInfo::kPathFieldNumber;
const int ProjectInfo::kFaceRangeFieldNumber;
const int ProjectInfo::kCountColorFieldNumber;
const int ProjectInfo::kFviewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectInfo::ProjectInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.ProjectInfo)
}

void ProjectInfo::InitAsDefaultInstance() {
}

ProjectInfo::ProjectInfo(const ProjectInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.ProjectInfo)
}

void ProjectInfo::SharedCtor() {
  pname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ProjectInfo::~ProjectInfo() {
  // @@protoc_insertion_point(destructor:y3d.ProjectInfo)
  SharedDtor();
}

void ProjectInfo::SharedDtor() {
  pname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProjectInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProjectInfo_descriptor_;
}

const ProjectInfo& ProjectInfo::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ProjectInfo> ProjectInfo_default_instance_;

ProjectInfo* ProjectInfo::New(::google::protobuf::Arena* arena) const {
  ProjectInfo* n = new ProjectInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.ProjectInfo)
  pname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_range_.Clear();
  count_color_.Clear();
  fview_.Clear();
}

bool ProjectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.ProjectInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pname().data(), this->pname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ProjectInfo.pname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // optional string path = 2;
      case 2: {
        if (tag == 18) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.ProjectInfo.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_face_range;
        break;
      }

      // repeated int32 face_range = 3;
      case 3: {
        if (tag == 26) {
         parse_face_range:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_face_range())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26, input, this->mutable_face_range())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_count_color;
        break;
      }

      // repeated .y3d.YColor count_color = 4;
      case 4: {
        if (tag == 34) {
         parse_count_color:
          DO_(input->IncrementRecursionDepth());
         parse_loop_count_color:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_count_color()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_count_color;
        if (input->ExpectTag(42)) goto parse_loop_fview;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .y3d.FilterView fview = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_fview:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fview()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_fview;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.ProjectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.ProjectInfo)
  return false;
#undef DO_
}

void ProjectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.ProjectInfo)
  // optional string pname = 1;
  if (this->pname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pname().data(), this->pname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.pname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pname(), output);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // repeated int32 face_range = 3;
  if (this->face_range_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_face_range_cached_byte_size_);
  }
  for (int i = 0; i < this->face_range_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->face_range(i), output);
  }

  // repeated .y3d.YColor count_color = 4;
  for (unsigned int i = 0, n = this->count_color_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->count_color(i), output);
  }

  // repeated .y3d.FilterView fview = 5;
  for (unsigned int i = 0, n = this->fview_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->fview(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.ProjectInfo)
}

::google::protobuf::uint8* ProjectInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.ProjectInfo)
  // optional string pname = 1;
  if (this->pname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pname().data(), this->pname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.pname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pname(), target);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "y3d.ProjectInfo.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // repeated int32 face_range = 3;
  if (this->face_range_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _face_range_cached_byte_size_, target);
  }
  for (int i = 0; i < this->face_range_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->face_range(i), target);
  }

  // repeated .y3d.YColor count_color = 4;
  for (unsigned int i = 0, n = this->count_color_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->count_color(i), false, target);
  }

  // repeated .y3d.FilterView fview = 5;
  for (unsigned int i = 0, n = this->fview_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->fview(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.ProjectInfo)
  return target;
}

size_t ProjectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.ProjectInfo)
  size_t total_size = 0;

  // optional string pname = 1;
  if (this->pname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pname());
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // repeated int32 face_range = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->face_range_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->face_range(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _face_range_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .y3d.YColor count_color = 4;
  {
    unsigned int count = this->count_color_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->count_color(i));
    }
  }

  // repeated .y3d.FilterView fview = 5;
  {
    unsigned int count = this->fview_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fview(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.ProjectInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ProjectInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.ProjectInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.ProjectInfo)
    UnsafeMergeFrom(*source);
  }
}

void ProjectInfo::MergeFrom(const ProjectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.ProjectInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ProjectInfo::UnsafeMergeFrom(const ProjectInfo& from) {
  GOOGLE_DCHECK(&from != this);
  face_range_.UnsafeMergeFrom(from.face_range_);
  count_color_.MergeFrom(from.count_color_);
  fview_.MergeFrom(from.fview_);
  if (from.pname().size() > 0) {

    pname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pname_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void ProjectInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.ProjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectInfo::CopyFrom(const ProjectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.ProjectInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ProjectInfo::IsInitialized() const {

  return true;
}

void ProjectInfo::Swap(ProjectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectInfo::InternalSwap(ProjectInfo* other) {
  pname_.Swap(&other->pname_);
  path_.Swap(&other->path_);
  face_range_.UnsafeArenaSwap(&other->face_range_);
  count_color_.UnsafeArenaSwap(&other->count_color_);
  fview_.UnsafeArenaSwap(&other->fview_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProjectInfo_descriptor_;
  metadata.reflection = ProjectInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectInfo

// optional string pname = 1;
void ProjectInfo::clear_pname() {
  pname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectInfo::pname() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.pname)
  return pname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectInfo::set_pname(const ::std::string& value) {
  
  pname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ProjectInfo.pname)
}
void ProjectInfo::set_pname(const char* value) {
  
  pname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ProjectInfo.pname)
}
void ProjectInfo::set_pname(const char* value, size_t size) {
  
  pname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ProjectInfo.pname)
}
::std::string* ProjectInfo::mutable_pname() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.pname)
  return pname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectInfo::release_pname() {
  // @@protoc_insertion_point(field_release:y3d.ProjectInfo.pname)
  
  return pname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectInfo::set_allocated_pname(::std::string* pname) {
  if (pname != NULL) {
    
  } else {
    
  }
  pname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pname);
  // @@protoc_insertion_point(field_set_allocated:y3d.ProjectInfo.pname)
}

// optional string path = 2;
void ProjectInfo::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectInfo::path() const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectInfo::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ProjectInfo.path)
}
void ProjectInfo::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ProjectInfo.path)
}
void ProjectInfo::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ProjectInfo.path)
}
::std::string* ProjectInfo::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectInfo::release_path() {
  // @@protoc_insertion_point(field_release:y3d.ProjectInfo.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectInfo::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:y3d.ProjectInfo.path)
}

// repeated int32 face_range = 3;
int ProjectInfo::face_range_size() const {
  return face_range_.size();
}
void ProjectInfo::clear_face_range() {
  face_range_.Clear();
}
::google::protobuf::int32 ProjectInfo::face_range(int index) const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.face_range)
  return face_range_.Get(index);
}
void ProjectInfo::set_face_range(int index, ::google::protobuf::int32 value) {
  face_range_.Set(index, value);
  // @@protoc_insertion_point(field_set:y3d.ProjectInfo.face_range)
}
void ProjectInfo::add_face_range(::google::protobuf::int32 value) {
  face_range_.Add(value);
  // @@protoc_insertion_point(field_add:y3d.ProjectInfo.face_range)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProjectInfo::face_range() const {
  // @@protoc_insertion_point(field_list:y3d.ProjectInfo.face_range)
  return face_range_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProjectInfo::mutable_face_range() {
  // @@protoc_insertion_point(field_mutable_list:y3d.ProjectInfo.face_range)
  return &face_range_;
}

// repeated .y3d.YColor count_color = 4;
int ProjectInfo::count_color_size() const {
  return count_color_.size();
}
void ProjectInfo::clear_count_color() {
  count_color_.Clear();
}
const ::y3d::YColor& ProjectInfo::count_color(int index) const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.count_color)
  return count_color_.Get(index);
}
::y3d::YColor* ProjectInfo::mutable_count_color(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.count_color)
  return count_color_.Mutable(index);
}
::y3d::YColor* ProjectInfo::add_count_color() {
  // @@protoc_insertion_point(field_add:y3d.ProjectInfo.count_color)
  return count_color_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YColor >*
ProjectInfo::mutable_count_color() {
  // @@protoc_insertion_point(field_mutable_list:y3d.ProjectInfo.count_color)
  return &count_color_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YColor >&
ProjectInfo::count_color() const {
  // @@protoc_insertion_point(field_list:y3d.ProjectInfo.count_color)
  return count_color_;
}

// repeated .y3d.FilterView fview = 5;
int ProjectInfo::fview_size() const {
  return fview_.size();
}
void ProjectInfo::clear_fview() {
  fview_.Clear();
}
const ::y3d::FilterView& ProjectInfo::fview(int index) const {
  // @@protoc_insertion_point(field_get:y3d.ProjectInfo.fview)
  return fview_.Get(index);
}
::y3d::FilterView* ProjectInfo::mutable_fview(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.ProjectInfo.fview)
  return fview_.Mutable(index);
}
::y3d::FilterView* ProjectInfo::add_fview() {
  // @@protoc_insertion_point(field_add:y3d.ProjectInfo.fview)
  return fview_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::FilterView >*
ProjectInfo::mutable_fview() {
  // @@protoc_insertion_point(field_mutable_list:y3d.ProjectInfo.fview)
  return &fview_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::FilterView >&
ProjectInfo::fview() const {
  // @@protoc_insertion_point(field_list:y3d.ProjectInfo.fview)
  return fview_;
}

inline const ProjectInfo* ProjectInfo::internal_default_instance() {
  return &ProjectInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YAreaList::kAreasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YAreaList::YAreaList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YAreaList)
}

void YAreaList::InitAsDefaultInstance() {
}

YAreaList::YAreaList(const YAreaList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YAreaList)
}

void YAreaList::SharedCtor() {
  _cached_size_ = 0;
}

YAreaList::~YAreaList() {
  // @@protoc_insertion_point(destructor:y3d.YAreaList)
  SharedDtor();
}

void YAreaList::SharedDtor() {
}

void YAreaList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YAreaList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YAreaList_descriptor_;
}

const YAreaList& YAreaList::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YAreaList> YAreaList_default_instance_;

YAreaList* YAreaList::New(::google::protobuf::Arena* arena) const {
  YAreaList* n = new YAreaList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YAreaList::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YAreaList)
  areas_.Clear();
}

bool YAreaList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YAreaList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .y3d.YArea areas = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_areas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_areas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_areas;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YAreaList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YAreaList)
  return false;
#undef DO_
}

void YAreaList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YAreaList)
  // repeated .y3d.YArea areas = 1;
  for (unsigned int i = 0, n = this->areas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->areas(i), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.YAreaList)
}

::google::protobuf::uint8* YAreaList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YAreaList)
  // repeated .y3d.YArea areas = 1;
  for (unsigned int i = 0, n = this->areas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->areas(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YAreaList)
  return target;
}

size_t YAreaList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YAreaList)
  size_t total_size = 0;

  // repeated .y3d.YArea areas = 1;
  {
    unsigned int count = this->areas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->areas(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YAreaList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YAreaList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YAreaList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YAreaList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YAreaList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YAreaList)
    UnsafeMergeFrom(*source);
  }
}

void YAreaList::MergeFrom(const YAreaList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YAreaList)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YAreaList::UnsafeMergeFrom(const YAreaList& from) {
  GOOGLE_DCHECK(&from != this);
  areas_.MergeFrom(from.areas_);
}

void YAreaList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YAreaList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YAreaList::CopyFrom(const YAreaList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YAreaList)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YAreaList::IsInitialized() const {

  return true;
}

void YAreaList::Swap(YAreaList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YAreaList::InternalSwap(YAreaList* other) {
  areas_.UnsafeArenaSwap(&other->areas_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YAreaList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YAreaList_descriptor_;
  metadata.reflection = YAreaList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YAreaList

// repeated .y3d.YArea areas = 1;
int YAreaList::areas_size() const {
  return areas_.size();
}
void YAreaList::clear_areas() {
  areas_.Clear();
}
const ::y3d::YArea& YAreaList::areas(int index) const {
  // @@protoc_insertion_point(field_get:y3d.YAreaList.areas)
  return areas_.Get(index);
}
::y3d::YArea* YAreaList::mutable_areas(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.YAreaList.areas)
  return areas_.Mutable(index);
}
::y3d::YArea* YAreaList::add_areas() {
  // @@protoc_insertion_point(field_add:y3d.YAreaList.areas)
  return areas_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::YArea >*
YAreaList::mutable_areas() {
  // @@protoc_insertion_point(field_mutable_list:y3d.YAreaList.areas)
  return &areas_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::YArea >&
YAreaList::areas() const {
  // @@protoc_insertion_point(field_list:y3d.YAreaList.areas)
  return areas_;
}

inline const YAreaList* YAreaList::internal_default_instance() {
  return &YAreaList_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSetting::kExtraFieldNumber;
const int PSetting::kMaxRecentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSetting::PSetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.PSetting)
}

void PSetting::InitAsDefaultInstance() {
}

PSetting::PSetting(const PSetting& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.PSetting)
}

void PSetting::SharedCtor() {
  max_recent_ = 0;
  _cached_size_ = 0;
}

PSetting::~PSetting() {
  // @@protoc_insertion_point(destructor:y3d.PSetting)
  SharedDtor();
}

void PSetting::SharedDtor() {
}

void PSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PSetting::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PSetting_descriptor_;
}

const PSetting& PSetting::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PSetting> PSetting_default_instance_;

PSetting* PSetting::New(::google::protobuf::Arena* arena) const {
  PSetting* n = new PSetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.PSetting)
  max_recent_ = 0;
  extra_.Clear();
}

bool PSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.PSetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .y3d.CustomAttr extra = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_extra;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_max_recent;
        break;
      }

      // optional int32 max_recent = 3;
      case 3: {
        if (tag == 24) {
         parse_max_recent:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_recent_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.PSetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.PSetting)
  return false;
#undef DO_
}

void PSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.PSetting)
  // repeated .y3d.CustomAttr extra = 2;
  for (unsigned int i = 0, n = this->extra_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->extra(i), output);
  }

  // optional int32 max_recent = 3;
  if (this->max_recent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_recent(), output);
  }

  // @@protoc_insertion_point(serialize_end:y3d.PSetting)
}

::google::protobuf::uint8* PSetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.PSetting)
  // repeated .y3d.CustomAttr extra = 2;
  for (unsigned int i = 0, n = this->extra_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->extra(i), false, target);
  }

  // optional int32 max_recent = 3;
  if (this->max_recent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_recent(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.PSetting)
  return target;
}

size_t PSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.PSetting)
  size_t total_size = 0;

  // optional int32 max_recent = 3;
  if (this->max_recent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_recent());
  }

  // repeated .y3d.CustomAttr extra = 2;
  {
    unsigned int count = this->extra_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extra(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PSetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.PSetting)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PSetting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PSetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.PSetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.PSetting)
    UnsafeMergeFrom(*source);
  }
}

void PSetting::MergeFrom(const PSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.PSetting)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PSetting::UnsafeMergeFrom(const PSetting& from) {
  GOOGLE_DCHECK(&from != this);
  extra_.MergeFrom(from.extra_);
  if (from.max_recent() != 0) {
    set_max_recent(from.max_recent());
  }
}

void PSetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.PSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSetting::CopyFrom(const PSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.PSetting)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PSetting::IsInitialized() const {

  return true;
}

void PSetting::Swap(PSetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSetting::InternalSwap(PSetting* other) {
  extra_.UnsafeArenaSwap(&other->extra_);
  std::swap(max_recent_, other->max_recent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PSetting::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PSetting_descriptor_;
  metadata.reflection = PSetting_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PSetting

// repeated .y3d.CustomAttr extra = 2;
int PSetting::extra_size() const {
  return extra_.size();
}
void PSetting::clear_extra() {
  extra_.Clear();
}
const ::y3d::CustomAttr& PSetting::extra(int index) const {
  // @@protoc_insertion_point(field_get:y3d.PSetting.extra)
  return extra_.Get(index);
}
::y3d::CustomAttr* PSetting::mutable_extra(int index) {
  // @@protoc_insertion_point(field_mutable:y3d.PSetting.extra)
  return extra_.Mutable(index);
}
::y3d::CustomAttr* PSetting::add_extra() {
  // @@protoc_insertion_point(field_add:y3d.PSetting.extra)
  return extra_.Add();
}
::google::protobuf::RepeatedPtrField< ::y3d::CustomAttr >*
PSetting::mutable_extra() {
  // @@protoc_insertion_point(field_mutable_list:y3d.PSetting.extra)
  return &extra_;
}
const ::google::protobuf::RepeatedPtrField< ::y3d::CustomAttr >&
PSetting::extra() const {
  // @@protoc_insertion_point(field_list:y3d.PSetting.extra)
  return extra_;
}

// optional int32 max_recent = 3;
void PSetting::clear_max_recent() {
  max_recent_ = 0;
}
::google::protobuf::int32 PSetting::max_recent() const {
  // @@protoc_insertion_point(field_get:y3d.PSetting.max_recent)
  return max_recent_;
}
void PSetting::set_max_recent(::google::protobuf::int32 value) {
  
  max_recent_ = value;
  // @@protoc_insertion_point(field_set:y3d.PSetting.max_recent)
}

inline const PSetting* PSetting::internal_default_instance() {
  return &PSetting_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YSystem::kDefaultInfoFieldNumber;
const int YSystem::kDefaultSettingFieldNumber;
const int YSystem::kNamePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YSystem::YSystem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_y3d_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:y3d.YSystem)
}

void YSystem::InitAsDefaultInstance() {
  default_info_ = const_cast< ::y3d::ProjectInfo*>(
      ::y3d::ProjectInfo::internal_default_instance());
  default_setting_ = const_cast< ::y3d::PSetting*>(
      ::y3d::PSetting::internal_default_instance());
}

YSystem::YSystem(const YSystem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:y3d.YSystem)
}

void YSystem::SharedCtor() {
  name_path_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  name_path_.SetEntryDescriptor(
      &::y3d::YSystem_NamePathEntry_descriptor_);
  default_info_ = NULL;
  default_setting_ = NULL;
  _cached_size_ = 0;
}

YSystem::~YSystem() {
  // @@protoc_insertion_point(destructor:y3d.YSystem)
  SharedDtor();
}

void YSystem::SharedDtor() {
  if (this != &YSystem_default_instance_.get()) {
    delete default_info_;
    delete default_setting_;
  }
}

void YSystem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YSystem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YSystem_descriptor_;
}

const YSystem& YSystem::default_instance() {
  protobuf_InitDefaults_y3d_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<YSystem> YSystem_default_instance_;

YSystem* YSystem::New(::google::protobuf::Arena* arena) const {
  YSystem* n = new YSystem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YSystem::Clear() {
// @@protoc_insertion_point(message_clear_start:y3d.YSystem)
  if (GetArenaNoVirtual() == NULL && default_info_ != NULL) delete default_info_;
  default_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && default_setting_ != NULL) delete default_setting_;
  default_setting_ = NULL;
  name_path_.Clear();
}

bool YSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:y3d.YSystem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .y3d.ProjectInfo default_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_default_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_default_setting;
        break;
      }

      // optional .y3d.PSetting default_setting = 2;
      case 2: {
        if (tag == 18) {
         parse_default_setting:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_default_setting()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name_path;
        break;
      }

      // map<string, string> name_path = 3;
      case 3: {
        if (tag == 26) {
         parse_name_path:
          DO_(input->IncrementRecursionDepth());
         parse_loop_name_path:
          YSystem_NamePathEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&name_path_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YSystem.NamePathEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "y3d.YSystem.NamePathEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_name_path;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:y3d.YSystem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:y3d.YSystem)
  return false;
#undef DO_
}

void YSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:y3d.YSystem)
  // optional .y3d.ProjectInfo default_info = 1;
  if (this->has_default_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->default_info_, output);
  }

  // optional .y3d.PSetting default_setting = 2;
  if (this->has_default_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->default_setting_, output);
  }

  // map<string, string> name_path = 3;
  if (!this->name_path().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YSystem.NamePathEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YSystem.NamePathEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->name_path().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->name_path().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->name_path().begin();
          it != this->name_path().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YSystem_NamePathEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(name_path_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YSystem_NamePathEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->name_path().begin();
          it != this->name_path().end(); ++it) {
        entry.reset(name_path_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:y3d.YSystem)
}

::google::protobuf::uint8* YSystem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:y3d.YSystem)
  // optional .y3d.ProjectInfo default_info = 1;
  if (this->has_default_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->default_info_, false, target);
  }

  // optional .y3d.PSetting default_setting = 2;
  if (this->has_default_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->default_setting_, false, target);
  }

  // map<string, string> name_path = 3;
  if (!this->name_path().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YSystem.NamePathEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "y3d.YSystem.NamePathEntry.value");
      }
    };

    if (deterministic &&
        this->name_path().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->name_path().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->name_path().begin();
          it != this->name_path().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<YSystem_NamePathEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(name_path_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<YSystem_NamePathEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->name_path().begin();
          it != this->name_path().end(); ++it) {
        entry.reset(name_path_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:y3d.YSystem)
  return target;
}

size_t YSystem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:y3d.YSystem)
  size_t total_size = 0;

  // optional .y3d.ProjectInfo default_info = 1;
  if (this->has_default_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->default_info_);
  }

  // optional .y3d.PSetting default_setting = 2;
  if (this->has_default_setting()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->default_setting_);
  }

  // map<string, string> name_path = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->name_path_size());
  {
    ::google::protobuf::scoped_ptr<YSystem_NamePathEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->name_path().begin();
        it != this->name_path().end(); ++it) {
      entry.reset(name_path_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YSystem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:y3d.YSystem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const YSystem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YSystem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:y3d.YSystem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:y3d.YSystem)
    UnsafeMergeFrom(*source);
  }
}

void YSystem::MergeFrom(const YSystem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:y3d.YSystem)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void YSystem::UnsafeMergeFrom(const YSystem& from) {
  GOOGLE_DCHECK(&from != this);
  name_path_.MergeFrom(from.name_path_);
  if (from.has_default_info()) {
    mutable_default_info()->::y3d::ProjectInfo::MergeFrom(from.default_info());
  }
  if (from.has_default_setting()) {
    mutable_default_setting()->::y3d::PSetting::MergeFrom(from.default_setting());
  }
}

void YSystem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:y3d.YSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YSystem::CopyFrom(const YSystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:y3d.YSystem)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool YSystem::IsInitialized() const {

  return true;
}

void YSystem::Swap(YSystem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YSystem::InternalSwap(YSystem* other) {
  std::swap(default_info_, other->default_info_);
  std::swap(default_setting_, other->default_setting_);
  name_path_.Swap(&other->name_path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YSystem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YSystem_descriptor_;
  metadata.reflection = YSystem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YSystem

// optional .y3d.ProjectInfo default_info = 1;
bool YSystem::has_default_info() const {
  return this != internal_default_instance() && default_info_ != NULL;
}
void YSystem::clear_default_info() {
  if (GetArenaNoVirtual() == NULL && default_info_ != NULL) delete default_info_;
  default_info_ = NULL;
}
const ::y3d::ProjectInfo& YSystem::default_info() const {
  // @@protoc_insertion_point(field_get:y3d.YSystem.default_info)
  return default_info_ != NULL ? *default_info_
                         : *::y3d::ProjectInfo::internal_default_instance();
}
::y3d::ProjectInfo* YSystem::mutable_default_info() {
  
  if (default_info_ == NULL) {
    default_info_ = new ::y3d::ProjectInfo;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YSystem.default_info)
  return default_info_;
}
::y3d::ProjectInfo* YSystem::release_default_info() {
  // @@protoc_insertion_point(field_release:y3d.YSystem.default_info)
  
  ::y3d::ProjectInfo* temp = default_info_;
  default_info_ = NULL;
  return temp;
}
void YSystem::set_allocated_default_info(::y3d::ProjectInfo* default_info) {
  delete default_info_;
  default_info_ = default_info;
  if (default_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YSystem.default_info)
}

// optional .y3d.PSetting default_setting = 2;
bool YSystem::has_default_setting() const {
  return this != internal_default_instance() && default_setting_ != NULL;
}
void YSystem::clear_default_setting() {
  if (GetArenaNoVirtual() == NULL && default_setting_ != NULL) delete default_setting_;
  default_setting_ = NULL;
}
const ::y3d::PSetting& YSystem::default_setting() const {
  // @@protoc_insertion_point(field_get:y3d.YSystem.default_setting)
  return default_setting_ != NULL ? *default_setting_
                         : *::y3d::PSetting::internal_default_instance();
}
::y3d::PSetting* YSystem::mutable_default_setting() {
  
  if (default_setting_ == NULL) {
    default_setting_ = new ::y3d::PSetting;
  }
  // @@protoc_insertion_point(field_mutable:y3d.YSystem.default_setting)
  return default_setting_;
}
::y3d::PSetting* YSystem::release_default_setting() {
  // @@protoc_insertion_point(field_release:y3d.YSystem.default_setting)
  
  ::y3d::PSetting* temp = default_setting_;
  default_setting_ = NULL;
  return temp;
}
void YSystem::set_allocated_default_setting(::y3d::PSetting* default_setting) {
  delete default_setting_;
  default_setting_ = default_setting;
  if (default_setting) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:y3d.YSystem.default_setting)
}

// map<string, string> name_path = 3;
int YSystem::name_path_size() const {
  return name_path_.size();
}
void YSystem::clear_name_path() {
  name_path_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
YSystem::name_path() const {
  // @@protoc_insertion_point(field_map:y3d.YSystem.name_path)
  return name_path_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
YSystem::mutable_name_path() {
  // @@protoc_insertion_point(field_mutable_map:y3d.YSystem.name_path)
  return name_path_.MutableMap();
}

inline const YSystem* YSystem::internal_default_instance() {
  return &YSystem_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace y3d

// @@protoc_insertion_point(global_scope)

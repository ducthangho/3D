// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yservice.proto

#ifndef PROTOBUF_yservice_2eproto__INCLUDED
#define PROTOBUF_yservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "y3d.pb.h"
// @@protoc_insertion_point(includes)

namespace y3d {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_yservice_2eproto();
void protobuf_InitDefaults_yservice_2eproto();
void protobuf_AssignDesc_yservice_2eproto();
void protobuf_ShutdownFile_yservice_2eproto();

class RenameParam;
class ResultReply;

// ===================================================================

class ResultReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:y3d.ResultReply) */ {
 public:
  ResultReply();
  virtual ~ResultReply();

  ResultReply(const ResultReply& from);

  inline ResultReply& operator=(const ResultReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultReply& default_instance();

  static const ResultReply* internal_default_instance();

  void Swap(ResultReply* other);

  // implements Message ----------------------------------------------

  inline ResultReply* New() const { return New(NULL); }

  ResultReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResultReply& from);
  void MergeFrom(const ResultReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResultReply* other);
  void UnsafeMergeFrom(const ResultReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  bool error() const;
  void set_error(bool value);

  // optional string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:y3d.ResultReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  bool error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_yservice_2eproto_impl();
  friend void  protobuf_AddDesc_yservice_2eproto_impl();
  friend void protobuf_AssignDesc_yservice_2eproto();
  friend void protobuf_ShutdownFile_yservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResultReply> ResultReply_default_instance_;

// -------------------------------------------------------------------

class RenameParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:y3d.RenameParam) */ {
 public:
  RenameParam();
  virtual ~RenameParam();

  RenameParam(const RenameParam& from);

  inline RenameParam& operator=(const RenameParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameParam& default_instance();

  static const RenameParam* internal_default_instance();

  void Swap(RenameParam* other);

  // implements Message ----------------------------------------------

  inline RenameParam* New() const { return New(NULL); }

  RenameParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameParam& from);
  void MergeFrom(const RenameParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RenameParam* other);
  void UnsafeMergeFrom(const RenameParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool useSelect = 1;
  void clear_useselect();
  static const int kUseSelectFieldNumber = 1;
  bool useselect() const;
  void set_useselect(bool value);

  // @@protoc_insertion_point(class_scope:y3d.RenameParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool useselect_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_yservice_2eproto_impl();
  friend void  protobuf_AddDesc_yservice_2eproto_impl();
  friend void protobuf_AssignDesc_yservice_2eproto();
  friend void protobuf_ShutdownFile_yservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RenameParam> RenameParam_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ResultReply

// optional bool error = 1;
inline void ResultReply::clear_error() {
  error_ = false;
}
inline bool ResultReply::error() const {
  // @@protoc_insertion_point(field_get:y3d.ResultReply.error)
  return error_;
}
inline void ResultReply::set_error(bool value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:y3d.ResultReply.error)
}

// optional string message = 2;
inline void ResultReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResultReply::message() const {
  // @@protoc_insertion_point(field_get:y3d.ResultReply.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResultReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:y3d.ResultReply.message)
}
inline void ResultReply::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:y3d.ResultReply.message)
}
inline void ResultReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:y3d.ResultReply.message)
}
inline ::std::string* ResultReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:y3d.ResultReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResultReply::release_message() {
  // @@protoc_insertion_point(field_release:y3d.ResultReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResultReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:y3d.ResultReply.message)
}

inline const ResultReply* ResultReply::internal_default_instance() {
  return &ResultReply_default_instance_.get();
}
// -------------------------------------------------------------------

// RenameParam

// optional bool useSelect = 1;
inline void RenameParam::clear_useselect() {
  useselect_ = false;
}
inline bool RenameParam::useselect() const {
  // @@protoc_insertion_point(field_get:y3d.RenameParam.useSelect)
  return useselect_;
}
inline void RenameParam::set_useselect(bool value) {
  
  useselect_ = value;
  // @@protoc_insertion_point(field_set:y3d.RenameParam.useSelect)
}

inline const RenameParam* RenameParam::internal_default_instance() {
  return &RenameParam_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace y3d

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_yservice_2eproto__INCLUDED
